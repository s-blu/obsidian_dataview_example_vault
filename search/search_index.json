{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Obsidian Example Vault for Dataview Queries \u00b6 Good day! This example vault showcases different usages of the Dataview plugin for Obsidian.md . You'll find everything from more basic syntactical examples to complex javascript supported solutions to help you build your own dataview querys that are tailor-made for your needs and data. We hope you enjoy! For the optimal experience, open this vault in Obsidian! \u00b6 Download the vault here Open the vault in Obsidian via \"Open another vault -> Open folder as vault\" Trust us. :) When Obsidian opens the settings, hit the switch on \"Dataview\" to enable the plugin Done! The example vault is now available to you in its purest and most useful form! Choose correct vault root Be sure to choose the folder that directly contains 00 Meta , 10 Example Data etc as a vault. These folders should be the most top folder level when viewing the vault in Obsidian, otherwise queries won't find their data. Wonder where to start? Good starting points are our Use Case Overview , the Dataview Queries Overview or the Topic Overview . You can, of course, add and edit files to your liking to try things out! Are you new to dataview? Have a look at Learn the Basics ! Community effort This vault is a project that lives through the community. Please feel encouraged helping us building it to a useful resource! Find out more under Contribution Online Version \u00b6 While I heartly recommend to download the vault, if you only want to browse through it or want to link a query to someone, the vault is deployed as a mkdocs page: Online Version of the Obsidian Example Vault To see the results of the queries, you need to download the vault. Documentation & FAQ \u00b6 You need more details on how dataview works exactly? Head over to the official documentation. Also, we collected some more Resources , as well as some Tips, tricks and interesting facts ! You have some sort of question? Refer to the FAQ . Contributing \u00b6 If you found an issue or want to add a query you think could be helpful for others, be very welcome to get involved! You want to help, but don't know what to do? Have a look at the Vault To Do . Read more about how to contribute under 00 Meta/Vault Infos/Contribution .","title":"Obsidian Example Vault for Dataview Queries"},{"location":"#obsidian-example-vault-for-dataview-queries","text":"Good day! This example vault showcases different usages of the Dataview plugin for Obsidian.md . You'll find everything from more basic syntactical examples to complex javascript supported solutions to help you build your own dataview querys that are tailor-made for your needs and data. We hope you enjoy!","title":"Obsidian Example Vault for Dataview Queries"},{"location":"#for-the-optimal-experience-open-this-vault-in-obsidian","text":"Download the vault here Open the vault in Obsidian via \"Open another vault -> Open folder as vault\" Trust us. :) When Obsidian opens the settings, hit the switch on \"Dataview\" to enable the plugin Done! The example vault is now available to you in its purest and most useful form! Choose correct vault root Be sure to choose the folder that directly contains 00 Meta , 10 Example Data etc as a vault. These folders should be the most top folder level when viewing the vault in Obsidian, otherwise queries won't find their data. Wonder where to start? Good starting points are our Use Case Overview , the Dataview Queries Overview or the Topic Overview . You can, of course, add and edit files to your liking to try things out! Are you new to dataview? Have a look at Learn the Basics ! Community effort This vault is a project that lives through the community. Please feel encouraged helping us building it to a useful resource! Find out more under Contribution","title":"For the optimal experience, open this vault in Obsidian!"},{"location":"#online-version","text":"While I heartly recommend to download the vault, if you only want to browse through it or want to link a query to someone, the vault is deployed as a mkdocs page: Online Version of the Obsidian Example Vault To see the results of the queries, you need to download the vault.","title":"Online Version"},{"location":"#documentation-faq","text":"You need more details on how dataview works exactly? Head over to the official documentation. Also, we collected some more Resources , as well as some Tips, tricks and interesting facts ! You have some sort of question? Refer to the FAQ .","title":"Documentation &amp; FAQ"},{"location":"#contributing","text":"If you found an issue or want to add a query you think could be helpful for others, be very welcome to get involved! You want to help, but don't know what to do? Have a look at the Vault To Do . Read more about how to contribute under 00 Meta/Vault Infos/Contribution .","title":"Contributing"},{"location":"00%20Meta/Vault%20To%20Do/","text":"Organization \u00b6 [ ] Use Cases [ ] Weekly Notes [ ] A Person page (last contact, birthday, ...) Queries \u00b6 [ ] Add the examples from the Dataview documentation (with back reference) for easy try-outs [ ] Add the possibility to burn out dataview queries with markdownTable and templater (also here ) with a back reference, explanation and example code [ ] Add the usage of Object.assign for duplicating entries into custom made groups and the metadata based groups as a variant - and try if dv.clone is a good alternative to Object.assign [ ] Add a example of the different frontmatter possibilities (list, multiline, escaped links (\"[[link]]\") etc.) and how they get rendered in lists and tables: Frontmatter Overview [ ] Add this thing about the earlierst and latest outlink I don't fully understand [ ] Add this thing [ ] Add grouped, nested tables [ ] Add the dynamic query based on a tag in an inline field [ ] Add an example about indexing through a link, see here [ ] How to select or exclude the current file [ ] Where is file.day coming from, how to set and how to use it [ ] Add sum up number of pages fulfilling certain criteria [ ] Add a page about transforming dates into a format dataview recognizes [ ] Add List activity log from projects in daily note via a date header [ ] Add student assignment overview [ ] Add a page how to format dates with reference to https://moment.github.io/luxon/#/formatting?id=table-of-tokens (see also here ) [ ] Add a page about sub tasks and their behaviour [ ] Add a page about flattening objects or nested list (see Example FLATTEN Queries#About flattening nested fields for the problem) Unresolved links \u00b6 A note is referring to a non-existing file, probably to a file that explains something in detail. Find out the context of the unresolved link and see if you either can create the fitting file or exchange the dead link with a in-place explanation. TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"20 Dataview Queries\" OR \"30 Dataview Resources\" FLATTEN file.outlinks as outlinks WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks","title":"Vault To Do"},{"location":"00%20Meta/Vault%20To%20Do/#organization","text":"[ ] Use Cases [ ] Weekly Notes [ ] A Person page (last contact, birthday, ...)","title":"Organization"},{"location":"00%20Meta/Vault%20To%20Do/#queries","text":"[ ] Add the examples from the Dataview documentation (with back reference) for easy try-outs [ ] Add the possibility to burn out dataview queries with markdownTable and templater (also here ) with a back reference, explanation and example code [ ] Add the usage of Object.assign for duplicating entries into custom made groups and the metadata based groups as a variant - and try if dv.clone is a good alternative to Object.assign [ ] Add a example of the different frontmatter possibilities (list, multiline, escaped links (\"[[link]]\") etc.) and how they get rendered in lists and tables: Frontmatter Overview [ ] Add this thing about the earlierst and latest outlink I don't fully understand [ ] Add this thing [ ] Add grouped, nested tables [ ] Add the dynamic query based on a tag in an inline field [ ] Add an example about indexing through a link, see here [ ] How to select or exclude the current file [ ] Where is file.day coming from, how to set and how to use it [ ] Add sum up number of pages fulfilling certain criteria [ ] Add a page about transforming dates into a format dataview recognizes [ ] Add List activity log from projects in daily note via a date header [ ] Add student assignment overview [ ] Add a page how to format dates with reference to https://moment.github.io/luxon/#/formatting?id=table-of-tokens (see also here ) [ ] Add a page about sub tasks and their behaviour [ ] Add a page about flattening objects or nested list (see Example FLATTEN Queries#About flattening nested fields for the problem)","title":"Queries"},{"location":"00%20Meta/Vault%20To%20Do/#unresolved-links","text":"A note is referring to a non-existing file, probably to a file that explains something in detail. Find out the context of the unresolved link and see if you either can create the fitting file or exchange the dead link with a in-place explanation. TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"20 Dataview Queries\" OR \"30 Dataview Resources\" FLATTEN file.outlinks as outlinks WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks","title":"Unresolved links"},{"location":"00%20Meta/privacy/","text":"Privacy Policy \u00b6 Contact \u00b6 dataviewexamplevault (at) s-blu.de Personal data storage and processing \u00b6 Collection and processing of your personal information is carried out in accordance with the laws of the European Union and Germany. We are collecting data to provide our services as well for statistical purposes. Processing of visiting technical data \u00b6 Records of your IP address, time of visit, browser settings, operational system and other technical information is saved in the database when you visit https://s-blu.github.io/obsidian_dataview_example_vault/. This data is necessary for the correct display of the website\u2019s content. It is impossible to identify the person of the visitor using this data. Processing of data for analytics (Matomo) \u00b6 https://s-blu.github.io/obsidian_dataview_example_vault/ uses Matomo Analytics for statistical purposes, to improve our site and to recognize and stop any misuse. When you visit our site, we will store: Your anonymised IP address (anonymised by 2 bytes) Date and time of the request Search input URL of the page being viewed (Page URL) URL of the page that was viewed prior to the current page (Referrer URL) Screen resolution being used Time in your timezone Links to an outside domain that were clicked Pages generation time (the time it takes for webpages to be generated by the webserver and then downloaded by the user: Page speed) Location of the user: country, region, city, approximate latitude and longitude (Geolocation) Main Language of the browser being used (Accept-Language header) User Agent of the browser being used (User-Agent header) Cookies processing \u00b6 https://s-blu.github.io/obsidian_dataview_example_vault/ does not use any cookies. Processing of personal data by other services \u00b6 This website is hosted on Github Pages, which is part of Github. Please refer to Githubs Privacy Policy for more information: https://docs.github.com/en/free-pro-team@latest/github/site-policy/github-privacy-statement Data collected by these services may be provided to other services within those organizations. They can use the data for advertising personalization of their own advertising network. You can learn about user agreements of those organizations on their websites. You can also refuse their collection of your personal data. We do not pass any personal data to other organizations or services, which are not listed in this privacy policy. As an exception, the collected data may be provided on a lawful request of state authorities, that are authorized to request such information. Links to other websites Our website https://s-blu.github.io/obsidian_dataview_example_vault/ may contain links to other websites, which are not under our control. We are not responsible for the content of these websites. We recommend you familiarize yourself with the privacy policy of every website that you visit, if such policy exists. Changes to the privacy policy From time to time, our website https://s-blu.github.io/obsidian_dataview_example_vault/ may update our privacy policy. We inform about any changes to the privacy policy, placed on this webpage. We are monitoring any changes in legislation, which is related to personal data in European Union and Germany. If you have entered any of your personal data on our website, we will inform you about the changes in our privacy policy. If your personal data, and more specifically, your contact information was not entered or entered incorrectly, we will not be able to contact you. Feedback and final clauses \u00b6 You can contact the administration of https://s-blu.github.io/obsidian_dataview_example_vault/ regarding any questions related to privacy policy on: dataviewexamplevault-privacy@s-blu.de. If you do not agree with this privacy policy, you cannot use this services. In this case you should avoid visiting our website. This document was produced using privacy policy online generator Profiset.org","title":"Privacy Policy"},{"location":"00%20Meta/privacy/#privacy-policy","text":"","title":"Privacy Policy"},{"location":"00%20Meta/privacy/#contact","text":"dataviewexamplevault (at) s-blu.de","title":"Contact"},{"location":"00%20Meta/privacy/#personal-data-storage-and-processing","text":"Collection and processing of your personal information is carried out in accordance with the laws of the European Union and Germany. We are collecting data to provide our services as well for statistical purposes.","title":"Personal data storage and processing"},{"location":"00%20Meta/privacy/#processing-of-visiting-technical-data","text":"Records of your IP address, time of visit, browser settings, operational system and other technical information is saved in the database when you visit https://s-blu.github.io/obsidian_dataview_example_vault/. This data is necessary for the correct display of the website\u2019s content. It is impossible to identify the person of the visitor using this data.","title":"Processing of visiting technical data"},{"location":"00%20Meta/privacy/#processing-of-data-for-analytics-matomo","text":"https://s-blu.github.io/obsidian_dataview_example_vault/ uses Matomo Analytics for statistical purposes, to improve our site and to recognize and stop any misuse. When you visit our site, we will store: Your anonymised IP address (anonymised by 2 bytes) Date and time of the request Search input URL of the page being viewed (Page URL) URL of the page that was viewed prior to the current page (Referrer URL) Screen resolution being used Time in your timezone Links to an outside domain that were clicked Pages generation time (the time it takes for webpages to be generated by the webserver and then downloaded by the user: Page speed) Location of the user: country, region, city, approximate latitude and longitude (Geolocation) Main Language of the browser being used (Accept-Language header) User Agent of the browser being used (User-Agent header)","title":"Processing of data for analytics (Matomo)"},{"location":"00%20Meta/privacy/#cookies-processing","text":"https://s-blu.github.io/obsidian_dataview_example_vault/ does not use any cookies.","title":"Cookies processing"},{"location":"00%20Meta/privacy/#processing-of-personal-data-by-other-services","text":"This website is hosted on Github Pages, which is part of Github. Please refer to Githubs Privacy Policy for more information: https://docs.github.com/en/free-pro-team@latest/github/site-policy/github-privacy-statement Data collected by these services may be provided to other services within those organizations. They can use the data for advertising personalization of their own advertising network. You can learn about user agreements of those organizations on their websites. You can also refuse their collection of your personal data. We do not pass any personal data to other organizations or services, which are not listed in this privacy policy. As an exception, the collected data may be provided on a lawful request of state authorities, that are authorized to request such information. Links to other websites Our website https://s-blu.github.io/obsidian_dataview_example_vault/ may contain links to other websites, which are not under our control. We are not responsible for the content of these websites. We recommend you familiarize yourself with the privacy policy of every website that you visit, if such policy exists. Changes to the privacy policy From time to time, our website https://s-blu.github.io/obsidian_dataview_example_vault/ may update our privacy policy. We inform about any changes to the privacy policy, placed on this webpage. We are monitoring any changes in legislation, which is related to personal data in European Union and Germany. If you have entered any of your personal data on our website, we will inform you about the changes in our privacy policy. If your personal data, and more specifically, your contact information was not entered or entered incorrectly, we will not be able to contact you.","title":"Processing of personal data by other services"},{"location":"00%20Meta/privacy/#feedback-and-final-clauses","text":"You can contact the administration of https://s-blu.github.io/obsidian_dataview_example_vault/ regarding any questions related to privacy policy on: dataviewexamplevault-privacy@s-blu.de. If you do not agree with this privacy policy, you cannot use this services. In this case you should avoid visiting our website. This document was produced using privacy policy online generator Profiset.org","title":"Feedback and final clauses"},{"location":"00%20Meta/Vault%20Infos/Contribution/","text":"How to contribute \u00b6 First of all, thanks for considering sharing your knowledge! For adding a query to the vault, there are two things to do: First, add the query with fitting test data so it produces results and secondly, share the query so it'll become part of the example vault. Vault To Do Want to help, but don't have a cool query at hand? Have a look at the Vault To Do - there's always something to work on! :) Get a local copy \u00b6 First of all, you need to get yourself a local copy of the example vault. There are two ways of doing this. Get a local copy by downloading the vault. Follow the [[README#Usage]] explanation for that. Get a copy via GitHub - this is more technical, but makes it possible to update the vault to the newest state and makes sharing your contribution easier. Get the example vault via GitHub \u00b6 You'll need a GitHub Account to follow these steps. If you're not git-savvy, it's probably easier for you to use the GitHub Desktop application for the following steps. Create a fork and clone it of the example vault . Now you should have a local copy you can work with. Make your changes like described below! Add a query \u00b6 When you want to add a brand new query, please do the following: Check via search if there's maybe already a file with the same goal. Then it might be best to add your query as a Variant of this existing file. A Variant of a query does, in the end, produces the same or a very similar/enhanced result like the Basic query, but adds more convenient, better readability, better usability or similar. If you don't find anything, create a new file under folder \"20 Dataview Queries\" Give it a descriptive name that describes the general goal of your query. Read the existing titles to get an idea. Insert the provided dataview query template by hitting CTRL + T Follow the checklist of the template If necessary, add test data for your query. See Contribution#Add test data for details Done - good job! The second step is to share your contribution with us Integrating other community plugins \u00b6 This is a vault about dataview, but one of dataviews strength is it versatility and usability with other plugins. Still, we want to keep this vault as slim as possible, so if you want to add a query that requires an additional plugin, please do the following: 1. Install the additional plugin in your local copy 2. Write the queries and take screenshots of the results 3. Add these screenshots to your query file 4. Add a hint at the top of the query page that the installation of plugin XY is necessary to get these working The plugin files will be automatically ignored and not commited, so that the only plugin contained in the vault is dataview. Everyone who has interest in experience these queries can install the plugin for themselves. A good example for this are the chart pages: Plot a Category-Series DQL query Add test data \u00b6 Probably, your query will need some specific test data. You can either add new files or expand existing ones. Please keep these points in mind: Do not delete or change existing test data, even it if looks broken. It could be that a query page needs these broken data sets to showcase how to handle such edge cases Always add test data in a sub folder of 10 Example Data , i.e. 10 Example Data/recipes . You're free to create new ones for this. Please always add your test data in a sub folder, even if you use tags for querying. It provides a better overview and makes maintenance easier It's preferable if your test data is general enough so it can potentially extended for new queries, but using very case specific test data is alright, too. Please make sure your test data does not hurt anyone, doesn't contain personal data and is not illegal (i.e. Copyright infringement) Script to generate semi-random test data There is a python script around, that lets you generate test data with some random values based on one or more template files. Most of the data under 10 Example data/dailys and 10 Example Data/books were generated with it - maybe it's a good fit for you, too. More info on the script itself. Share your contribution \u00b6 You've added a new query or enhanced the vault in some other way. Thanks a lot! Now, onto sharing your contribution. When you used a downloaded local copy \u00b6 If you used a static copy of the vault, but still own a GitHub account, please proceed as follows: Go to issues in the dataview example vault repository Hit \"New Issue\" on the right Give the issue a name that reflect your changes, i.e. \"Add query about (title of query file)\" Be welcome to give us a bit context in the description, i.e. what the query does Attach all files you've created or changed to the issue Hit \"Submit new issue\" We'll review your changed files and integrate them into the dataview example vault if everything is alright If you can't share your contribution via GitHub , drop a message in the #dataview thread of the Obsidian Discord and somebody will take care of that for you. Mind though, it's easiest for the maintainers if you share your contribution via GitHub. When you've created a fork \u00b6 Push your changes to your fork . Now, your contribution is available online, but not in the original example vault yet! For that, you need to create a pull request against the original repository. Wait for our review - we'll merge your changes if everything is alright and make your contribution available for everyone!","title":"How to contribute"},{"location":"00%20Meta/Vault%20Infos/Contribution/#how-to-contribute","text":"First of all, thanks for considering sharing your knowledge! For adding a query to the vault, there are two things to do: First, add the query with fitting test data so it produces results and secondly, share the query so it'll become part of the example vault. Vault To Do Want to help, but don't have a cool query at hand? Have a look at the Vault To Do - there's always something to work on! :)","title":"How to contribute"},{"location":"00%20Meta/Vault%20Infos/Contribution/#get-a-local-copy","text":"First of all, you need to get yourself a local copy of the example vault. There are two ways of doing this. Get a local copy by downloading the vault. Follow the [[README#Usage]] explanation for that. Get a copy via GitHub - this is more technical, but makes it possible to update the vault to the newest state and makes sharing your contribution easier.","title":"Get a local copy"},{"location":"00%20Meta/Vault%20Infos/Contribution/#get-the-example-vault-via-github","text":"You'll need a GitHub Account to follow these steps. If you're not git-savvy, it's probably easier for you to use the GitHub Desktop application for the following steps. Create a fork and clone it of the example vault . Now you should have a local copy you can work with. Make your changes like described below!","title":"Get the example vault via GitHub"},{"location":"00%20Meta/Vault%20Infos/Contribution/#add-a-query","text":"When you want to add a brand new query, please do the following: Check via search if there's maybe already a file with the same goal. Then it might be best to add your query as a Variant of this existing file. A Variant of a query does, in the end, produces the same or a very similar/enhanced result like the Basic query, but adds more convenient, better readability, better usability or similar. If you don't find anything, create a new file under folder \"20 Dataview Queries\" Give it a descriptive name that describes the general goal of your query. Read the existing titles to get an idea. Insert the provided dataview query template by hitting CTRL + T Follow the checklist of the template If necessary, add test data for your query. See Contribution#Add test data for details Done - good job! The second step is to share your contribution with us","title":"Add a query"},{"location":"00%20Meta/Vault%20Infos/Contribution/#integrating-other-community-plugins","text":"This is a vault about dataview, but one of dataviews strength is it versatility and usability with other plugins. Still, we want to keep this vault as slim as possible, so if you want to add a query that requires an additional plugin, please do the following: 1. Install the additional plugin in your local copy 2. Write the queries and take screenshots of the results 3. Add these screenshots to your query file 4. Add a hint at the top of the query page that the installation of plugin XY is necessary to get these working The plugin files will be automatically ignored and not commited, so that the only plugin contained in the vault is dataview. Everyone who has interest in experience these queries can install the plugin for themselves. A good example for this are the chart pages: Plot a Category-Series DQL query","title":"Integrating other community plugins"},{"location":"00%20Meta/Vault%20Infos/Contribution/#add-test-data","text":"Probably, your query will need some specific test data. You can either add new files or expand existing ones. Please keep these points in mind: Do not delete or change existing test data, even it if looks broken. It could be that a query page needs these broken data sets to showcase how to handle such edge cases Always add test data in a sub folder of 10 Example Data , i.e. 10 Example Data/recipes . You're free to create new ones for this. Please always add your test data in a sub folder, even if you use tags for querying. It provides a better overview and makes maintenance easier It's preferable if your test data is general enough so it can potentially extended for new queries, but using very case specific test data is alright, too. Please make sure your test data does not hurt anyone, doesn't contain personal data and is not illegal (i.e. Copyright infringement) Script to generate semi-random test data There is a python script around, that lets you generate test data with some random values based on one or more template files. Most of the data under 10 Example data/dailys and 10 Example Data/books were generated with it - maybe it's a good fit for you, too. More info on the script itself.","title":"Add test data"},{"location":"00%20Meta/Vault%20Infos/Contribution/#share-your-contribution","text":"You've added a new query or enhanced the vault in some other way. Thanks a lot! Now, onto sharing your contribution.","title":"Share your contribution"},{"location":"00%20Meta/Vault%20Infos/Contribution/#when-you-used-a-downloaded-local-copy","text":"If you used a static copy of the vault, but still own a GitHub account, please proceed as follows: Go to issues in the dataview example vault repository Hit \"New Issue\" on the right Give the issue a name that reflect your changes, i.e. \"Add query about (title of query file)\" Be welcome to give us a bit context in the description, i.e. what the query does Attach all files you've created or changed to the issue Hit \"Submit new issue\" We'll review your changed files and integrate them into the dataview example vault if everything is alright If you can't share your contribution via GitHub , drop a message in the #dataview thread of the Obsidian Discord and somebody will take care of that for you. Mind though, it's easiest for the maintainers if you share your contribution via GitHub.","title":"When you used a downloaded local copy"},{"location":"00%20Meta/Vault%20Infos/Contribution/#when-youve-created-a-fork","text":"Push your changes to your fork . Now, your contribution is available online, but not in the original example vault yet! For that, you need to create a pull request against the original repository. Wait for our review - we'll merge your changes if everything is alright and make your contribution available for everyone!","title":"When you've created a fork"},{"location":"00%20Meta/Vault%20Infos/FAQ/","text":"FAQ \u00b6 What is this about? What is Dataview? Dataview is a very popular community plugin for Obsidian.md . It lets you query your data inside your vault and can help you in various, powerful ways. Its potential is almost unlimited due to dataviews support for javascript queries Who is the maintainer of this vault? I'm Sam, a regular Obsidian user. You'll sometimes catch me in the dataview thread of the Obsidian Discord. I hope I won't stay the only maintainer for long - this was AB1908 idea in the first place, anyway. Why does this vault exists? Discord is not the best place to store information for later access and while there exists an extensive Forum Thread for sharing Dataview queries, it is not super intuitive and user friendly to search in it. The idea is to instead leverage Obsidians immense strength in storing data, making it easily accessible and searchable. As a bonus, we can interconnect what belongs together so it's a breeze for you to find the dataview example you need - and you can try them out, right in place, tweak them to your liking to see what's happening and how things work. Why is this not part of the Obsidian Hub? While I'd be delighted to get a reference to this vault inside the hub somewhen, not integrating it right away as multiple reasons: - This vault contains a vast amount of useless example data and I don't think the Hub is the right place for such data - To my knowledge, Dataview Queries do not render on publish instances, so you'd need to download the vault anyway - Dataview shines when you tailor it to your needs. In order to do so, it's most helpful if you can play around data and queries, which is only possible in a local copy of the vault. - Right now, this vault is only a planned project without much value just yet. It should mature to something valuable before we put it somewhere I have a cool query. How do I add it? Nice! Head over to Contribution for an explanation how you can add new queries and how to share contributions. I'm trying to achieve something with dataview, but it doesnt work! You can try our tips on trouble shooting queries . If that doesn't work out, hop over to the Obsidian Community and ask for help either in the forum or Discord. The Obsidian Community is a very helpful lot, so go ask them!","title":"FAQ"},{"location":"00%20Meta/Vault%20Infos/FAQ/#faq","text":"What is this about? What is Dataview? Dataview is a very popular community plugin for Obsidian.md . It lets you query your data inside your vault and can help you in various, powerful ways. Its potential is almost unlimited due to dataviews support for javascript queries Who is the maintainer of this vault? I'm Sam, a regular Obsidian user. You'll sometimes catch me in the dataview thread of the Obsidian Discord. I hope I won't stay the only maintainer for long - this was AB1908 idea in the first place, anyway. Why does this vault exists? Discord is not the best place to store information for later access and while there exists an extensive Forum Thread for sharing Dataview queries, it is not super intuitive and user friendly to search in it. The idea is to instead leverage Obsidians immense strength in storing data, making it easily accessible and searchable. As a bonus, we can interconnect what belongs together so it's a breeze for you to find the dataview example you need - and you can try them out, right in place, tweak them to your liking to see what's happening and how things work. Why is this not part of the Obsidian Hub? While I'd be delighted to get a reference to this vault inside the hub somewhen, not integrating it right away as multiple reasons: - This vault contains a vast amount of useless example data and I don't think the Hub is the right place for such data - To my knowledge, Dataview Queries do not render on publish instances, so you'd need to download the vault anyway - Dataview shines when you tailor it to your needs. In order to do so, it's most helpful if you can play around data and queries, which is only possible in a local copy of the vault. - Right now, this vault is only a planned project without much value just yet. It should mature to something valuable before we put it somewhere I have a cool query. How do I add it? Nice! Head over to Contribution for an explanation how you can add new queries and how to share contributions. I'm trying to achieve something with dataview, but it doesnt work! You can try our tips on trouble shooting queries . If that doesn't work out, hop over to the Obsidian Community and ask for help either in the forum or Discord. The Obsidian Community is a very helpful lot, so go ask them!","title":"FAQ"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/","text":"Use Cases \u00b6 In order to make the vault better navigable and give some more context to available queries as well as inspiration how these queries could be used, we want to introduce Use Cases . What's a good topic for a Use Case? \u00b6 Like the name says, a Use Case should be about some specific scenario you could achieve with dataview, which requires (or can require) more than one dataview query. They should be overviews for a topic . Some examples: - A Daily/Weekly/Quarterly Note (Template) - A Music Album Overview page that provides information for songs, the album, the artist, ... - A persons page with information about his birthday, the last contact with them, their interests, their relationships with other people, ... - Overview about a TV series, it's prequels and sequels, how many episodes you watched, when the new series comes out, participating actors, director, world, ... Difference between a query page and a use case \u00b6 If you have trouble deciding if your contribution should be a query page under 20 Dataview Queries or rather a Use Case, try the following: Start with a Query Page like described here . Write your query name and description. Can you narrow down your contribution to one specific sentence? Then you should use a query page. Do you end up with a sentence like \"Should do this or that or this other thing and something else, but also different fancy things\", you probably about to describe a use case consisting of multiple, different query pages . As a rule of thumb: A use case describes a scenario, a broader field , probably is a complete note in a real vault. A query (page) has a very specific goal and achieves one specific thing that'll probably end up as a part of a page. Parts of a Use Case \u00b6 A Use Case should consist of a Use Case Page and one or more Example pages that show the use case \"in action\". A Use Case Page \u00b6 The Use Case Page should explain what the Use Case is about, what its goal is, for what you could use it. It should collect all the queries via links that can be used for this Use Case, maybe with a little explanation why this query is useful. One or multiple example pages \u00b6 To make it easier to understand the use case and to play around with it, a use case should provide at least one example page, where some of the collected queries are used. Feel free to generate test data for this like explained in Contribution#Add test data . Structure of a Use Case \u00b6 A Use Case should be created as a folder under 30 Dataview Resources/33 Use Cases . For Example: 30 Dataview Resources/ 33 Use Cases/ Enhance your daily note/ // <-- Use Case Folder Enhance your daily note.md // <-- Use Case Overview/Explanation Page Example1.md Example2.md If a Use Case, for whatever (good) reason does not have and will not have examples, skip the folder and place the Use Case Overview directly under 30 Dataview Resources/33 Use Cases : 30 Dataview Resources/ 33 Use Cases/ Basics of Dataview.md // <-- Use Case Overview/Explanation Page","title":"Use Cases"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#use-cases","text":"In order to make the vault better navigable and give some more context to available queries as well as inspiration how these queries could be used, we want to introduce Use Cases .","title":"Use Cases"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#whats-a-good-topic-for-a-use-case","text":"Like the name says, a Use Case should be about some specific scenario you could achieve with dataview, which requires (or can require) more than one dataview query. They should be overviews for a topic . Some examples: - A Daily/Weekly/Quarterly Note (Template) - A Music Album Overview page that provides information for songs, the album, the artist, ... - A persons page with information about his birthday, the last contact with them, their interests, their relationships with other people, ... - Overview about a TV series, it's prequels and sequels, how many episodes you watched, when the new series comes out, participating actors, director, world, ...","title":"What's a good topic for a Use Case?"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#difference-between-a-query-page-and-a-use-case","text":"If you have trouble deciding if your contribution should be a query page under 20 Dataview Queries or rather a Use Case, try the following: Start with a Query Page like described here . Write your query name and description. Can you narrow down your contribution to one specific sentence? Then you should use a query page. Do you end up with a sentence like \"Should do this or that or this other thing and something else, but also different fancy things\", you probably about to describe a use case consisting of multiple, different query pages . As a rule of thumb: A use case describes a scenario, a broader field , probably is a complete note in a real vault. A query (page) has a very specific goal and achieves one specific thing that'll probably end up as a part of a page.","title":"Difference between a query page and a use case"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#parts-of-a-use-case","text":"A Use Case should consist of a Use Case Page and one or more Example pages that show the use case \"in action\".","title":"Parts of a Use Case"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#a-use-case-page","text":"The Use Case Page should explain what the Use Case is about, what its goal is, for what you could use it. It should collect all the queries via links that can be used for this Use Case, maybe with a little explanation why this query is useful.","title":"A Use Case Page"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#one-or-multiple-example-pages","text":"To make it easier to understand the use case and to play around with it, a use case should provide at least one example page, where some of the collected queries are used. Feel free to generate test data for this like explained in Contribution#Add test data .","title":"One or multiple example pages"},{"location":"00%20Meta/Vault%20Infos/Use%20Cases/#structure-of-a-use-case","text":"A Use Case should be created as a folder under 30 Dataview Resources/33 Use Cases . For Example: 30 Dataview Resources/ 33 Use Cases/ Enhance your daily note/ // <-- Use Case Folder Enhance your daily note.md // <-- Use Case Overview/Explanation Page Example1.md Example2.md If a Use Case, for whatever (good) reason does not have and will not have examples, skip the folder and place the Use Case Overview directly under 30 Dataview Resources/33 Use Cases : 30 Dataview Resources/ 33 Use Cases/ Basics of Dataview.md // <-- Use Case Overview/Explanation Page","title":"Structure of a Use Case"},{"location":"00%20Meta/Vault%20Infos/What%20is/","text":"What is \u00b6 This note provides embedable callouts to explain certain functionality in-place in query pages. dv.view This query uses the dv.view mechanism of dataview . Views allow you to to reuse complex javascript queries and to add css styling to them. You'll find used dataview view files under 00 Meta/dataview_views . ^dv-view New \"ID\" after grouping When grouping, your \"first level\" changes. Without grouping, the first level are the file links you get back from your FROM/WHERE statement, so they automatically get displayed if you give no additional information to the LIST or TABLE command. The file link is the ID of your results. After grouping though, your groups become the first level, the ID of your rows. That means without adding an additional information you'll see the groups in your list or table instead of the file links. To still see the file names, you need to pass them as your additional information to display per rows.file.link . Find out more about this in [[How GROUP BY works]] ^new-id-after-grouping","title":"What is"},{"location":"00%20Meta/Vault%20Infos/What%20is/#what-is","text":"This note provides embedable callouts to explain certain functionality in-place in query pages. dv.view This query uses the dv.view mechanism of dataview . Views allow you to to reuse complex javascript queries and to add css styling to them. You'll find used dataview view files under 00 Meta/dataview_views . ^dv-view New \"ID\" after grouping When grouping, your \"first level\" changes. Without grouping, the first level are the file links you get back from your FROM/WHERE statement, so they automatically get displayed if you give no additional information to the LIST or TABLE command. The file link is the ID of your results. After grouping though, your groups become the first level, the ID of your rows. That means without adding an additional information you'll see the groups in your list or table instead of the file links. To still see the file names, you need to pass them as your additional information to display per rows.file.link . Find out more about this in [[How GROUP BY works]] ^new-id-after-grouping","title":"What is"},{"location":"00%20Meta/maintenance/Missing%20Topics/","text":"Queries with missing topics field \u00b6 LIST FROM \"20 Dataview Queries\" AND !\"20 Dataview Queries/21 MOCs\" WHERE !topics OR (length(topics) = 1 AND contains(topics, null)) Used query You want this fancy query for your own data? Find it here .","title":"Queries with missing topics field"},{"location":"00%20Meta/maintenance/Missing%20Topics/#queries-with-missing-topics-field","text":"LIST FROM \"20 Dataview Queries\" AND !\"20 Dataview Queries/21 MOCs\" WHERE !topics OR (length(topics) = 1 AND contains(topics, null)) Used query You want this fancy query for your own data? Find it here .","title":"Queries with missing topics field"},{"location":"00%20Meta/maintenance/Templater%20Tag%20Auto%20Generation/","text":"Templater Tag Auto Generation \u00b6 If you add query pages at a regular basis and/or find it annoying to scroll through the page and typing out tags, then I've good news! Since I answered all the above with a \"Yes\", I wrote a utility that auto-generates the fitting tags for you. Set up \u00b6 Install the community plugin Templater and enable it In its options, insert 00 Meta/templater_templates as Template Folder Location How to use \u00b6 First, write all your queries. Your query page needs to be complete. Place your cursor at the top of the page (right below the frontmatter) and hit ALT + E (this is the default for opening Templater's Template Modal) Choose insert tags to query page Done!","title":"Templater Tag Auto Generation"},{"location":"00%20Meta/maintenance/Templater%20Tag%20Auto%20Generation/#templater-tag-auto-generation","text":"If you add query pages at a regular basis and/or find it annoying to scroll through the page and typing out tags, then I've good news! Since I answered all the above with a \"Yes\", I wrote a utility that auto-generates the fitting tags for you.","title":"Templater Tag Auto Generation"},{"location":"00%20Meta/maintenance/Templater%20Tag%20Auto%20Generation/#set-up","text":"Install the community plugin Templater and enable it In its options, insert 00 Meta/templater_templates as Template Folder Location","title":"Set up"},{"location":"00%20Meta/maintenance/Templater%20Tag%20Auto%20Generation/#how-to-use","text":"First, write all your queries. Your query page needs to be complete. Place your cursor at the top of the page (right below the frontmatter) and hit ALT + E (this is the default for opening Templater's Template Modal) Choose insert tags to query page Done!","title":"How to use"},{"location":"00%20Meta/maintenance/Unprocessed%20template/","text":"Queries with incomplete processed template \u00b6 Query Pages with unmaintained tags \u00b6 LIST FROM \"20 Dataview Queries\" WHERE econtains(file.etags, \"#dv/\") Query Pages with the ToDo callout \u00b6 LIST FROM \"20 Dataview Queries\" WHERE contains(file.tasks.text, \"Use this template\")","title":"Queries with incomplete processed template"},{"location":"00%20Meta/maintenance/Unprocessed%20template/#queries-with-incomplete-processed-template","text":"","title":"Queries with incomplete processed template"},{"location":"00%20Meta/maintenance/Unprocessed%20template/#query-pages-with-unmaintained-tags","text":"LIST FROM \"20 Dataview Queries\" WHERE econtains(file.etags, \"#dv/\")","title":"Query Pages with unmaintained tags"},{"location":"00%20Meta/maintenance/Unprocessed%20template/#query-pages-with-the-todo-callout","text":"LIST FROM \"20 Dataview Queries\" WHERE contains(file.tasks.text, \"Use this template\")","title":"Query Pages with the ToDo callout"},{"location":"00%20Meta/templater_templates/insert%20tags%20to%20query%20page/","text":"<%* const dvApi = app.plugins.plugins.dataview.api; const dataviewRegex = / (dataview(?:js)?)(.+?) /gms; const currFile = app.workspace.getActiveFile(); const content = (await app.vault.cachedRead(currFile)).split(\"%% === end of query page === %%\")[0]; const datacommands = [\"LIST\", \"TABLE\", \"TASK\", \"CALENDAR\", \"FROM\", \"WHERE\", \"FLATTEN\", \"SORT\", \"GROUP BY\"]; const tags = []; let tagprefix = \"#dv/\" if (content.match(/ \\$= [^ ]+ /)) { tags.push(tagprefix + 'inlinejs') } if (content.match(/ \\= [^ ]+ /)) { tags.push(tagprefix + 'inline') } const queries = content.matchAll(dataviewRegex); for (let query of queries) { const type = query[1]; query = query[2]; if (type === 'dataview') { datacommands.forEach(datacommand => { if (query.includes(datacommand)) { tags.push( ${tagprefix}${datacommand.replace(/\\s/, '')} ) // we only want to add this tag once, no need to check for the data command again here or in other queries datacommands.splice(datacommands.indexOf(datacommand), 1) } }) const functions = query.matchAll(/([a-zA-Z]+)(/g); addFunctionsTags(functions, tags) } else { addTag('dataviewjs') tagprefix = \"#dvjs/\" const functions = query.matchAll(/dv\\.([a-zA-Z]+)/g) addFunctionsTags(functions, tags) } } tR += tags.reduce((acc, curr) => ${acc} ${curr} , \"\") function addFunctionsTags(functions) { for (let fn of functions) { addTag(fn[1]) } } function addTag(subtag) { const tag = ${tagprefix}${subtag} if (!tags.contains(tag)) tags.push(tag) } %>","title":"Insert tags to query page"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/","text":"%% What does the query do? %% dv/ \u00b6 Contributed by PutYourNameOrSourceHere {{title}} \u00b6 Create a new Query Note [x] Use this template [ ] Write a short description of the query in the frontmatter [ ] Write the most basic version of the query possible. Keeping it simple and reduce it to the necessary makes it easier for others to understand the important parts of a query [ ] If applicable, add one or multiple variants of the query and explain what they are doing - this could i.e. be an enhancement that makes the result better readable/even more useful [ ] Add appropriate tags to the page Hint: Adding queries often? Consider using the Templater Tag Auto Generation [ ] If a DQL query: used query type (LIST, TABLE etc), data commands (FROM, WHERE, FLATTEN etc) and used functions - always with #dv in front, i.e. #dv/list [ ] If a dataviewjs query: #dv/dataviewjs and every dataviewjs or data array function as a #dvjs tag, i.e. #dvjs/current [ ] Add topics to the frontmatter that helps the query at the end of the page to list similar queries. Head over to the Topic Overview to see what's available and be welcome to introduce new topics where appropriate! [ ] Add your name in the contribution callout at the top - or remove the contribution callout, however you like it better! Mind, though: Before contributing queries from others, always ask for their permission. [ ] Delete this callout :) Basic \u00b6 Variants \u00b6 Description of Variant A - what does it differently? What do we achieve with that? \u00b6","title":"Dataview Query Template"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/#dv","text":"Contributed by PutYourNameOrSourceHere","title":"dv/"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/#title","text":"Create a new Query Note [x] Use this template [ ] Write a short description of the query in the frontmatter [ ] Write the most basic version of the query possible. Keeping it simple and reduce it to the necessary makes it easier for others to understand the important parts of a query [ ] If applicable, add one or multiple variants of the query and explain what they are doing - this could i.e. be an enhancement that makes the result better readable/even more useful [ ] Add appropriate tags to the page Hint: Adding queries often? Consider using the Templater Tag Auto Generation [ ] If a DQL query: used query type (LIST, TABLE etc), data commands (FROM, WHERE, FLATTEN etc) and used functions - always with #dv in front, i.e. #dv/list [ ] If a dataviewjs query: #dv/dataviewjs and every dataviewjs or data array function as a #dvjs tag, i.e. #dvjs/current [ ] Add topics to the frontmatter that helps the query at the end of the page to list similar queries. Head over to the Topic Overview to see what's available and be welcome to introduce new topics where appropriate! [ ] Add your name in the contribution callout at the top - or remove the contribution callout, however you like it better! Mind, though: Before contributing queries from others, always ask for their permission. [ ] Delete this callout :)","title":"{{title}}"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/#basic","text":"","title":"Basic"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/#variants","text":"","title":"Variants"},{"location":"00%20Meta/templates/Dataview%20Query%20Template/#description-of-variant-a-what-does-it-differently-what-do-we-achieve-with-that","text":"","title":"Description of Variant A - what does it differently? What do we achieve with that?"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/Harry%20Potter/Harry%20Potter%20and%20the%20Philosopher%27s%20Stone/meta/","text":"id: HP01 lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/Harry%20Potter/Harry%20Potter%20and%20the%20Prisoner%20of%20Azkaban/meta/","text":"id: HP03 lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/Memoirs%20of%20a%20Geisha/meta/","text":"id: MOG lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/The%20Da%20Vinci%20Code/meta/","text":"id: DVC lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/The%20Lord%20of%20the%20Rings/Fellowship%20of%20the%20Ring/meta/","text":"id: LOTR01 lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/The%20Lord%20of%20the%20Rings/The%20Return%20of%20the%20King/meta/","text":"id: LOTR03 lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/The%20Lord%20of%20the%20Rings/The%20Two%20Towers/meta/","text":"id: LOTR02 lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/English/To%20Kill%20a%20Mockingbird/meta/","text":"id: TKAM lang: EN","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Da%20Vinci%20Code/meta/","text":"id: DVC lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Du%20silence%20et%20des%20ombres/meta/","text":"id: TKAM lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Harry%20Potter/Harry%20Potter%20et%20la%20Coupe%20de%20feu/meta/","text":"id: HP04 lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Harry%20Potter/Harry%20Potter%20et%20le%20Prisonnier%20d%27Azkaban/meta/","text":"id: HP03 lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Le%20Seigneur%20des%20Anneaux/La%20Communaut%C3%A9%20de%20l%27anneau/meta/","text":"id: LOTR01 lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Le%20Seigneur%20des%20Anneaux/Le%20Retour%20du%20roi/meta/","text":"id: LOTR03 lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/Le%20Seigneur%20des%20Anneaux/Les%20Deux%20Tours/meta/","text":"id: LOTR02 lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/French/M%C3%A9moires%20d%27une%20geisha/meta/","text":"id: MOG lang: FR","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Der%20Herr%20der%20Ringe/Die%20Gef%C3%A4hrten/meta/","text":"id: LOTR01 lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Der%20Herr%20der%20Ringe/Die%20R%C3%BCckkehr%20des%20K%C3%B6nigs/meta/","text":"id: LOTR03 lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Der%20Herr%20der%20Ringe/Die%20Zwei%20T%C3%BCrme/meta/","text":"id: LOTR02 lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Die%20Geisha/meta/","text":"id: MOG lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Harry%20Potter/Harry%20Potter%20und%20der%20Stein%20der%20Weisen/meta/","text":"id: HP01 lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/The%20Da%20Vinci%20Code%20-%20Sakrileg/meta/","text":"id: DVC lang: DE","title":"Meta"},{"location":"10%20Example%20Data/Folder%20Structure%20and%20Meta%20Files/German/Wer%20die%20Nachtigall%20st%C3%B6rt/meta/","text":"id: TKAM lang: DE","title":"Meta"},{"location":"10%20Example%20Data/assignments/assignment_1/","text":"Needs to have at least 19 pages. [x] Assignment task 1 \u2705 2022-09-02 [x] Assignment task 2 [ ] Assignment task 3 [x] Assignment task 4 \u2705 2022-09-04","title":"Assignment 1"},{"location":"10%20Example%20Data/assignments/assignment_10/","text":"Needs to have at least 3 pages.","title":"Assignment 10"},{"location":"10%20Example%20Data/assignments/assignment_11/","text":"Needs to have at least 10 pages. [x] Assignment task 1 \u2705 2022-09-06 [ ] Assignment task 2 [x] Assignment task 3","title":"Assignment 11"},{"location":"10%20Example%20Data/assignments/assignment_12/","text":"Needs to have at least 39 pages.","title":"Assignment 12"},{"location":"10%20Example%20Data/assignments/assignment_2/","text":"Needs to have at least 10 pages. [ ] assignment task with due date [duedate:: 2023-03-03] [ ] assignment task with due date [duedate:: 2022-11-19]","title":"Assignment 2"},{"location":"10%20Example%20Data/assignments/assignment_3/","text":"Needs to have at least 30 pages.","title":"Assignment 3"},{"location":"10%20Example%20Data/assignments/assignment_4/","text":"Needs to have at least 9 pages. [ ] Assignment task 1 #later [x] Assignment task 2 [ ] Assignment task 3","title":"Assignment 4"},{"location":"10%20Example%20Data/assignments/assignment_5/","text":"Needs to have at least 31 pages. [ ] assignment task with due date [duedate:: 2023-02-12] [ ] assignment task with due date [duedate:: 2022-12-24]","title":"Assignment 5"},{"location":"10%20Example%20Data/assignments/assignment_6/","text":"Needs to have at least 26 pages. [x] Assignment task 1 [completion:: 2022-09-06] [ ] Assignment task 2 [x] Assignment task 3 [completion:: 2022-09-06]","title":"Assignment 6"},{"location":"10%20Example%20Data/assignments/assignment_7/","text":"Needs to have at least 48 pages.","title":"Assignment 7"},{"location":"10%20Example%20Data/assignments/assignment_8/","text":"Needs to have at least 12 pages.","title":"Assignment 8"},{"location":"10%20Example%20Data/assignments/assignment_9/","text":"Needs to have at least 32 pages. [ ] Assignment task 1 #later [x] Assignment task 2 [ ] Assignment task 3 [x] Assignment task 4 \u2705 2022-08-12 [x] Assignment task 5 [completion:: 2022-08-23] [ ] Assignment task 6 #later [ ] Assignment task 7","title":"Assignment 9"},{"location":"10%20Example%20Data/books/books_1/","text":"type/books \u00b6 This is an example book excerpt. Whatever. pagesRead:: 80","title":"type/books"},{"location":"10%20Example%20Data/books/books_1/#typebooks","text":"This is an example book excerpt. Whatever. pagesRead:: 80","title":"type/books"},{"location":"10%20Example%20Data/books/books_2/","text":"type/books \u00b6 This is an example book excerpt. Whatever. pagesRead:: 99","title":"type/books"},{"location":"10%20Example%20Data/books/books_2/#typebooks","text":"This is an example book excerpt. Whatever. pagesRead:: 99","title":"type/books"},{"location":"10%20Example%20Data/books/books_3/","text":"type/books \u00b6 This is an example book excerpt. Whatever. pagesRead:: 55","title":"type/books"},{"location":"10%20Example%20Data/books/books_3/#typebooks","text":"This is an example book excerpt. Whatever. pagesRead:: 55","title":"type/books"},{"location":"10%20Example%20Data/books/books_4/","text":"type/books \u00b6 This is an example book excerpt. Blahblah. Whatever. pagesRead:: 0","title":"type/books"},{"location":"10%20Example%20Data/books/books_4/#typebooks","text":"This is an example book excerpt. Blahblah. Whatever. pagesRead:: 0","title":"type/books"},{"location":"10%20Example%20Data/books/books_5/","text":"type/books \u00b6 This is an example book excerpt. Blahblah. Whatever. pagesRead:: 271","title":"type/books"},{"location":"10%20Example%20Data/books/books_5/#typebooks","text":"This is an example book excerpt. Blahblah. Whatever. pagesRead:: 271","title":"type/books"},{"location":"10%20Example%20Data/books/books_6/","text":"This is an example book excerpt. Whatever. pagesRead:: 15","title":"Books 6"},{"location":"10%20Example%20Data/books/books_7/","text":"This is an example book excerpt. Blahblah. Whatever. pagesRead:: 0","title":"Books 7"},{"location":"10%20Example%20Data/dailys/2020-02-17/","text":"Urgh, raining today, freezed over. The game against Mikes team was canceled. Got my test back, was meh","title":"2020 02 17"},{"location":"10%20Example%20Data/dailys/2021-02-17/","text":"I bought new Sneakers today, in shiny red!","title":"2021 02 17"},{"location":"10%20Example%20Data/dailys/2022-01-02/","text":"daily #journal \u00b6 Daily Note 2022-01-02 \u00b6 [task-completion:: $= const value = Math.round(((dv.page(\"2021-01-02\").file.tasks.where(t => t.completed).length) / (dv.page(\"2021-01-02\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [ ] Bring back Laras book [x] Completed Task of 2021-01-02 [-] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [>] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 1]. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2021-09-20). Also I have an appointment at (appointment:: 2021-01-10 10:45) with (person:: [[Bob]]) Metadata \u00b6 Daily Routine wake-up:: 06:31 lunch:: 12:00 dinner:: 21:03 go-to-sleep:: 22:15 Workout training:: 1h 27m situps:: 19 steps:: 6880 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-02/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-02/#daily-note-2022-01-02","text":"[task-completion:: $= const value = Math.round(((dv.page(\"2021-01-02\").file.tasks.where(t => t.completed).length) / (dv.page(\"2021-01-02\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [ ] Bring back Laras book [x] Completed Task of 2021-01-02 [-] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [>] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 1].","title":"Daily Note 2022-01-02"},{"location":"10%20Example%20Data/dailys/2022-01-02/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2021-09-20). Also I have an appointment at (appointment:: 2021-01-10 10:45) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-02/#metadata","text":"Daily Routine wake-up:: 06:31 lunch:: 12:00 dinner:: 21:03 go-to-sleep:: 22:15 Workout training:: 1h 27m situps:: 19 steps:: 6880 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-03/","text":"daily #journal \u00b6 Daily Note 2022-01-03 \u00b6 [task-completion:: $= const value = Math.round(((dv.page(\"2022-01-03\").file.tasks.where(t => t.completed).length) / (dv.page(\"2022-01-03\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [ ] Need to read a bit about this private provision thing [x] Completed Task of 2022-01-03 [ ] Get a new toaster [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [ ] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 4]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-01-29). Also I have an appointment at (appointment:: 2022-02-06 21:10) with (person:: Jonathan ) Money spent \u00b6 moneyspenton:: taxi paid:: 10$ moneyspenton:: pizza paid:: 11$ moneyspenton:: shoes paid:: 19$ Metadata \u00b6 Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 20:21 go-to-sleep:: 22:59 Workout training:: 36m situps:: 23 steps:: 9357 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-03/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-03/#daily-note-2022-01-03","text":"[task-completion:: $= const value = Math.round(((dv.page(\"2022-01-03\").file.tasks.where(t => t.completed).length) / (dv.page(\"2022-01-03\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [ ] Need to read a bit about this private provision thing [x] Completed Task of 2022-01-03 [ ] Get a new toaster [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [ ] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 4].","title":"Daily Note 2022-01-03"},{"location":"10%20Example%20Data/dailys/2022-01-03/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-01-29). Also I have an appointment at (appointment:: 2022-02-06 21:10) with (person:: Jonathan )","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-03/#money-spent","text":"moneyspenton:: taxi paid:: 10$ moneyspenton:: pizza paid:: 11$ moneyspenton:: shoes paid:: 19$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-01-03/#metadata","text":"Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 20:21 go-to-sleep:: 22:59 Workout training:: 36m situps:: 23 steps:: 9357 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-04/","text":"daily #journal \u00b6 Daily Note 2022-01-04 \u00b6 [task-completion:: $= const value = Math.round(((dv.page(\"2022-01-04\").file.tasks.where(t => t.completed).length) / (dv.page(\"2022-01-04\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [x] Task 1 of 2022-01-04 [x] Completed Task of 2022-01-04 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 1]. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-05-05). Also I have an appointment at (appointment:: 2022-03-21 21:32) with (person:: [[Bob]]) Metadata \u00b6 Daily Routine wake-up:: 06:04 lunch:: 12:00 dinner:: 16:08 go-to-sleep:: 23:06 Workout training:: 15m situps:: 2 steps:: 8738 Good habits praying:: breathing:: yes beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-04/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-04/#daily-note-2022-01-04","text":"[task-completion:: $= const value = Math.round(((dv.page(\"2022-01-04\").file.tasks.where(t => t.completed).length) / (dv.page(\"2022-01-04\").file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" ] [x] Task 1 of 2022-01-04 [x] Completed Task of 2022-01-04 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 1].","title":"Daily Note 2022-01-04"},{"location":"10%20Example%20Data/dailys/2022-01-04/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-05-05). Also I have an appointment at (appointment:: 2022-03-21 21:32) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-04/#metadata","text":"Daily Routine wake-up:: 06:04 lunch:: 12:00 dinner:: 16:08 go-to-sleep:: 23:06 Workout training:: 15m situps:: 2 steps:: 8738 Good habits praying:: breathing:: yes beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-05/","text":"daily #journal \u00b6 Daily Note 2022-01-05 \u00b6 [ ] Task 1 of 2022-01-05 [x] Completed Task of 2022-01-05 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-07-04). Also I have an appointment at (appointment:: 2022-11-21 17:39) with (person:: Jonathan ) Money spent \u00b6 bought:: piece of cake paid:: 7.99$ bought:: buddha bowl paid:: 8.5$ bought:: jacket paid:: 99$ Metadata \u00b6 Daily Routine wake-up:: 06:22 lunch:: 12:00 dinner:: 19:31 go-to-sleep:: 22:50 wentToSleep:: 22:30 Workout training:: 15m situps:: 6 steps:: 7814 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-05/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-05/#daily-note-2022-01-05","text":"[ ] Task 1 of 2022-01-05 [x] Completed Task of 2022-01-05 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0].","title":"Daily Note 2022-01-05"},{"location":"10%20Example%20Data/dailys/2022-01-05/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-07-04). Also I have an appointment at (appointment:: 2022-11-21 17:39) with (person:: Jonathan )","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-05/#money-spent","text":"bought:: piece of cake paid:: 7.99$ bought:: buddha bowl paid:: 8.5$ bought:: jacket paid:: 99$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-01-05/#metadata","text":"Daily Routine wake-up:: 06:22 lunch:: 12:00 dinner:: 19:31 go-to-sleep:: 22:50 wentToSleep:: 22:30 Workout training:: 15m situps:: 6 steps:: 7814 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-06/","text":"daily #journal \u00b6 Daily Note 2022-01-06 \u00b6 [ ] Task 1 of 2022-01-06 [x] Completed Task of 2022-01-06 [>] Task with state (maybe) [o] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 4]. Appointments \u00b6 My next appointment with (person:: Christa) is on (appointment:: 2022-09-23). Also I have an appointment at (appointment:: 2022-09-23 20:50) with (person:: Jonathan ) Metadata \u00b6 Daily Routine wake-up:: 6:59 lunch:: 12:00 dinner:: 15:02 go-to-sleep:: 22:13 Workout training:: 15m situps:: 6 steps:: 10805 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-06/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-06/#daily-note-2022-01-06","text":"[ ] Task 1 of 2022-01-06 [x] Completed Task of 2022-01-06 [>] Task with state (maybe) [o] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 4].","title":"Daily Note 2022-01-06"},{"location":"10%20Example%20Data/dailys/2022-01-06/#appointments","text":"My next appointment with (person:: Christa) is on (appointment:: 2022-09-23). Also I have an appointment at (appointment:: 2022-09-23 20:50) with (person:: Jonathan )","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-06/#metadata","text":"Daily Routine wake-up:: 6:59 lunch:: 12:00 dinner:: 15:02 go-to-sleep:: 22:13 Workout training:: 15m situps:: 6 steps:: 10805 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-07/","text":"daily #journal \u00b6 Daily Note 2022-01-07 \u00b6 [ ] Task 1 of 2022-01-07 [x] Completed Task of 2022-01-07 [x] Task with state (maybe) [ ] Task with state (maybe) 2 [>] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 1]. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-01-16). Also I have an appointment at (appointment:: 2022-08-23 09:35) with (person:: [[Karl]]) Metadata \u00b6 Daily Routine wake-up:: 09:01 lunch:: 12:00 dinner:: 18:02 go-to-sleep:: 01:46 Workout training:: 15m situps:: 8 steps:: 7927 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-07/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-07/#daily-note-2022-01-07","text":"[ ] Task 1 of 2022-01-07 [x] Completed Task of 2022-01-07 [x] Task with state (maybe) [ ] Task with state (maybe) 2 [>] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 1].","title":"Daily Note 2022-01-07"},{"location":"10%20Example%20Data/dailys/2022-01-07/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-01-16). Also I have an appointment at (appointment:: 2022-08-23 09:35) with (person:: [[Karl]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-07/#metadata","text":"Daily Routine wake-up:: 09:01 lunch:: 12:00 dinner:: 18:02 go-to-sleep:: 01:46 Workout training:: 15m situps:: 8 steps:: 7927 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-08/","text":"daily #journal \u00b6 Daily Note 2022-01-08 \u00b6 [ ] Clean the bath [x] Drink a tea and relax [x] More task [ ] More task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 06:07 lunch:: 12:00 dinner:: 18:08 go-to-sleep:: 22:51 Workout training:: situps:: 13 steps:: 8422 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-08/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-08/#daily-note-2022-01-08","text":"[ ] Clean the bath [x] Drink a tea and relax [x] More task [ ] More task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-08"},{"location":"10%20Example%20Data/dailys/2022-01-08/#metadata","text":"Daily Routine wake-up:: 06:07 lunch:: 12:00 dinner:: 18:08 go-to-sleep:: 22:51 Workout training:: situps:: 13 steps:: 8422 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-09/","text":"daily #journal \u00b6 Daily Note 2022-01-09 \u00b6 [ ] Task 1 of 2022-01-09 [x] Completed Task of 2022-01-09 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 3]. Appointments \u00b6 My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-02-21). Also I have an appointment at (appointment:: 2022-08-05 15:59) with (person:: [[Alice]]) Money spent \u00b6 bought:: taxi paid:: 7.99$ Metadata \u00b6 Daily Routine wake-up:: 08:01 lunch:: 12:00 dinner:: 15:54 go-to-sleep:: 23:30 Workout training:: situps:: 1 steps:: 5997 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-09/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-09/#daily-note-2022-01-09","text":"[ ] Task 1 of 2022-01-09 [x] Completed Task of 2022-01-09 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 3].","title":"Daily Note 2022-01-09"},{"location":"10%20Example%20Data/dailys/2022-01-09/#appointments","text":"My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-02-21). Also I have an appointment at (appointment:: 2022-08-05 15:59) with (person:: [[Alice]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-09/#money-spent","text":"bought:: taxi paid:: 7.99$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-01-09/#metadata","text":"Daily Routine wake-up:: 08:01 lunch:: 12:00 dinner:: 15:54 go-to-sleep:: 23:30 Workout training:: situps:: 1 steps:: 5997 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-10/","text":"daily #journal \u00b6 Daily Note 2022-01-10 \u00b6 picoftheday:: { width=\"300\" } Photo by Julian on Unsplash [ ] Task 1 of 2022-01-10 [x] Completed Task of 2022-01-10 [ ] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2]. Appointments \u00b6 My next appointment with (person:: Christa) is on (appointment:: 2022-11-11). Also I have an appointment at (appointment:: 2022-05-05 12:31) with (person:: [[Alice]]) met:: I met Sophie at the trainstation Metadata \u00b6 Daily Routine wake-up:: 08:11 lunch:: 12:00 dinner:: 18:21 go-to-sleep:: 22:23 Workout training:: 36m situps:: 12 steps:: 3113 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-10/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-10/#daily-note-2022-01-10","text":"picoftheday:: { width=\"300\" } Photo by Julian on Unsplash [ ] Task 1 of 2022-01-10 [x] Completed Task of 2022-01-10 [ ] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2].","title":"Daily Note 2022-01-10"},{"location":"10%20Example%20Data/dailys/2022-01-10/#appointments","text":"My next appointment with (person:: Christa) is on (appointment:: 2022-11-11). Also I have an appointment at (appointment:: 2022-05-05 12:31) with (person:: [[Alice]]) met:: I met Sophie at the trainstation","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-10/#metadata","text":"Daily Routine wake-up:: 08:11 lunch:: 12:00 dinner:: 18:21 go-to-sleep:: 22:23 Workout training:: 36m situps:: 12 steps:: 3113 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-11/","text":"daily #journal \u00b6 Daily Note 2022-01-11 \u00b6 picoftheday:: Photo by Hans Vivek on Unsplash [>] Dust of the chimney [x] Take a bath [x] More task [x] And another task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 07:56 lunch:: 12:00 dinner:: 21:34 go-to-sleep:: 23:39 Workout training:: 30m situps:: 13 steps:: 7251 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-11/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-11/#daily-note-2022-01-11","text":"picoftheday:: Photo by Hans Vivek on Unsplash [>] Dust of the chimney [x] Take a bath [x] More task [x] And another task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-11"},{"location":"10%20Example%20Data/dailys/2022-01-11/#metadata","text":"Daily Routine wake-up:: 07:56 lunch:: 12:00 dinner:: 21:34 go-to-sleep:: 23:39 Workout training:: 30m situps:: 13 steps:: 7251 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-12/","text":"daily #journal \u00b6 Daily Note 2022-01-12 \u00b6 picoftheday:: Photo by Henry & Co. on Unsplash [ ] Task 1 of 2022-01-12 [x] Completed Task of 2022-01-12 [>] Task with state (maybe) [>] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 4]. Appointments \u00b6 My next appointment with (person:: Elias ) is on (appointment:: 2022-04-20). Also I have an appointment at (appointment:: 2022-11-23 19:43) with (person:: [[Karl]]) Metadata \u00b6 Daily Routine wake-up:: 06:04 lunch:: 12:00 dinner:: 18:58 go-to-sleep:: 22:04 Workout training:: 1h 5m situps:: 16 steps:: 5694 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-12/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-12/#daily-note-2022-01-12","text":"picoftheday:: Photo by Henry & Co. on Unsplash [ ] Task 1 of 2022-01-12 [x] Completed Task of 2022-01-12 [>] Task with state (maybe) [>] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 4].","title":"Daily Note 2022-01-12"},{"location":"10%20Example%20Data/dailys/2022-01-12/#appointments","text":"My next appointment with (person:: Elias ) is on (appointment:: 2022-04-20). Also I have an appointment at (appointment:: 2022-11-23 19:43) with (person:: [[Karl]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-12/#metadata","text":"Daily Routine wake-up:: 06:04 lunch:: 12:00 dinner:: 18:58 go-to-sleep:: 22:04 Workout training:: 1h 5m situps:: 16 steps:: 5694 Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-13/","text":"daily #journal \u00b6 Daily Note 2022-01-13 \u00b6 picoftheday:: Photo by mostafa meraji on Unsplash [o] sort out papers [x] Read a book [x] More task [>] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 06:08 lunch:: 12:00 dinner:: 18:53 go-to-sleep:: 23:27 Workout training:: 2h 2m situps:: 4 steps:: 5453 Good habits praying:: breathing:: beingthankful:: yes slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-13/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-13/#daily-note-2022-01-13","text":"picoftheday:: Photo by mostafa meraji on Unsplash [o] sort out papers [x] Read a book [x] More task [>] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-13"},{"location":"10%20Example%20Data/dailys/2022-01-13/#metadata","text":"Daily Routine wake-up:: 06:08 lunch:: 12:00 dinner:: 18:53 go-to-sleep:: 23:27 Workout training:: 2h 2m situps:: 4 steps:: 5453 Good habits praying:: breathing:: beingthankful:: yes slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-14/","text":"daily #journal \u00b6 Daily Note 2022-01-14 \u00b6 picoftheday:: Photo by Vinh Thang on Unsplash [ ] Task 1 of 2022-01-14 [x] Completed Task of 2022-01-14 [x] Task with state (maybe) [o] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [>] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 3]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-10-26). Also I have an appointment at (appointment:: 2022-07-30 17:00) with (person:: [[Bob]]) met:: Karl was at the new ice cream booth, we had a nice talk Metadata \u00b6 Daily Routine wake-up:: 07:23 lunch:: 12:00 dinner:: 18:17 go-to-sleep:: 22:01 Workout training:: situps:: 21 steps:: 8680 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-14/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-14/#daily-note-2022-01-14","text":"picoftheday:: Photo by Vinh Thang on Unsplash [ ] Task 1 of 2022-01-14 [x] Completed Task of 2022-01-14 [x] Task with state (maybe) [o] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [>] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 3].","title":"Daily Note 2022-01-14"},{"location":"10%20Example%20Data/dailys/2022-01-14/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-10-26). Also I have an appointment at (appointment:: 2022-07-30 17:00) with (person:: [[Bob]]) met:: Karl was at the new ice cream booth, we had a nice talk","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-14/#metadata","text":"Daily Routine wake-up:: 07:23 lunch:: 12:00 dinner:: 18:17 go-to-sleep:: 22:01 Workout training:: situps:: 21 steps:: 8680 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-15/","text":"daily #journal \u00b6 Daily Note 2022-01-15 \u00b6 picoftheday:: { width=\"300\" } Photo by Juli\u00e1n Gentilezza on Unsplash [x] Clean the bath [x] Have something sweet [x] More task [o] Some task [ ] I need to take care of this later [duedate:: 2022-09-26] Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 07:45 lunch:: 12:00 dinner:: 15:31 go-to-sleep:: 22:29 Workout training:: situps:: 10 steps:: 4359 Good habits praying:: breathing:: beingthankful:: yes slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-15/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-15/#daily-note-2022-01-15","text":"picoftheday:: { width=\"300\" } Photo by Juli\u00e1n Gentilezza on Unsplash [x] Clean the bath [x] Have something sweet [x] More task [o] Some task [ ] I need to take care of this later [duedate:: 2022-09-26] Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-15"},{"location":"10%20Example%20Data/dailys/2022-01-15/#metadata","text":"Daily Routine wake-up:: 07:45 lunch:: 12:00 dinner:: 15:31 go-to-sleep:: 22:29 Workout training:: situps:: 10 steps:: 4359 Good habits praying:: breathing:: beingthankful:: yes slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-16/","text":"daily #journal \u00b6 Daily Note 2022-01-16 \u00b6 picoftheday:: Photo by Edanur A\u011fa\u00e7 on Unsplash [ ] Task 1 of 2022-01-16 [x] Completed Task of 2022-01-16 [ ] Task with state (maybe) [>] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-10-16). Also I have an appointment at (appointment:: 2022-02-08 09:56) with (person:: [[Bob]]) met:: AB1908 on my way home. Had a nice chat. Metadata \u00b6 Daily Routine wake-up:: 06:14 lunch:: 12:00 dinner:: 19:05 go-to-sleep:: 23:44 Workout training:: 36m situps:: 20 steps:: 3852 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-16/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-16/#daily-note-2022-01-16","text":"picoftheday:: Photo by Edanur A\u011fa\u00e7 on Unsplash [ ] Task 1 of 2022-01-16 [x] Completed Task of 2022-01-16 [ ] Task with state (maybe) [>] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 0].","title":"Daily Note 2022-01-16"},{"location":"10%20Example%20Data/dailys/2022-01-16/#appointments","text":"My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-10-16). Also I have an appointment at (appointment:: 2022-02-08 09:56) with (person:: [[Bob]]) met:: AB1908 on my way home. Had a nice chat.","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-16/#metadata","text":"Daily Routine wake-up:: 06:14 lunch:: 12:00 dinner:: 19:05 go-to-sleep:: 23:44 Workout training:: 36m situps:: 20 steps:: 3852 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-17/","text":"daily #journal \u00b6 Daily Note 2022-01-17 \u00b6 [-] paint the fence [x] Listen to some music [x] Here's a task, suprise [x] And another task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 18:41 gotosleep:: 22:57 Workout training:: 2h 2m situps:: 4 steps:: 240 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-17/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-17/#daily-note-2022-01-17","text":"[-] paint the fence [x] Listen to some music [x] Here's a task, suprise [x] And another task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-17"},{"location":"10%20Example%20Data/dailys/2022-01-17/#metadata","text":"Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 18:41 gotosleep:: 22:57 Workout training:: 2h 2m situps:: 4 steps:: 240 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-18/","text":"daily #journal \u00b6 Daily Note 2022-01-18 \u00b6 [ ] Task 1 of 2022-01-18 [x] Completed Task of 2022-01-18 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [>] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 1]. Appointments \u00b6 My next appointment with (person:: Christa) is on (appointment:: 2022-06-14). Metadata \u00b6 Daily Routine wake-up:: 07:40 lunch:: 12:00 dinner:: 16:17 gotosleep:: 23:39 Workout training:: 15m situps:: 0 steps:: 3519 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-18/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-18/#daily-note-2022-01-18","text":"[ ] Task 1 of 2022-01-18 [x] Completed Task of 2022-01-18 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [>] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 1].","title":"Daily Note 2022-01-18"},{"location":"10%20Example%20Data/dailys/2022-01-18/#appointments","text":"My next appointment with (person:: Christa) is on (appointment:: 2022-06-14).","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-18/#metadata","text":"Daily Routine wake-up:: 07:40 lunch:: 12:00 dinner:: 16:17 gotosleep:: 23:39 Workout training:: 15m situps:: 0 steps:: 3519 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-19/","text":"daily #journal \u00b6 Daily Note 2022-01-19 \u00b6 [ ] Task 1 of 2022-01-19 [x] Completed Task of 2022-01-19 [>] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 3]. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-07-23). Also I have an appointment at (appointment:: 2022-07-15 13:32) with (person:: [[Bob]]) Money spent \u00b6 bought:: piece of cake paid:: 7.99$ bought:: buddha bowl paid:: 11$ bought:: shoes paid:: 56$ Metadata \u00b6 Daily Routine wake-up:: 07:15 lunch:: 12:00 dinner:: 18:05 gotosleep:: 22:42 Workout training:: 23m situps:: 19 steps:: 3120 Good habits praying:: breathing:: yes beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-19/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-19/#daily-note-2022-01-19","text":"[ ] Task 1 of 2022-01-19 [x] Completed Task of 2022-01-19 [>] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 3].","title":"Daily Note 2022-01-19"},{"location":"10%20Example%20Data/dailys/2022-01-19/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-07-23). Also I have an appointment at (appointment:: 2022-07-15 13:32) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-19/#money-spent","text":"bought:: piece of cake paid:: 7.99$ bought:: buddha bowl paid:: 11$ bought:: shoes paid:: 56$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-01-19/#metadata","text":"Daily Routine wake-up:: 07:15 lunch:: 12:00 dinner:: 18:05 gotosleep:: 22:42 Workout training:: 23m situps:: 19 steps:: 3120 Good habits praying:: breathing:: yes beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-20/","text":"daily #journal \u00b6 Daily Note 2022-01-20 \u00b6 [ ] Task 1 of 2022-01-20 [x] Completed Task of 2022-01-20 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-05-28). Also I have an appointment at (appointment:: 2022-09-21 20:30) with (person:: [[Bob]]) CapitalizedMetadata:: why not! Capitalized:: yes! Metadata \u00b6 Daily Routine wake-up:: 06:18 lunch:: 12:00 dinner:: 15:38 go-to-sleep:: 23:16 Workout training:: 15m situps:: 8 steps:: 3860 Good habits praying:: yes breathing:: beingthankful:: yes slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-20/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-20/#daily-note-2022-01-20","text":"[ ] Task 1 of 2022-01-20 [x] Completed Task of 2022-01-20 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0].","title":"Daily Note 2022-01-20"},{"location":"10%20Example%20Data/dailys/2022-01-20/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-05-28). Also I have an appointment at (appointment:: 2022-09-21 20:30) with (person:: [[Bob]]) CapitalizedMetadata:: why not! Capitalized:: yes!","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-20/#metadata","text":"Daily Routine wake-up:: 06:18 lunch:: 12:00 dinner:: 15:38 go-to-sleep:: 23:16 Workout training:: 15m situps:: 8 steps:: 3860 Good habits praying:: yes breathing:: beingthankful:: yes slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-21/","text":"daily #journal \u00b6 LIST FROM [](<#>) Daily Note 2022-01-21 \u00b6 [ ] Task 1 of 2022-01-21 [x] Completed Task of 2022-01-21 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 4]. Appointments \u00b6 My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-10-06). Also I have an appointment at (appointment:: 2022-10-15 18:43) with (person:: [[Bob]]) Metadata \u00b6 Daily Routine wake-up:: 06:27 lunch:: 12:00 dinner:: 19:43 go-to-sleep:: 23:50 Workout training:: 23m situps:: 3 steps:: 8805 Good habits praying:: breathing:: yes beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-21/#daily-journal","text":"LIST FROM [](<#>)","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-21/#daily-note-2022-01-21","text":"[ ] Task 1 of 2022-01-21 [x] Completed Task of 2022-01-21 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 4].","title":"Daily Note 2022-01-21"},{"location":"10%20Example%20Data/dailys/2022-01-21/#appointments","text":"My next appointment with (person:: [[Paul]]) is on (appointment:: 2022-10-06). Also I have an appointment at (appointment:: 2022-10-15 18:43) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-21/#metadata","text":"Daily Routine wake-up:: 06:27 lunch:: 12:00 dinner:: 19:43 go-to-sleep:: 23:50 Workout training:: 23m situps:: 3 steps:: 8805 Good habits praying:: breathing:: yes beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-22/","text":"daily #journal \u00b6 Daily Note 2022-01-22 \u00b6 [x] sort out papers [x] Read a book [x] Noooo, a task [x] Some other task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Metadata \u00b6 Daily Routine wake-up:: 07:07 lunch:: 12:00 dinner:: 19:55 go-to-sleep:: 23:00 Workout training:: 13m situps:: 2 steps:: 7385 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-22/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-22/#daily-note-2022-01-22","text":"[x] sort out papers [x] Read a book [x] Noooo, a task [x] Some other task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later","title":"Daily Note 2022-01-22"},{"location":"10%20Example%20Data/dailys/2022-01-22/#metadata","text":"Daily Routine wake-up:: 07:07 lunch:: 12:00 dinner:: 19:55 go-to-sleep:: 23:00 Workout training:: 13m situps:: 2 steps:: 7385 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-23/","text":"daily #journal \u00b6 Daily Note 2022-01-23 \u00b6 [ ] Task 1 of 2022-01-23 [x] Completed Task of 2022-01-23 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [-] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-07-12). Also I have an appointment at (appointment:: 2022-11-13 18:48) with (person:: [[Bob]]) Money spent \u00b6 bought:: piece of cake paid:: 7.99$ bought:: noodles paid:: 12.75$ bought:: trousers paid:: 56$ Metadata \u00b6 Daily Routine wake-up:: 07:12 lunch:: 12:00 dinner:: 20:05 go-to-sleep:: 23:45 Workout training:: 15m situps:: 6 steps:: 897 Good habits praying:: breathing:: yes beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-23/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-23/#daily-note-2022-01-23","text":"[ ] Task 1 of 2022-01-23 [x] Completed Task of 2022-01-23 [x] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [-] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 0].","title":"Daily Note 2022-01-23"},{"location":"10%20Example%20Data/dailys/2022-01-23/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-07-12). Also I have an appointment at (appointment:: 2022-11-13 18:48) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-23/#money-spent","text":"bought:: piece of cake paid:: 7.99$ bought:: noodles paid:: 12.75$ bought:: trousers paid:: 56$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-01-23/#metadata","text":"Daily Routine wake-up:: 07:12 lunch:: 12:00 dinner:: 20:05 go-to-sleep:: 23:45 Workout training:: 15m situps:: 6 steps:: 897 Good habits praying:: breathing:: yes beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-24/","text":"daily #journal \u00b6 Daily Note 2022-01-24 \u00b6 [ ] Task 1 of 2022-01-24 [x] Completed Task of 2022-01-24 [>] Task with state (maybe) [>] Task with state (maybe) 2 [o] Task with state (maybe) 3 [>] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 4]. summary:: Today was a good day, I met AB, did some sports and saw a wonderful sunset. Appointments \u00b6 My next appointment with (person:: Elias ) is on (appointment:: 2022-03-06). Also I have an appointment at (appointment:: 2022-12-08 12:28) with (person:: [[Barbara]]) met:: To my suprise, AB1908 was at the gym! Metadata \u00b6 Daily Routine wake-up:: 07:03 lunch:: 12:00 dinner:: 19:27 go-to-sleep:: 22:51 Workout training:: situps:: 5 steps:: 3563 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-24/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-24/#daily-note-2022-01-24","text":"[ ] Task 1 of 2022-01-24 [x] Completed Task of 2022-01-24 [>] Task with state (maybe) [>] Task with state (maybe) 2 [o] Task with state (maybe) 3 [>] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 4]. summary:: Today was a good day, I met AB, did some sports and saw a wonderful sunset.","title":"Daily Note 2022-01-24"},{"location":"10%20Example%20Data/dailys/2022-01-24/#appointments","text":"My next appointment with (person:: Elias ) is on (appointment:: 2022-03-06). Also I have an appointment at (appointment:: 2022-12-08 12:28) with (person:: [[Barbara]]) met:: To my suprise, AB1908 was at the gym!","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-24/#metadata","text":"Daily Routine wake-up:: 07:03 lunch:: 12:00 dinner:: 19:27 go-to-sleep:: 22:51 Workout training:: situps:: 5 steps:: 3563 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-25/","text":"daily #journal \u00b6 Daily Note 2022-01-25 \u00b6 [ ] Task 1 of 2022-01-25 [x] Completed Task of 2022-01-25 [x] Task with state (maybe) [>] Task with state (maybe) 2 [x] Task with state (maybe) 3 [-] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 2]. summary:: Rainy, spent most of the time in the university, learning. Appointments \u00b6 My next appointment with (person:: [[Fernando]]) is on (appointment:: 2022-04-27). Also I have an appointment at (appointment:: 2022-02-21 14:52) with (person:: [[Bob]]) Metadata \u00b6 Daily Routine wake-up:: 07:49 lunch:: 12:00 dinner:: 20:23 go-to-sleep:: 22:57 Workout training:: 1h 5m situps:: 0 steps:: 6307 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-25/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-25/#daily-note-2022-01-25","text":"[ ] Task 1 of 2022-01-25 [x] Completed Task of 2022-01-25 [x] Task with state (maybe) [>] Task with state (maybe) 2 [x] Task with state (maybe) 3 [-] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 2] and [buns:: 2]. summary:: Rainy, spent most of the time in the university, learning.","title":"Daily Note 2022-01-25"},{"location":"10%20Example%20Data/dailys/2022-01-25/#appointments","text":"My next appointment with (person:: [[Fernando]]) is on (appointment:: 2022-04-27). Also I have an appointment at (appointment:: 2022-02-21 14:52) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-25/#metadata","text":"Daily Routine wake-up:: 07:49 lunch:: 12:00 dinner:: 20:23 go-to-sleep:: 22:57 Workout training:: 1h 5m situps:: 0 steps:: 6307 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-26/","text":"daily #journal \u00b6 Daily Note 2022-01-26 \u00b6 [-] Dust of the chimney [x] Take a bath [x] Yay, a task [x] A task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later summary:: Preparation for test in logistics Metadata \u00b6 Daily Routine wake-up:: 07:27 lunch:: 12:00 dinner:: 15:23 go-to-sleep:: 22:05 Workout training:: situps:: 12 steps:: 7213 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-26/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-26/#daily-note-2022-01-26","text":"[-] Dust of the chimney [x] Take a bath [x] Yay, a task [x] A task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later summary:: Preparation for test in logistics","title":"Daily Note 2022-01-26"},{"location":"10%20Example%20Data/dailys/2022-01-26/#metadata","text":"Daily Routine wake-up:: 07:27 lunch:: 12:00 dinner:: 15:23 go-to-sleep:: 22:05 Workout training:: situps:: 12 steps:: 7213 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-27/","text":"daily #journal \u00b6 Daily Note 2022-01-27 \u00b6 [x] Dust of the chimney [x] Have something sweet [x] Some other task [ ] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later summary:: wrote logistics. was okayish, I think I passed. Afterwards we hit a pub with a few students, that was nice! Metadata \u00b6 Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 20:13 go-to-sleep:: 22:07 Workout training:: situps:: 8 steps:: 5996 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-27/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-27/#daily-note-2022-01-27","text":"[x] Dust of the chimney [x] Have something sweet [x] Some other task [ ] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later summary:: wrote logistics. was okayish, I think I passed. Afterwards we hit a pub with a few students, that was nice!","title":"Daily Note 2022-01-27"},{"location":"10%20Example%20Data/dailys/2022-01-27/#metadata","text":"Daily Routine wake-up:: 06:11 lunch:: 12:00 dinner:: 20:13 go-to-sleep:: 22:07 Workout training:: situps:: 8 steps:: 5996 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-28/","text":"daily #journal \u00b6 Daily Note 2022-01-28 \u00b6 [ ] Task 1 of 2022-01-28 [x] Completed Task of 2022-01-28 [-] Task with state (maybe) [o] Task with state (maybe) 2 [>] Task with state (maybe) 3 [x] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 3]. Appointments \u00b6 My next appointment with (person:: [[Fernando]]) is on (appointment:: 2022-08-20). Also I have an appointment at (appointment:: 2022-10-30 20:38) with (person:: [[Barbara]]) summary:: Talked again to Sophie. She seems to do better. Had a long walk through the park and a delicious piece of cake on the cafe nearby. Post test season is the best season! Metadata \u00b6 Daily Routine wake-up:: 07:26 lunch:: 12:00 dinner:: 15:47 go-to-sleep:: 22:17 Workout training:: situps:: 2 steps:: 11067 Good habits praying:: breathing:: yes beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-28/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-28/#daily-note-2022-01-28","text":"[ ] Task 1 of 2022-01-28 [x] Completed Task of 2022-01-28 [-] Task with state (maybe) [o] Task with state (maybe) 2 [>] Task with state (maybe) 3 [x] Task with state (maybe) 4 [ ] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 3].","title":"Daily Note 2022-01-28"},{"location":"10%20Example%20Data/dailys/2022-01-28/#appointments","text":"My next appointment with (person:: [[Fernando]]) is on (appointment:: 2022-08-20). Also I have an appointment at (appointment:: 2022-10-30 20:38) with (person:: [[Barbara]]) summary:: Talked again to Sophie. She seems to do better. Had a long walk through the park and a delicious piece of cake on the cafe nearby. Post test season is the best season!","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-28/#metadata","text":"Daily Routine wake-up:: 07:26 lunch:: 12:00 dinner:: 15:47 go-to-sleep:: 22:17 Workout training:: situps:: 2 steps:: 11067 Good habits praying:: breathing:: yes beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-29/","text":"daily #journal \u00b6 Daily Note 2022-01-29 \u00b6 [ ] Task 1 of 2022-01-29 [x] Completed Task of 2022-01-29 [>] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [-] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: Elias ) is on (appointment:: 2022-03-30). Also I have an appointment at (appointment:: 2022-11-30 12:40) with (person:: [[Barbara]]) Metadata \u00b6 Daily Routine wake-up:: 06:08 lunch:: 12:00 dinner:: 20:23 go-to-sleep:: 22:27 Workout training:: 23m situps:: 1 steps:: 635 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-29/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-29/#daily-note-2022-01-29","text":"[ ] Task 1 of 2022-01-29 [x] Completed Task of 2022-01-29 [>] Task with state (maybe) [x] Task with state (maybe) 2 [o] Task with state (maybe) 3 [-] Task with state (maybe) 4 [-] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 0].","title":"Daily Note 2022-01-29"},{"location":"10%20Example%20Data/dailys/2022-01-29/#appointments","text":"My next appointment with (person:: Elias ) is on (appointment:: 2022-03-30). Also I have an appointment at (appointment:: 2022-11-30 12:40) with (person:: [[Barbara]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-29/#metadata","text":"Daily Routine wake-up:: 06:08 lunch:: 12:00 dinner:: 20:23 go-to-sleep:: 22:27 Workout training:: 23m situps:: 1 steps:: 635 Good habits praying:: breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-30/","text":"daily #journal \u00b6 Daily Note 2022-01-30 \u00b6 [ ] Task 1 of 2022-01-30 [x] Completed Task of 2022-01-30 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [>] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2]. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-05-14). Also I have an appointment at (appointment:: 2022-05-30 21:30) with (person:: [[Alice]]) summary:: caugt some kind of bad stomach yesterday. spent today relaxing and recovering. Metadata \u00b6 Daily Routine wake-up:: 06:33 lunch:: 12:00 dinner:: 18:39 go-to-sleep:: 22:42 Workout training:: 1h 27m situps:: 0 steps:: 9563 Good habits praying:: yes breathing:: yes beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-30/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-30/#daily-note-2022-01-30","text":"[ ] Task 1 of 2022-01-30 [x] Completed Task of 2022-01-30 [x] Task with state (maybe) [x] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [>] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2].","title":"Daily Note 2022-01-30"},{"location":"10%20Example%20Data/dailys/2022-01-30/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-05-14). Also I have an appointment at (appointment:: 2022-05-30 21:30) with (person:: [[Alice]]) summary:: caugt some kind of bad stomach yesterday. spent today relaxing and recovering.","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-30/#metadata","text":"Daily Routine wake-up:: 06:33 lunch:: 12:00 dinner:: 18:39 go-to-sleep:: 22:42 Workout training:: 1h 27m situps:: 0 steps:: 9563 Good habits praying:: yes breathing:: yes beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-01-31/","text":"daily #journal \u00b6 Daily Note 2022-01-31 \u00b6 [ ] Task 1 of 2022-01-31 [x] Completed Task of 2022-01-31 [x] Task with state (maybe) [x] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [x] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 2]. note:: day is uncle bobs wedding day. don't call again on this very day. Appointments \u00b6 My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-10-08). Also I have an appointment at (appointment:: 2022-04-04 17:58) with (person:: Jonathan ) note:: something to remember about appointments. I forgot. Metadata \u00b6 Daily Routine wake-up:: 07:57 lunch:: 12:00 dinner:: 19:43 go-to-sleep:: 22:06 Workout training:: 15m situps:: 24 steps:: 10242 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-31/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-01-31/#daily-note-2022-01-31","text":"[ ] Task 1 of 2022-01-31 [x] Completed Task of 2022-01-31 [x] Task with state (maybe) [x] Task with state (maybe) 2 [ ] Task with state (maybe) 3 [x] Task with state (maybe) 4 [o] Task with state (maybe) 5 Today I ate [icecream:: 0] and [buns:: 2]. note:: day is uncle bobs wedding day. don't call again on this very day.","title":"Daily Note 2022-01-31"},{"location":"10%20Example%20Data/dailys/2022-01-31/#appointments","text":"My next appointment with (person:: [[Lisa]]) is on (appointment:: 2022-10-08). Also I have an appointment at (appointment:: 2022-04-04 17:58) with (person:: Jonathan ) note:: something to remember about appointments. I forgot.","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-01-31/#metadata","text":"Daily Routine wake-up:: 07:57 lunch:: 12:00 dinner:: 19:43 go-to-sleep:: 22:06 Workout training:: 15m situps:: 24 steps:: 10242 Good habits praying:: breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-01/","text":"daily #journal \u00b6 Daily Note 2022-02-01 \u00b6 [>] sort out papers [x] Have something sweet [x] Some other task [-] Noooo, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later met:: Sophie was shopping. Got a nice new skirt for herself, suits her nicely! note:: need to get a new jeans for myself. The current one looks really beaten. Metadata \u00b6 Daily Routine wake-up:: 06:34 lunch:: 12:00 dinner:: 15:29 go-to-sleep:: 22:39 Workout training:: 41m situps:: 8 steps:: 1898 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-01/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-01/#daily-note-2022-02-01","text":"[>] sort out papers [x] Have something sweet [x] Some other task [-] Noooo, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later met:: Sophie was shopping. Got a nice new skirt for herself, suits her nicely! note:: need to get a new jeans for myself. The current one looks really beaten.","title":"Daily Note 2022-02-01"},{"location":"10%20Example%20Data/dailys/2022-02-01/#metadata","text":"Daily Routine wake-up:: 06:34 lunch:: 12:00 dinner:: 15:29 go-to-sleep:: 22:39 Workout training:: 41m situps:: 8 steps:: 1898 Good habits praying:: yes breathing:: beingthankful:: slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-02/","text":"daily #journal \u00b6 Daily Note 2022-02-02 \u00b6 [-] Dust of the chimney [x] Read a book [x] Noooo, a task [x] Noooo, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. note:: Check your food pantry before you invite friends, doh. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later note:: The new sitting places on the small plaza across the street are finished. Turned out quite neat! Metadata \u00b6 Daily Routine wake-up:: 07:43 lunch:: 12:00 dinner:: 21:48 go-to-sleep:: 22:37 Workout training:: 2h 2m situps:: 9 steps:: 3225 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-02/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-02/#daily-note-2022-02-02","text":"[-] Dust of the chimney [x] Read a book [x] Noooo, a task [x] Noooo, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. note:: Check your food pantry before you invite friends, doh. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later note:: The new sitting places on the small plaza across the street are finished. Turned out quite neat!","title":"Daily Note 2022-02-02"},{"location":"10%20Example%20Data/dailys/2022-02-02/#metadata","text":"Daily Routine wake-up:: 07:43 lunch:: 12:00 dinner:: 21:48 go-to-sleep:: 22:37 Workout training:: 2h 2m situps:: 9 steps:: 3225 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-03/","text":"daily #journal \u00b6 Daily Note 2022-02-03 \u00b6 [ ] Task 1 of 2022-02-03 [x] Completed Task of 2022-02-03 [o] Task with state (maybe) [o] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2]. Appointments \u00b6 My next appointment with (person:: AB1908 ) is on (appointment:: 2022-06-02). Also I have an appointment at (appointment:: 2022-05-24 13:17) with (person:: [[Bob]]) Money spent \u00b6 bought:: coffee to go paid:: 8$ bought:: fish and chips paid:: 12.75$ bought:: shoes paid:: 78$ Metadata \u00b6 Daily Routine wake-up:: 06:52 lunch:: 12:00 dinner:: 15:48 go-to-sleep:: 22:56 Workout training:: 23m situps:: 4 steps:: 5842 Good habits praying:: yes breathing:: yes beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-03/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-03/#daily-note-2022-02-03","text":"[ ] Task 1 of 2022-02-03 [x] Completed Task of 2022-02-03 [o] Task with state (maybe) [o] Task with state (maybe) 2 [x] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 2].","title":"Daily Note 2022-02-03"},{"location":"10%20Example%20Data/dailys/2022-02-03/#appointments","text":"My next appointment with (person:: AB1908 ) is on (appointment:: 2022-06-02). Also I have an appointment at (appointment:: 2022-05-24 13:17) with (person:: [[Bob]])","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-02-03/#money-spent","text":"bought:: coffee to go paid:: 8$ bought:: fish and chips paid:: 12.75$ bought:: shoes paid:: 78$","title":"Money spent"},{"location":"10%20Example%20Data/dailys/2022-02-03/#metadata","text":"Daily Routine wake-up:: 06:52 lunch:: 12:00 dinner:: 15:48 go-to-sleep:: 22:56 Workout training:: 23m situps:: 4 steps:: 5842 Good habits praying:: yes breathing:: yes beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-04/","text":"daily #journal \u00b6 Daily Note 2022-02-04 \u00b6 [ ] Task 1 of 2022-02-04 [x] Completed Task of 2022-02-04 [x] Task with state (maybe) [>] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 0]. Appointments \u00b6 My next appointment with (person:: Christa) is on (appointment:: 2022-04-20). Also I have an appointment at (appointment:: 2022-09-14 20:42) with (person:: [[Karl]]) met:: Went to this lecture about architecture and AB1908 and Sophie were around. note:: some note about something surely important note:: a second note note:: there's even a third one? wow. note:: okay, now you exaggerate Metadata \u00b6 Daily Routine wake-up:: 07:26 lunch:: 12:00 dinner:: 18:01 go-to-sleep:: 23:37 Workout training:: 23m situps:: 20 steps:: 2532 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-04/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-04/#daily-note-2022-02-04","text":"[ ] Task 1 of 2022-02-04 [x] Completed Task of 2022-02-04 [x] Task with state (maybe) [>] Task with state (maybe) 2 [o] Task with state (maybe) 3 [x] Task with state (maybe) 4 [x] Task with state (maybe) 5 Today I ate [icecream:: 1] and [buns:: 0].","title":"Daily Note 2022-02-04"},{"location":"10%20Example%20Data/dailys/2022-02-04/#appointments","text":"My next appointment with (person:: Christa) is on (appointment:: 2022-04-20). Also I have an appointment at (appointment:: 2022-09-14 20:42) with (person:: [[Karl]]) met:: Went to this lecture about architecture and AB1908 and Sophie were around. note:: some note about something surely important note:: a second note note:: there's even a third one? wow. note:: okay, now you exaggerate","title":"Appointments"},{"location":"10%20Example%20Data/dailys/2022-02-04/#metadata","text":"Daily Routine wake-up:: 07:26 lunch:: 12:00 dinner:: 18:01 go-to-sleep:: 23:37 Workout training:: 23m situps:: 20 steps:: 2532 Good habits praying:: yes breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-05/","text":"daily #journal \u00b6 Daily Note 2022-02-05 \u00b6 [>] paint the fence [x] Drink a tea and relax [x] Some other task [>] Here's a task, suprise Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Uuuh, there will be a Judas Priest concert on [due:: 2022-02-17] with live streaming! Metadata \u00b6 Daily Routine wake-up:: 07:44 lunch:: 12:00 dinner:: 19:12 go-to-sleep:: 23:53 Workout training:: 2h 2m situps:: 4 steps:: 5219 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-05/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-05/#daily-note-2022-02-05","text":"[>] paint the fence [x] Drink a tea and relax [x] Some other task [>] Here's a task, suprise Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later Uuuh, there will be a Judas Priest concert on [due:: 2022-02-17] with live streaming!","title":"Daily Note 2022-02-05"},{"location":"10%20Example%20Data/dailys/2022-02-05/#metadata","text":"Daily Routine wake-up:: 07:44 lunch:: 12:00 dinner:: 19:12 go-to-sleep:: 23:53 Workout training:: 2h 2m situps:: 4 steps:: 5219 Good habits praying:: breathing:: beingthankful:: yes slowdown::","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-06/","text":"daily #journal \u00b6 Daily Note 2022-02-06 \u00b6 [-] Take a walk [x] Have something sweet [x] Yay, a task [-] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later note:: Enjoyed the dinner. Need to eat fresh salad more often. Metadata \u00b6 Daily Routine wake-up:: 06:07 lunch:: 12:00 dinner:: 17:33 go-to-sleep:: 22:40 Workout training:: 2h 2m situps:: 5 steps:: 5701 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-06/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-02-06/#daily-note-2022-02-06","text":"[-] Take a walk [x] Have something sweet [x] Yay, a task [-] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later note:: Enjoyed the dinner. Need to eat fresh salad more often.","title":"Daily Note 2022-02-06"},{"location":"10%20Example%20Data/dailys/2022-02-06/#metadata","text":"Daily Routine wake-up:: 06:07 lunch:: 12:00 dinner:: 17:33 go-to-sleep:: 22:40 Workout training:: 2h 2m situps:: 5 steps:: 5701 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/dailys/2022-02-16/","text":"Gonna do this tmrw... \u00b6 [ ] You need to call [[Becks]]. Really. Do it. [ ] Clean up this mess in the kitchen [ ] Check if the sale on amazon started yet - need new speakers","title":"2022 02 16"},{"location":"10%20Example%20Data/dailys/2022-02-16/#gonna-do-this-tmrw","text":"[ ] You need to call [[Becks]]. Really. Do it. [ ] Clean up this mess in the kitchen [ ] Check if the sale on amazon started yet - need new speakers","title":"Gonna do this tmrw..."},{"location":"10%20Example%20Data/dailys/2022-07-22/","text":"Research \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquet eu nibh sed pharetra. Praesent sit amet magna vel lacus condimentum finibus id ac quam. Cras eu eros posuere, molestie lacus at, laoreet purus. Phasellus sodales ex turpis, et vehicula mauris euismod at. Duis pulvinar dictum commodo. Etiam auctor urna non nunc mollis mollis. #tag1 Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat nulla, scelerisque at consectetur vel, lobortis quis mauris. Donec ut vehicula augue. Donec nec elit malesuada, posuere nibh vitae, lacinia elit. #tag2 Nulla dignissim cursus pretium. Proin luctus ante sed mi elementum feugiat. Vivamus quis eros a nisi condimentum maximus vitae nec tortor. Sed fermentum felis eu tristique vehicula. #tag1 Aenean eu magna vel nulla vulputate faucibus. Suspendisse laoreet et est eu dapibus. Sed hendrerit lorem tristique sapien vestibulum congue. Nulla facilisi. Integer id sollicitudin lorem. Integer egestas porta mauris, nec condimentum enim sodales quis. Topics \u00b6 Nullam suscipit congue eros, id sodales sapien auctor quis. Aenean laoreet, leo vel eleifend porttitor, justo velit dapibus est, vel interdum mauris sapien at sem. Suspendisse orci augue, ullamcorper eu enim id, sollicitudin tristique risus. (subTopic:: lorem) Nulla at orci vitae neque laoreet volutpat. Donec at interdum mi, a scelerisque lorem. Ut laoreet turpis enim, nec elementum augue commodo vitae. Donec in dignissim sem, eu aliquet metus. Maecenas sagittis massa sit amet massa placerat pulvinar. Vivamus dictum elit in est rutrum pellentesque. Vestibulum porta cursus magna at pharetra. (subTopic:: lorem) Praesent tempor purus placerat, porta arcu vitae, iaculis leo. Ut venenatis a metus vitae dapibus. Vestibulum ornare metus vel sapien ullamcorper laoreet. (author:: N. Surname) Nam sagittis tempus nisl. Cras nec dolor pharetra, imperdiet tellus ut, semper lectus. Donec viverra, magna et euismod pulvinar, massa massa hendrerit erat, in consectetur neque nibh hendrerit mi. (subTopic:: ipsum) Phasellus sed euismod nibh. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis tortor nisi, pulvinar at lorem quis, congue luctus velit. (author:: A. Nickname)","title":"2022 07 22"},{"location":"10%20Example%20Data/dailys/2022-07-22/#research","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquet eu nibh sed pharetra. Praesent sit amet magna vel lacus condimentum finibus id ac quam. Cras eu eros posuere, molestie lacus at, laoreet purus. Phasellus sodales ex turpis, et vehicula mauris euismod at. Duis pulvinar dictum commodo. Etiam auctor urna non nunc mollis mollis. #tag1 Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat nulla, scelerisque at consectetur vel, lobortis quis mauris. Donec ut vehicula augue. Donec nec elit malesuada, posuere nibh vitae, lacinia elit. #tag2 Nulla dignissim cursus pretium. Proin luctus ante sed mi elementum feugiat. Vivamus quis eros a nisi condimentum maximus vitae nec tortor. Sed fermentum felis eu tristique vehicula. #tag1 Aenean eu magna vel nulla vulputate faucibus. Suspendisse laoreet et est eu dapibus. Sed hendrerit lorem tristique sapien vestibulum congue. Nulla facilisi. Integer id sollicitudin lorem. Integer egestas porta mauris, nec condimentum enim sodales quis.","title":"Research"},{"location":"10%20Example%20Data/dailys/2022-07-22/#topics","text":"Nullam suscipit congue eros, id sodales sapien auctor quis. Aenean laoreet, leo vel eleifend porttitor, justo velit dapibus est, vel interdum mauris sapien at sem. Suspendisse orci augue, ullamcorper eu enim id, sollicitudin tristique risus. (subTopic:: lorem) Nulla at orci vitae neque laoreet volutpat. Donec at interdum mi, a scelerisque lorem. Ut laoreet turpis enim, nec elementum augue commodo vitae. Donec in dignissim sem, eu aliquet metus. Maecenas sagittis massa sit amet massa placerat pulvinar. Vivamus dictum elit in est rutrum pellentesque. Vestibulum porta cursus magna at pharetra. (subTopic:: lorem) Praesent tempor purus placerat, porta arcu vitae, iaculis leo. Ut venenatis a metus vitae dapibus. Vestibulum ornare metus vel sapien ullamcorper laoreet. (author:: N. Surname) Nam sagittis tempus nisl. Cras nec dolor pharetra, imperdiet tellus ut, semper lectus. Donec viverra, magna et euismod pulvinar, massa massa hendrerit erat, in consectetur neque nibh hendrerit mi. (subTopic:: ipsum) Phasellus sed euismod nibh. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Duis tortor nisi, pulvinar at lorem quis, congue luctus velit. (author:: A. Nickname)","title":"Topics"},{"location":"10%20Example%20Data/dailys/2022-07-25/","text":"Got a call from (person:: [[Alice]]) Research \u00b6 Dolores veritatis. Sed occaecat. Proident. Natus exercitation incididunt. Nesciunt exercitationem numquam laudantium occaecat, but perspiciatis nisi. Incididunt corporis so aute and molestiae. Consequat ea. Quam sed. Quae aperiam for aliqua ipsum. #tag1 Ipsa deserunt incididunt and ratione. Tempor amet. Quisquam. Nihil ea ipsa. Magnam id for cillum. Anim. Aliquam corporis culpa reprehenderit perspiciatis. Magni eius nor aliqua molestiae do. (author:: A. Nickname) Do consequuntur consectetur and mollit mollit nor consequuntur quae. Aperiam. Aute vel. Error fugit and laborum yet eos sint. Aliquip voluptas. #tag2 Illum amet deserunt. Consectetur quaerat but laboriosam, perspiciatis. Eu ea est and inventore doloremque laboris or incidunt. Ipsa. (author:: N. Surname) Occaecat esse quia for nesciunt. Laboris aspernatur quasi nor adipisicing, ullamco ut nor consequat. Doloremque incididunt and magni yet exercitationem nihil. Et excepteur. Ipsum. Eum consectetur and odit. Ipsam. Modi iste for enim anim deserunt proident. #tag2 Ipsam. Magna sunt tempora so perspiciatis, and vitae and odit nor sunt. Ea minim nisi. Aperiam aut laborum. Explicabo eum fugiat. Tempora occaecat. Aperiam aliquid aute yet ratione. Topics \u00b6 Rem accusantium, but unde or adipisicing yet exercitationem. Sed quam corporis, or ratione or anim laborum. Fugiat eius commodi. Ad sint so fugit. Nisi laborum but voluptate. Quo. Laborum et. Beatae laboris et quaerat so ist e quo nor sed. Quaerat nostrum so duis consequuntur laudantium. (author:: A. Nickname) Ratione accusantium but consequatur. Reprehenderit. Ipsum. Duis. Quo consectetur or exec pteur non dolor nor fugit modi. (author:: A. Nickname)","title":"2022 07 25"},{"location":"10%20Example%20Data/dailys/2022-07-25/#research","text":"Dolores veritatis. Sed occaecat. Proident. Natus exercitation incididunt. Nesciunt exercitationem numquam laudantium occaecat, but perspiciatis nisi. Incididunt corporis so aute and molestiae. Consequat ea. Quam sed. Quae aperiam for aliqua ipsum. #tag1 Ipsa deserunt incididunt and ratione. Tempor amet. Quisquam. Nihil ea ipsa. Magnam id for cillum. Anim. Aliquam corporis culpa reprehenderit perspiciatis. Magni eius nor aliqua molestiae do. (author:: A. Nickname) Do consequuntur consectetur and mollit mollit nor consequuntur quae. Aperiam. Aute vel. Error fugit and laborum yet eos sint. Aliquip voluptas. #tag2 Illum amet deserunt. Consectetur quaerat but laboriosam, perspiciatis. Eu ea est and inventore doloremque laboris or incidunt. Ipsa. (author:: N. Surname) Occaecat esse quia for nesciunt. Laboris aspernatur quasi nor adipisicing, ullamco ut nor consequat. Doloremque incididunt and magni yet exercitationem nihil. Et excepteur. Ipsum. Eum consectetur and odit. Ipsam. Modi iste for enim anim deserunt proident. #tag2 Ipsam. Magna sunt tempora so perspiciatis, and vitae and odit nor sunt. Ea minim nisi. Aperiam aut laborum. Explicabo eum fugiat. Tempora occaecat. Aperiam aliquid aute yet ratione.","title":"Research"},{"location":"10%20Example%20Data/dailys/2022-07-25/#topics","text":"Rem accusantium, but unde or adipisicing yet exercitationem. Sed quam corporis, or ratione or anim laborum. Fugiat eius commodi. Ad sint so fugit. Nisi laborum but voluptate. Quo. Laborum et. Beatae laboris et quaerat so ist e quo nor sed. Quaerat nostrum so duis consequuntur laudantium. (author:: A. Nickname) Ratione accusantium but consequatur. Reprehenderit. Ipsum. Duis. Quo consectetur or exec pteur non dolor nor fugit modi. (author:: A. Nickname)","title":"Topics"},{"location":"10%20Example%20Data/dailys/2022-08-02/","text":"Quotes \u00b6 Where there is power, there is resistance. (author:: Michel Foucault) The imaginary is not formed in opposition to reality as its denial or compensation; it grows among signs, from book to book, in the interstice of repetitions and commentaries; it is born and takes shape in the interval between books. It is the phenomena of the library. (author:: Michel Foucault) History is written by the victors. (author:: Walter Benjamin) There is no document of civilization that is not also a document of barbarism. (author:: Walter Benjamin) The foundation of irreligious criticism is: Man makes religion, religion does not make man. Religion is, indeed, the self-consciousness and self-esteem of man who has either not yet won through to himself, or has already lost himself again. But man is no abstract being squatting outside the world. Man is the world of man \u2013 state, society. This state and this society produce religion, which is an inverted consciousness of the world, because they are an inverted world... (author:: Karl Marx) Reason has always existed, but not always in a reasonable form. (author:: Karl Marx)","title":"2022 08 02"},{"location":"10%20Example%20Data/dailys/2022-08-02/#quotes","text":"Where there is power, there is resistance. (author:: Michel Foucault) The imaginary is not formed in opposition to reality as its denial or compensation; it grows among signs, from book to book, in the interstice of repetitions and commentaries; it is born and takes shape in the interval between books. It is the phenomena of the library. (author:: Michel Foucault) History is written by the victors. (author:: Walter Benjamin) There is no document of civilization that is not also a document of barbarism. (author:: Walter Benjamin) The foundation of irreligious criticism is: Man makes religion, religion does not make man. Religion is, indeed, the self-consciousness and self-esteem of man who has either not yet won through to himself, or has already lost himself again. But man is no abstract being squatting outside the world. Man is the world of man \u2013 state, society. This state and this society produce religion, which is an inverted consciousness of the world, because they are an inverted world... (author:: Karl Marx) Reason has always existed, but not always in a reasonable form. (author:: Karl Marx)","title":"Quotes"},{"location":"10%20Example%20Data/dailys/2022-08-03/","text":"Quotes \u00b6 It is not the consciousness of men that determines their being, but, on the contrary, their social being that determines their consciousness. (author:: Karl Marx) The increase in value of the world of things is directly proportional to the decrease in value of the human world. (author:: Karl Marx) All human knowledge takes the form of interpretation. (author:: Walter Benjamin) The concept of progress must be grounded in the idea of catastrophe. That things are \"status quo\" is the catastrophe. It is not an ever-present possibility but what in each case is given. Thus hell is not something that awaits us, but this life here and now. (author:: Walter Benjamin) The work of an intellectual is not to mould the political will of others; it is, through the analyses that he does in his own field, to re-examine evidence and assumptions, to shake up habitual ways of working and thinking, to dissipate conventional familiarities, to re-evaluate rules and institutions and to participate in the formation of a political will (where he has his role as citizen to play). (author:: Michel Foucault)","title":"2022 08 03"},{"location":"10%20Example%20Data/dailys/2022-08-03/#quotes","text":"It is not the consciousness of men that determines their being, but, on the contrary, their social being that determines their consciousness. (author:: Karl Marx) The increase in value of the world of things is directly proportional to the decrease in value of the human world. (author:: Karl Marx) All human knowledge takes the form of interpretation. (author:: Walter Benjamin) The concept of progress must be grounded in the idea of catastrophe. That things are \"status quo\" is the catastrophe. It is not an ever-present possibility but what in each case is given. Thus hell is not something that awaits us, but this life here and now. (author:: Walter Benjamin) The work of an intellectual is not to mould the political will of others; it is, through the analyses that he does in his own field, to re-examine evidence and assumptions, to shake up habitual ways of working and thinking, to dissipate conventional familiarities, to re-evaluate rules and institutions and to participate in the formation of a political will (where he has his role as citizen to play). (author:: Michel Foucault)","title":"Quotes"},{"location":"10%20Example%20Data/dailys/2022-08-11/","text":"daily #journal \u00b6 Daily Note 2022-08-11 \u00b6 [o] sort out papers [ ] Read a book [ ] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later I talked to (person:: Elias ) on the train station. Metadata \u00b6 Daily Routine wake-up:: 07:08 lunch:: 12:10 dinner:: 19:53 go-to-sleep:: 23:27 Workout training:: 1h 12m situps:: 14 steps:: 7853 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-08-11/#daily-journal","text":"","title":"daily #journal"},{"location":"10%20Example%20Data/dailys/2022-08-11/#daily-note-2022-08-11","text":"[o] sort out papers [ ] Read a book [ ] Yay, a task Here is some unrelated text, but, you know, there are people that uses their daily notes to type some words, for example what they did this day, what they moved, if they encountered anything nice or interesting. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Something I want to do soon #next Another thing I want to do soon #next This is pretty interesting, but I probably won't have time for it #later I talked to (person:: Elias ) on the train station.","title":"Daily Note 2022-08-11"},{"location":"10%20Example%20Data/dailys/2022-08-11/#metadata","text":"Daily Routine wake-up:: 07:08 lunch:: 12:10 dinner:: 19:53 go-to-sleep:: 23:27 Workout training:: 1h 12m situps:: 14 steps:: 7853 Good habits praying:: yes breathing:: beingthankful:: slowdown:: yes","title":"Metadata"},{"location":"10%20Example%20Data/food/Bacon%20Pasta%20with%20tomato%20pasta%20sauce/","text":"Bacon Pasta with tomato pasta sauce \u00b6 Ingredients \u00b6 [ ] 160 g / 5 oz spaghetti or other long strand pasta of choice [ ] 1 tsp olive oil (or butter) [ ] 150 - 180 g / 5 - 6 oz bacon , diced [ ] 1 garlic clove , minced [ ] 1/2 onion , finely diced (brown, white, yellow) [ ] 400 g / 14 oz canned crushed tomato [ ] Salt and pepper [ ] Pinch of sugar , if needed (Note 1) [ ] Extra virgin olive oil [ ] Finely chopped parsley Instructions \u00b6 Have the ingredients lined up and ready to start cooking at the same time. Bring a large pot of water to the bowl. Add a pinch of salt. Cook pasta according to packet but MINUS 2 minutes. Meanwhile, heat oil in a skillet over high heat. Add bacon and cook for 1 minute, then add garlic and onion and cook for 3 minutes or until onion is translucent and bacon is golden. Drain excess fat if desired. Scoop out a mug of pasta cooking water, then pour about 1/2 cup into the skillet. Bring to simmer and stir, scraping the skillet to dissolve in all the golden bits stuck on the pan into the liquid. Add tomato, bring to simmer and cook for 2 minutes, then turn down to medium high. Drain pasta, or if you timed it right, use tongs to transfer it straight from the pot into the skillet. Toss gently using two wooden spoons for 2 minutes, or until the sauce is no longer sitting in the skillet, it's all on the pasta (see video). If it gets too thick, just add an extra splash of the pasta cooking water. Season with salt and pepper (remember bacon is salty!). Serve immediately, garnished with parmesan, parsley and final drizzle of olive oil if desired.","title":"Bacon Pasta with tomato pasta sauce"},{"location":"10%20Example%20Data/food/Bacon%20Pasta%20with%20tomato%20pasta%20sauce/#bacon-pasta-with-tomato-pasta-sauce","text":"","title":"Bacon Pasta with tomato pasta sauce"},{"location":"10%20Example%20Data/food/Bacon%20Pasta%20with%20tomato%20pasta%20sauce/#ingredients","text":"[ ] 160 g / 5 oz spaghetti or other long strand pasta of choice [ ] 1 tsp olive oil (or butter) [ ] 150 - 180 g / 5 - 6 oz bacon , diced [ ] 1 garlic clove , minced [ ] 1/2 onion , finely diced (brown, white, yellow) [ ] 400 g / 14 oz canned crushed tomato [ ] Salt and pepper [ ] Pinch of sugar , if needed (Note 1) [ ] Extra virgin olive oil [ ] Finely chopped parsley","title":"Ingredients"},{"location":"10%20Example%20Data/food/Bacon%20Pasta%20with%20tomato%20pasta%20sauce/#instructions","text":"Have the ingredients lined up and ready to start cooking at the same time. Bring a large pot of water to the bowl. Add a pinch of salt. Cook pasta according to packet but MINUS 2 minutes. Meanwhile, heat oil in a skillet over high heat. Add bacon and cook for 1 minute, then add garlic and onion and cook for 3 minutes or until onion is translucent and bacon is golden. Drain excess fat if desired. Scoop out a mug of pasta cooking water, then pour about 1/2 cup into the skillet. Bring to simmer and stir, scraping the skillet to dissolve in all the golden bits stuck on the pan into the liquid. Add tomato, bring to simmer and cook for 2 minutes, then turn down to medium high. Drain pasta, or if you timed it right, use tongs to transfer it straight from the pot into the skillet. Toss gently using two wooden spoons for 2 minutes, or until the sauce is no longer sitting in the skillet, it's all on the pasta (see video). If it gets too thick, just add an extra splash of the pasta cooking water. Season with salt and pepper (remember bacon is salty!). Serve immediately, garnished with parmesan, parsley and final drizzle of olive oil if desired.","title":"Instructions"},{"location":"10%20Example%20Data/food/Food%20pantry/","text":"Food pantry \u00b6 Carbohydrates \u00b6 500g oatmeal [best-before:: 2023-08-12] 500g whole grain pasta [best-before:: 2025-04-27] 1000g rice [best-before:: 2024-06-07] 1 pack crispbread [best-before:: 2023-03-30] Meat & Ready-made \u00b6 1 jar of sausages [best-before:: 2024-04-20] 3 cans of stew [best-before:: 2025-04-30] 2 pizzas [best-before:: 2023-03-20] Vegetables \u00b6 1 can of peas [best-before:: 2025-06-30] 2 jars of mushrooms [best-before:: 2025-10-01] 1 jar of pickled cucumbers [best-before:: 2024-07-11] 2 can of corn [best-before:: 2024-08-02] 1 can tomatoes [best-before:: 2024-12-30] 1 jar chickpeas [best-before:: 2025-01-01] Fruit \u00b6 2 cans of mandarin [best-before:: 2024-11-17] 1 can fruit cocktail [best-before:: 2023-09-28] Other \u00b6 1 can of coconut milk [best-before:: 2024-06-12] 1 bar of milk chocolate [best-before:: 2023-03-21]","title":"Food pantry"},{"location":"10%20Example%20Data/food/Food%20pantry/#food-pantry","text":"","title":"Food pantry"},{"location":"10%20Example%20Data/food/Food%20pantry/#carbohydrates","text":"500g oatmeal [best-before:: 2023-08-12] 500g whole grain pasta [best-before:: 2025-04-27] 1000g rice [best-before:: 2024-06-07] 1 pack crispbread [best-before:: 2023-03-30]","title":"Carbohydrates"},{"location":"10%20Example%20Data/food/Food%20pantry/#meat-ready-made","text":"1 jar of sausages [best-before:: 2024-04-20] 3 cans of stew [best-before:: 2025-04-30] 2 pizzas [best-before:: 2023-03-20]","title":"Meat &amp; Ready-made"},{"location":"10%20Example%20Data/food/Food%20pantry/#vegetables","text":"1 can of peas [best-before:: 2025-06-30] 2 jars of mushrooms [best-before:: 2025-10-01] 1 jar of pickled cucumbers [best-before:: 2024-07-11] 2 can of corn [best-before:: 2024-08-02] 1 can tomatoes [best-before:: 2024-12-30] 1 jar chickpeas [best-before:: 2025-01-01]","title":"Vegetables"},{"location":"10%20Example%20Data/food/Food%20pantry/#fruit","text":"2 cans of mandarin [best-before:: 2024-11-17] 1 can fruit cocktail [best-before:: 2023-09-28]","title":"Fruit"},{"location":"10%20Example%20Data/food/Food%20pantry/#other","text":"1 can of coconut milk [best-before:: 2024-06-12] 1 bar of milk chocolate [best-before:: 2023-03-21]","title":"Other"},{"location":"10%20Example%20Data/food/Mushroom%20Pasta/","text":"Mushroom Pasta \u00b6 Ingredients \u00b6 [ ] 200g / 7 oz short pasta like orecchiette, penne, macaroni (Note 1) [ ] 160g/6 oz long pasta - spaghetti, fettucine (Note 1) [ ] 400g / 14 oz mushrooms , sliced 1/2 cm / 1/5\" thick (Note 2) [ ] 50g / 3 tbsp unsalted butter , separated [ ] 1 tbsp olive oil [ ] 2 garlic cloves , finely minced [ ] 1/2 tsp each salt and pepper [ ] 1/2 cup freshly grated parmesan cheese (or 1/4 cup store bought grated)- [ ] [ ] Parsley , finely chopped [ ] Parmesan cheese , grated","title":"Mushroom Pasta"},{"location":"10%20Example%20Data/food/Mushroom%20Pasta/#mushroom-pasta","text":"","title":"Mushroom Pasta"},{"location":"10%20Example%20Data/food/Mushroom%20Pasta/#ingredients","text":"[ ] 200g / 7 oz short pasta like orecchiette, penne, macaroni (Note 1) [ ] 160g/6 oz long pasta - spaghetti, fettucine (Note 1) [ ] 400g / 14 oz mushrooms , sliced 1/2 cm / 1/5\" thick (Note 2) [ ] 50g / 3 tbsp unsalted butter , separated [ ] 1 tbsp olive oil [ ] 2 garlic cloves , finely minced [ ] 1/2 tsp each salt and pepper [ ] 1/2 cup freshly grated parmesan cheese (or 1/4 cup store bought grated)- [ ] [ ] Parsley , finely chopped [ ] Parmesan cheese , grated","title":"Ingredients"},{"location":"10%20Example%20Data/food/Oven%20Baked%20Chicken%20and%20Rice/","text":"Oven Baked Chicken and Rice \u00b6 Ingredients \u00b6 [ ] 5 bone in chicken thigh fillets, peel skin OFF , (Note 1) [ ] 1 onion , chopped (brown, white or yellow) [ ] 2 cloves garlic (large) , minced [ ] 2 tbsp (30g) butter (or olive oil) [ ] 1 1/2 cups (270g) uncooked white rice (Note 3) [ ] 1 1/2 cups (375 ml) chicken broth/stock , hot (I microwave) [ ] 1 1/4 cups (315 ml) water , hot (tap is fine)- [ ] Instructions \u00b6 Preheat oven to 180\u00b0C/350\u00b0F. Scatter onion and garlic in a baking dish (about 10 x 15\" / 25 x 35 cm), then place butter in the centre. Bake for 15 minutes (check at 12 minutes, mix if some bits are browning too much). Meanwhile, mix together Chicken Rub. Sprinkle on both sides of the chicken. Remove baking dish from the oven. Add rice then mix. Place chicken on rice. Then pour chicken broth and water around the chicken. Cover with foil, then bake for 30 minutes. Remove foil, spray chicken with oil (optional, gives chicken nicer finish), then bake for a further 20 minutes until liquid is absorbed. Stand for 5 minutes, then remove chicken and fluff up rice. Garnish with parsley or thyme if desired, serve and enjoy!","title":"Oven Baked Chicken and Rice"},{"location":"10%20Example%20Data/food/Oven%20Baked%20Chicken%20and%20Rice/#oven-baked-chicken-and-rice","text":"","title":"Oven Baked Chicken and Rice"},{"location":"10%20Example%20Data/food/Oven%20Baked%20Chicken%20and%20Rice/#ingredients","text":"[ ] 5 bone in chicken thigh fillets, peel skin OFF , (Note 1) [ ] 1 onion , chopped (brown, white or yellow) [ ] 2 cloves garlic (large) , minced [ ] 2 tbsp (30g) butter (or olive oil) [ ] 1 1/2 cups (270g) uncooked white rice (Note 3) [ ] 1 1/2 cups (375 ml) chicken broth/stock , hot (I microwave) [ ] 1 1/4 cups (315 ml) water , hot (tap is fine)- [ ]","title":"Ingredients"},{"location":"10%20Example%20Data/food/Oven%20Baked%20Chicken%20and%20Rice/#instructions","text":"Preheat oven to 180\u00b0C/350\u00b0F. Scatter onion and garlic in a baking dish (about 10 x 15\" / 25 x 35 cm), then place butter in the centre. Bake for 15 minutes (check at 12 minutes, mix if some bits are browning too much). Meanwhile, mix together Chicken Rub. Sprinkle on both sides of the chicken. Remove baking dish from the oven. Add rice then mix. Place chicken on rice. Then pour chicken broth and water around the chicken. Cover with foil, then bake for 30 minutes. Remove foil, spray chicken with oil (optional, gives chicken nicer finish), then bake for a further 20 minutes until liquid is absorbed. Stand for 5 minutes, then remove chicken and fluff up rice. Garnish with parsley or thyme if desired, serve and enjoy!","title":"Instructions"},{"location":"10%20Example%20Data/food/Pesto%20Pasta/","text":"Pesto Pasta \u00b6 Ingredients \u00b6 [ ] 1 quantity homemade pesto (Note 1) [ ] 300 - 350 g / 10 - 12 oz pasta of choice (ziti, penne and spaghetti are my favourites, Note 2) [ ] 2 tsp salt [ ] 3/4 cup pasta cooking water [ ] Parmesan, for serving Instructions \u00b6 Instructions \u00b6 Bring a large pot of water to the boil with the salt. Add pasta and cook for the length of time per the packet. Just before draining, scoop out 1 cup of of the pasta cooking water. Drain pasta in a colander, leave it for a minute. Transfer pasta to a bowl (do not use pasta cooking pot, too hot). Add pesto and 1/4 cup of pasta water. Toss to coat pasta in pesto, adding more water if required to make pasta silky and saucy, rather than dry and sticky. Taste, add more salt and pepper if desired. Serve immediately, garnished with fresh parmesan.","title":"Pesto Pasta"},{"location":"10%20Example%20Data/food/Pesto%20Pasta/#pesto-pasta","text":"","title":"Pesto Pasta"},{"location":"10%20Example%20Data/food/Pesto%20Pasta/#ingredients","text":"[ ] 1 quantity homemade pesto (Note 1) [ ] 300 - 350 g / 10 - 12 oz pasta of choice (ziti, penne and spaghetti are my favourites, Note 2) [ ] 2 tsp salt [ ] 3/4 cup pasta cooking water [ ] Parmesan, for serving","title":"Ingredients"},{"location":"10%20Example%20Data/food/Pesto%20Pasta/#instructions","text":"","title":"Instructions"},{"location":"10%20Example%20Data/food/Pesto%20Pasta/#instructions_1","text":"Bring a large pot of water to the boil with the salt. Add pasta and cook for the length of time per the packet. Just before draining, scoop out 1 cup of of the pasta cooking water. Drain pasta in a colander, leave it for a minute. Transfer pasta to a bowl (do not use pasta cooking pot, too hot). Add pesto and 1/4 cup of pasta water. Toss to coat pasta in pesto, adding more water if required to make pasta silky and saucy, rather than dry and sticky. Taste, add more salt and pepper if desired. Serve immediately, garnished with fresh parmesan.","title":"Instructions"},{"location":"10%20Example%20Data/games/Among%20Us/","text":"games \u00b6 Among Us \u00b6 ....","title":"games"},{"location":"10%20Example%20Data/games/Among%20Us/#games","text":"","title":"games"},{"location":"10%20Example%20Data/games/Among%20Us/#among-us","text":"....","title":"Among Us"},{"location":"10%20Example%20Data/games/Dota%202/","text":"games #genre/action \u00b6 Dota 2 \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Dota%202/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Dota%202/#dota-2","text":"....","title":"Dota 2"},{"location":"10%20Example%20Data/games/ELDEN%20RING/","text":"games #genre/action \u00b6 ELDEN RING \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/ELDEN%20RING/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/ELDEN%20RING/#elden-ring","text":"....","title":"ELDEN RING"},{"location":"10%20Example%20Data/games/New%20World/","text":"games #genre/action \u00b6 New World \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/New%20World/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/New%20World/#new-world","text":"....","title":"New World"},{"location":"10%20Example%20Data/games/Stardew%20Valley/","text":"games \u00b6 Stardew Valley \u00b6 ....","title":"games"},{"location":"10%20Example%20Data/games/Stardew%20Valley/#games","text":"","title":"games"},{"location":"10%20Example%20Data/games/Stardew%20Valley/#stardew-valley","text":"....","title":"Stardew Valley"},{"location":"10%20Example%20Data/games/Team%20Fortress%202/","text":"games #genre/action \u00b6 Team Fortress 2 \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Team%20Fortress%202/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Team%20Fortress%202/#team-fortress-2","text":"....","title":"Team Fortress 2"},{"location":"10%20Example%20Data/games/Terraria/","text":"games #genre/action \u00b6 Terraria \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Terraria/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Terraria/#terraria","text":"....","title":"Terraria"},{"location":"10%20Example%20Data/games/Valheim/","text":"games #genre/action \u00b6 Valheim \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Valheim/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Valheim/#valheim","text":"....","title":"Valheim"},{"location":"10%20Example%20Data/games/Warframe/","text":"games #genre/action \u00b6 Warframe \u00b6 ....","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Warframe/#games-genreaction","text":"","title":"games #genre/action"},{"location":"10%20Example%20Data/games/Warframe/#warframe","text":"....","title":"Warframe"},{"location":"10%20Example%20Data/people/AB1908/","text":"AB1908 \u00b6 The one to blame for all of this initially. Disclaimer: I have no idea about AB's birthday :) You'll find this inline query and its explanation here $=const notes = dv.pages('\"10 Example Data/dailys\"').where(p => p.met).where(p => String(p.met).includes(dv.current().file.name)).sort((p) => p.file.name, 'desc').limit(1); if (notes.length) { const content = notes.flatMap(m => dv.array(m.met)).where(m => m.includes(dv.current().file.name)).last(); dv.span(notes[0].file.link + \": \" + content); } You'll find this query and its explanation here TABLE WITHOUT ID rows.file.link AS \"Contact note\", rows.day AS \"Contact date\", rows.day[0] + \": **\" + min(rows.T) + \" days**\" AS \"Last contact\" FROM [](<#>) WHERE day FLATTEN (date(today) - day).days AS T GROUP BY file.day SORT min(rows.T) asc","title":"AB1908"},{"location":"10%20Example%20Data/people/AB1908/#ab1908","text":"The one to blame for all of this initially. Disclaimer: I have no idea about AB's birthday :) You'll find this inline query and its explanation here $=const notes = dv.pages('\"10 Example Data/dailys\"').where(p => p.met).where(p => String(p.met).includes(dv.current().file.name)).sort((p) => p.file.name, 'desc').limit(1); if (notes.length) { const content = notes.flatMap(m => dv.array(m.met)).where(m => m.includes(dv.current().file.name)).last(); dv.span(notes[0].file.link + \": \" + content); } You'll find this query and its explanation here TABLE WITHOUT ID rows.file.link AS \"Contact note\", rows.day AS \"Contact date\", rows.day[0] + \": **\" + min(rows.T) + \" days**\" AS \"Last contact\" FROM [](<#>) WHERE day FLATTEN (date(today) - day).days AS T GROUP BY file.day SORT min(rows.T) asc","title":"AB1908"},{"location":"10%20Example%20Data/people/Ansh%20V/","text":"Ansh V \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Ansh V"},{"location":"10%20Example%20Data/people/Ansh%20V/#ansh-v","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Ansh V"},{"location":"10%20Example%20Data/people/Behati%20L/","text":"Behati L \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Behati L"},{"location":"10%20Example%20Data/people/Behati%20L/#behati-l","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Behati L"},{"location":"10%20Example%20Data/people/Betty%20T/","text":"Betty T \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Betty T"},{"location":"10%20Example%20Data/people/Betty%20T/#betty-t","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Betty T"},{"location":"10%20Example%20Data/people/Dhruv%20A/","text":"Dhruv A \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Dhruv A"},{"location":"10%20Example%20Data/people/Dhruv%20A/#dhruv-a","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Dhruv A"},{"location":"10%20Example%20Data/people/Dmitry%20K/","text":"Dmitry K \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Dmitry K"},{"location":"10%20Example%20Data/people/Dmitry%20K/#dmitry-k","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Dmitry K"},{"location":"10%20Example%20Data/people/Elias/","text":"Elias \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Elias"},{"location":"10%20Example%20Data/people/Elias/#elias","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Elias"},{"location":"10%20Example%20Data/people/Hercule%20W/","text":"Hercule W \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Hercule W"},{"location":"10%20Example%20Data/people/Hercule%20W/#hercule-w","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Hercule W"},{"location":"10%20Example%20Data/people/Jonathan/","text":"Jonathan \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Jonathan"},{"location":"10%20Example%20Data/people/Jonathan/#jonathan","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Jonathan"},{"location":"10%20Example%20Data/people/Markus%20H/","text":"Markus H \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Markus H"},{"location":"10%20Example%20Data/people/Markus%20H/#markus-h","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Markus H"},{"location":"10%20Example%20Data/people/Osama%20W/","text":"Osama W \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Osama W"},{"location":"10%20Example%20Data/people/Osama%20W/#osama-w","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Osama W"},{"location":"10%20Example%20Data/people/Sophie%20B/","text":"Sophie B \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Sophie B"},{"location":"10%20Example%20Data/people/Sophie%20B/#sophie-b","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [](<#>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Sophie B"},{"location":"10%20Example%20Data/prefixes%20and%20suffixes/20210417_a%20fancy%20file%20name%20--%20some%20suffix/","text":"Content of 20210417_a fancy file name -- some suffix","title":"20210417 a fancy file name    some suffix"},{"location":"10%20Example%20Data/prefixes%20and%20suffixes/20220529_another%20nice%20file%20name%20--%20somesuffix/","text":"content of 20220529_another nice file name -- somesuffix","title":"20220529 another nice file name    somesuffix"},{"location":"10%20Example%20Data/prefixes%20and%20suffixes/20230207_a%20chic%20file%20name%20--%20some%20longer%20suffix%20with%20numb3rs%20123/","text":"content of 20230207_a chic file name -- some longer suffix with numb3rs 123","title":"20230207 a chic file name    some longer suffix with numb3rs 123"},{"location":"10%20Example%20Data/projects/Goal%201/","text":"Goal 1 \u00b6 goal \u00b6 Projects:: project_1 , project_2 , project_3 , project_6","title":"Goal 1"},{"location":"10%20Example%20Data/projects/Goal%201/#goal-1","text":"","title":"Goal 1"},{"location":"10%20Example%20Data/projects/Goal%201/#goal","text":"Projects:: project_1 , project_2 , project_3 , project_6","title":"goal"},{"location":"10%20Example%20Data/projects/Goal%202/","text":"Goal 2 \u00b6 goal \u00b6 Projects:: project_4 , project_5 , project_9","title":"Goal 2"},{"location":"10%20Example%20Data/projects/Goal%202/#goal-2","text":"","title":"Goal 2"},{"location":"10%20Example%20Data/projects/Goal%202/#goal","text":"Projects:: project_4 , project_5 , project_9","title":"goal"},{"location":"10%20Example%20Data/projects/project_1/","text":"Project project_1 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-04-26 finished:: 2022-07-02 Project ID :: 149 tags :: #clientB working hours :: 02:02, 01:54 [x] Task 1 of project_1 [x] Task 2 of project_1 [x] Task 3 of project_1 [x] Task 4 of project_1 [x] Task 5 of project_1 (with subtasks) [x] Subtask 5.1 of project_1 [x] Subtask 5.2 of project_1 [x] Task 6 of project_1 [ ] Task with priority [priority:: low] [ ] [priority::high] important task, do ASAP","title":"Project project_1"},{"location":"10%20Example%20Data/projects/project_1/#project-project_1","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-04-26 finished:: 2022-07-02 Project ID :: 149 tags :: #clientB working hours :: 02:02, 01:54 [x] Task 1 of project_1 [x] Task 2 of project_1 [x] Task 3 of project_1 [x] Task 4 of project_1 [x] Task 5 of project_1 (with subtasks) [x] Subtask 5.1 of project_1 [x] Subtask 5.2 of project_1 [x] Task 6 of project_1 [ ] Task with priority [priority:: low] [ ] [priority::high] important task, do ASAP","title":"Project project_1"},{"location":"10%20Example%20Data/projects/project_10/","text":"Project project_10 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2022-07-22 finished:: 2022-08-07 Project ID :: 781 tags :: #privateProject working hours :: 01:02, 01:18 [x] Task 1 of project_10 [x] Task 2 of project_10 [x] Task 3 of project_10 [ ] medium stuff [priority:: medium] [ ] medium stuff [priority::medium]","title":"Project project_10"},{"location":"10%20Example%20Data/projects/project_10/#project-project_10","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2022-07-22 finished:: 2022-08-07 Project ID :: 781 tags :: #privateProject working hours :: 01:02, 01:18 [x] Task 1 of project_10 [x] Task 2 of project_10 [x] Task 3 of project_10 [ ] medium stuff [priority:: medium] [ ] medium stuff [priority::medium]","title":"Project project_10"},{"location":"10%20Example%20Data/projects/project_2/","text":"Project project_2 \u00b6 open project. work, work... status :: waiting started:: 2022-06-06 finished:: Project ID :: 595 tags :: #clientA working hours :: 00:16, 02:04 [ ] Task 1 of project_2 [ ] Task 2 of project_2 [ ] Task 3 of project_2 (with subtasks) [x] Subtask 5.1 of project_2 [ ] Subtask 5.2 of project_2 [ ] Task 4 of project_2 Urgent \u00b6 [ ] Urgent task of project_2 1 [ ] Urgent task of project_2 2","title":"Project project_2"},{"location":"10%20Example%20Data/projects/project_2/#project-project_2","text":"open project. work, work... status :: waiting started:: 2022-06-06 finished:: Project ID :: 595 tags :: #clientA working hours :: 00:16, 02:04 [ ] Task 1 of project_2 [ ] Task 2 of project_2 [ ] Task 3 of project_2 (with subtasks) [x] Subtask 5.1 of project_2 [ ] Subtask 5.2 of project_2 [ ] Task 4 of project_2","title":"Project project_2"},{"location":"10%20Example%20Data/projects/project_2/#urgent","text":"[ ] Urgent task of project_2 1 [ ] Urgent task of project_2 2","title":"Urgent"},{"location":"10%20Example%20Data/projects/project_3/","text":"Project project_3 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-03-16 finished:: 2022-02-04 Project ID :: 922 tags :: #clientA working hours :: 03:38, 02:42, 02:24, 05:46, 01:56 [x] Task 1 of project_3 [x] Task 2 of project_3 [x] Task 3 of project_3 [x] Task 4 of project_3 [x] Task 5 of project_3 (with subtasks) [x] Subtask 5.1 of project_3 [x] Subtask 5.2 of project_3 [x] Task 6 of project_3","title":"Project project_3"},{"location":"10%20Example%20Data/projects/project_3/#project-project_3","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-03-16 finished:: 2022-02-04 Project ID :: 922 tags :: #clientA working hours :: 03:38, 02:42, 02:24, 05:46, 01:56 [x] Task 1 of project_3 [x] Task 2 of project_3 [x] Task 3 of project_3 [x] Task 4 of project_3 [x] Task 5 of project_3 (with subtasks) [x] Subtask 5.1 of project_3 [x] Subtask 5.2 of project_3 [x] Task 6 of project_3","title":"Project project_3"},{"location":"10%20Example%20Data/projects/project_4/","text":"Project project_4 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: waiting started:: 2021-11-15 finished:: 2022-07-04 Project ID :: 836 tags :: #clientA working hours :: 04:30, 03:03 [x] Task 1 of project_4 [x] Task 2 of project_4 [x] Task 3 of project_4 [x] Task 4 of project_4 [x] Task 5 of project_4 (with subtasks) [x] Subtask 5.1 of project_4 [x] Subtask 5.2 of project_4 [x] Task 6 of project_4","title":"Project project_4"},{"location":"10%20Example%20Data/projects/project_4/#project-project_4","text":"This is some finished project. I had tasks to do here, but I'm done! status :: waiting started:: 2021-11-15 finished:: 2022-07-04 Project ID :: 836 tags :: #clientA working hours :: 04:30, 03:03 [x] Task 1 of project_4 [x] Task 2 of project_4 [x] Task 3 of project_4 [x] Task 4 of project_4 [x] Task 5 of project_4 (with subtasks) [x] Subtask 5.1 of project_4 [x] Subtask 5.2 of project_4 [x] Task 6 of project_4","title":"Project project_4"},{"location":"10%20Example%20Data/projects/project_5/","text":"Project project_5 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-06-13 finished:: 2022-02-06 Project ID :: 781 tags :: #privateProject working hours :: 03:17, 02:18 [x] Task 1 of project_5 [x] Task 2 of project_5 [x] Task 3 of project_5 [x] Task 4 of project_5 [x] Task 5 of project_5 (with subtasks) [x] Subtask 5.1 of project_5 [x] Subtask 5.2 of project_5 [x] Task 6 of project_5 [x] done task with [priority:: medium] and other stuff [ ] open task with [priority:: medium] and other stuff","title":"Project project_5"},{"location":"10%20Example%20Data/projects/project_5/#project-project_5","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-06-13 finished:: 2022-02-06 Project ID :: 781 tags :: #privateProject working hours :: 03:17, 02:18 [x] Task 1 of project_5 [x] Task 2 of project_5 [x] Task 3 of project_5 [x] Task 4 of project_5 [x] Task 5 of project_5 (with subtasks) [x] Subtask 5.1 of project_5 [x] Subtask 5.2 of project_5 [x] Task 6 of project_5 [x] done task with [priority:: medium] and other stuff [ ] open task with [priority:: medium] and other stuff","title":"Project project_5"},{"location":"10%20Example%20Data/projects/project_6/","text":"Project project_6 \u00b6 open project. work, work... status :: in-progress started:: 2022-06-06 finished:: Project ID :: 555 tags :: #clientA working hours :: 03:59, 01:03 [x] Task 1 of project_6 [x] Task 2 of project_6 [ ] Task 3 of project_6 (with subtasks) [x] Subtask 5.1 of project_6 [ ] Subtask 5.2 of project_6 [ ] Task 4 of project_6 Urgent \u00b6 [ ] Urgent task of project_6","title":"Project project_6"},{"location":"10%20Example%20Data/projects/project_6/#project-project_6","text":"open project. work, work... status :: in-progress started:: 2022-06-06 finished:: Project ID :: 555 tags :: #clientA working hours :: 03:59, 01:03 [x] Task 1 of project_6 [x] Task 2 of project_6 [ ] Task 3 of project_6 (with subtasks) [x] Subtask 5.1 of project_6 [ ] Subtask 5.2 of project_6 [ ] Task 4 of project_6","title":"Project project_6"},{"location":"10%20Example%20Data/projects/project_6/#urgent","text":"[ ] Urgent task of project_6","title":"Urgent"},{"location":"10%20Example%20Data/projects/project_7/","text":"Project project_7 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-12-30 finished:: 2022-03-31 Project ID :: 825 tags :: #clientA working hours :: 00:58, 03:00, 02:25, 06:42, 01:25 [x] Task 1 of project_7 [x] Task 2 of project_7 [x] Task 3 of project_7 [x] Task 4 of project_7 [x] Task 5 of project_7 (with subtasks) [x] Subtask 5.1 of project_7 [x] Subtask 5.2 of project_7 [x] Task 6 of project_7","title":"Project project_7"},{"location":"10%20Example%20Data/projects/project_7/#project-project_7","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-12-30 finished:: 2022-03-31 Project ID :: 825 tags :: #clientA working hours :: 00:58, 03:00, 02:25, 06:42, 01:25 [x] Task 1 of project_7 [x] Task 2 of project_7 [x] Task 3 of project_7 [x] Task 4 of project_7 [x] Task 5 of project_7 (with subtasks) [x] Subtask 5.1 of project_7 [x] Subtask 5.2 of project_7 [x] Task 6 of project_7","title":"Project project_7"},{"location":"10%20Example%20Data/projects/project_8/","text":"Project project_8 \u00b6 This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-10-19 finished:: 2022-07-22 Project ID :: 984 tags :: #clientC working hours :: 00:52, 02:16, 03:37, 06:09, 03:38 [x] Task 1 of project_8 [x] Task 2 of project_8 [x] Task 3 of project_8 [x] Task 4 of project_8 [x] Task 5 of project_8 (with subtasks) [x] Subtask 5.1 of project_8 [x] Subtask 5.2 of project_8 [x] Task 6 of project_8 [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task","title":"Project project_8"},{"location":"10%20Example%20Data/projects/project_8/#project-project_8","text":"This is some finished project. I had tasks to do here, but I'm done! status :: finished started:: 2021-10-19 finished:: 2022-07-22 Project ID :: 984 tags :: #clientC working hours :: 00:52, 02:16, 03:37, 06:09, 03:38 [x] Task 1 of project_8 [x] Task 2 of project_8 [x] Task 3 of project_8 [x] Task 4 of project_8 [x] Task 5 of project_8 (with subtasks) [x] Subtask 5.1 of project_8 [x] Subtask 5.2 of project_8 [x] Task 6 of project_8 [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task [ ] [priority:: low] low prio task","title":"Project project_8"},{"location":"10%20Example%20Data/projects/project_9/","text":"Project project_9 \u00b6 open project. work, work... status :: waiting started:: 2022-02-22 finished:: Project ID :: 533 tags :: #clientB working hours :: 00:52, 02:16, 02:11, 02:32 [x] Task 1 of project_9 [ ] Task 2 of project_9 [ ] Task 3 of project_9 (with subtasks) [x] Subtask 5.1 of project_9 [ ] Subtask 5.2 of project_9 [x] Task 4 of project_9","title":"Project project_9"},{"location":"10%20Example%20Data/projects/project_9/#project-project_9","text":"open project. work, work... status :: waiting started:: 2022-02-22 finished:: Project ID :: 533 tags :: #clientB working hours :: 00:52, 02:16, 02:11, 02:32 [x] Task 1 of project_9 [ ] Task 2 of project_9 [ ] Task 3 of project_9 (with subtasks) [x] Subtask 5.1 of project_9 [ ] Subtask 5.2 of project_9 [x] Task 4 of project_9","title":"Project project_9"},{"location":"10%20Example%20Data/shows/A.P.%20Bio/","text":"Season 4 \u00b6 [x] Ep 8 - The Harvard Pen [Release date:: 2021-09-02] [x] Ep 7 - Malachi [Release date:: 2021-09-02] [x] Ep 6 - Love, for Lack of a Better Term [Release date:: 2021-09-02] [x] Ep 5 - The Perfect Date from Hell [Release date:: 2021-09-02] [x] Ep 4 - Tons of Rue [Release date:: 2021-09-02] [x] Ep 3 - An Oath to Rusty [Release date:: 2021-09-02] [x] Ep 2 - Sweatpants [Release date:: 2021-09-02] [x] Ep 1 - Tornado! [Release date:: 2021-09-02] Season 3 \u00b6 [x] Ep 8 - Katie Holmes Day [Release date:: 2020-09-03] [x] Ep 7 - Aces Wild [Release date:: 2020-09-03] [x] Ep 6 - That That That [Release date:: 2020-09-03] [x] Ep 5 - Mr. Pistachio [Release date:: 2020-09-03] [x] Ep 4 - Get Hoppy! [Release date:: 2020-09-03] [x] Ep 3 - Gary Meets Dave [Release date:: 2020-09-03] [x] Ep 2 - Disgraced [Release date:: 2020-09-03] [x] Ep 1 - Tiny Problems [Release date:: 2020-09-03] Season 2 \u00b6 [x] Ep 13 - Kinda Sorta [Release date:: 2019-06-13] [x] Ep 12 - Ride the Ram [Release date:: 2019-06-13] [x] Ep 11 - Spectacle [Release date:: 2019-05-30] [x] Ep 10 - Handcuffed [Release date:: 2019-05-30] [x] Ep 9 - Dr. Whoopsie [Release date:: 2019-05-02] [x] Ep 8 - Sweet Low Road [Release date:: 2019-04-25] [x] Ep 7 - Personal Everest [Release date:: 2019-04-18] [x] Ep 6 - Melvin [Release date:: 2019-04-11] [x] Ep 5 - J'accuse [Release date:: 2019-04-04] [x] Ep 4 - Toledo's Top 100 [Release date:: 2019-03-28] [x] Ep 3 - Wednesday Morning, 8AM [Release date:: 2019-03-21] [x] Ep 2 - Nuns [Release date:: 2019-03-14] [x] Ep 1 - Happiness [Release date:: 2019-03-07] Season 1 \u00b6 [x] Ep 13 - Drenching Dallas [Release date:: 2018-05-03] [x] Ep 12 - Walleye [Release date:: 2018-04-26] [x] Ep 11 - Eight Pigs and a Rat [Release date:: 2018-04-19] [x] Ep 10 - Durbin Crashes [Release date:: 2018-04-12] [x] Ep 9 - Rosemary's Boyfriend [Release date:: 2018-04-05] [x] Ep 8 - We Don't Party [Release date:: 2018-03-29] [x] Ep 7 - Selling Out [Release date:: 2018-03-22] [x] Ep 6 - Freakin' Enamored [Release date:: 2018-03-15] [x] Ep 5 - Dating Toledoans [Release date:: 2018-03-08] [x] Ep 4 - Burning Miles [Release date:: 2018-03-01] [x] Ep 3 - Overachieving Virgins [Release date:: 2018-03-01] [x] Ep 2 - Teacher Jail [Release date:: 2018-02-25] [x] Ep 1 - Catfish [Release date:: 2018-02-01]","title":"A.P. Bio"},{"location":"10%20Example%20Data/shows/A.P.%20Bio/#season-4","text":"[x] Ep 8 - The Harvard Pen [Release date:: 2021-09-02] [x] Ep 7 - Malachi [Release date:: 2021-09-02] [x] Ep 6 - Love, for Lack of a Better Term [Release date:: 2021-09-02] [x] Ep 5 - The Perfect Date from Hell [Release date:: 2021-09-02] [x] Ep 4 - Tons of Rue [Release date:: 2021-09-02] [x] Ep 3 - An Oath to Rusty [Release date:: 2021-09-02] [x] Ep 2 - Sweatpants [Release date:: 2021-09-02] [x] Ep 1 - Tornado! [Release date:: 2021-09-02]","title":"Season 4"},{"location":"10%20Example%20Data/shows/A.P.%20Bio/#season-3","text":"[x] Ep 8 - Katie Holmes Day [Release date:: 2020-09-03] [x] Ep 7 - Aces Wild [Release date:: 2020-09-03] [x] Ep 6 - That That That [Release date:: 2020-09-03] [x] Ep 5 - Mr. Pistachio [Release date:: 2020-09-03] [x] Ep 4 - Get Hoppy! [Release date:: 2020-09-03] [x] Ep 3 - Gary Meets Dave [Release date:: 2020-09-03] [x] Ep 2 - Disgraced [Release date:: 2020-09-03] [x] Ep 1 - Tiny Problems [Release date:: 2020-09-03]","title":"Season 3"},{"location":"10%20Example%20Data/shows/A.P.%20Bio/#season-2","text":"[x] Ep 13 - Kinda Sorta [Release date:: 2019-06-13] [x] Ep 12 - Ride the Ram [Release date:: 2019-06-13] [x] Ep 11 - Spectacle [Release date:: 2019-05-30] [x] Ep 10 - Handcuffed [Release date:: 2019-05-30] [x] Ep 9 - Dr. Whoopsie [Release date:: 2019-05-02] [x] Ep 8 - Sweet Low Road [Release date:: 2019-04-25] [x] Ep 7 - Personal Everest [Release date:: 2019-04-18] [x] Ep 6 - Melvin [Release date:: 2019-04-11] [x] Ep 5 - J'accuse [Release date:: 2019-04-04] [x] Ep 4 - Toledo's Top 100 [Release date:: 2019-03-28] [x] Ep 3 - Wednesday Morning, 8AM [Release date:: 2019-03-21] [x] Ep 2 - Nuns [Release date:: 2019-03-14] [x] Ep 1 - Happiness [Release date:: 2019-03-07]","title":"Season 2"},{"location":"10%20Example%20Data/shows/A.P.%20Bio/#season-1","text":"[x] Ep 13 - Drenching Dallas [Release date:: 2018-05-03] [x] Ep 12 - Walleye [Release date:: 2018-04-26] [x] Ep 11 - Eight Pigs and a Rat [Release date:: 2018-04-19] [x] Ep 10 - Durbin Crashes [Release date:: 2018-04-12] [x] Ep 9 - Rosemary's Boyfriend [Release date:: 2018-04-05] [x] Ep 8 - We Don't Party [Release date:: 2018-03-29] [x] Ep 7 - Selling Out [Release date:: 2018-03-22] [x] Ep 6 - Freakin' Enamored [Release date:: 2018-03-15] [x] Ep 5 - Dating Toledoans [Release date:: 2018-03-08] [x] Ep 4 - Burning Miles [Release date:: 2018-03-01] [x] Ep 3 - Overachieving Virgins [Release date:: 2018-03-01] [x] Ep 2 - Teacher Jail [Release date:: 2018-02-25] [x] Ep 1 - Catfish [Release date:: 2018-02-01]","title":"Season 1"},{"location":"10%20Example%20Data/shows/American%20Crime%20Story/","text":"Season 4 \u00b6 Season 3 \u00b6 [x] Ep 10 - The Wilderness [Release date:: 2021-11-09] [x] Ep 9 - The Grand Jury [Release date:: 2021-11-02] [x] Ep 8 - Stand by Your Man [Release date:: 2021-10-26] [x] Ep 7 - The Assassination of Monica Lewinsky [Release date:: 2021-10-19] [x] Ep 6 - Man Handled [Release date:: 2021-10-12] [x] Ep 5 - Do You Hear What I Hear? [Release date:: 2021-10-05] [x] Ep 4 - The Telephone Hour [Release date:: 2021-09-28] [x] Ep 3 - Not to Be Believed [Release date:: 2021-09-21] [x] Ep 2 - The President Kissed Me [Release date:: 2021-09-14] [x] Ep 1 - Exiles [Release date:: 2021-09-07] Season 2 \u00b6 [x] Ep 9 - Alone [Release date:: 2018-03-21] [x] Ep 8 - Creator / Destroyer [Release date:: 2018-03-14] [x] Ep 7 - Ascent [Release date:: 2018-03-07] [x] Ep 6 - Descent [Release date:: 2018-02-28] [x] Ep 5 - Don't Ask Don't Tell [Release date:: 2018-02-14] [x] Ep 4 - House By the Lake [Release date:: 2018-02-07] [x] Ep 3 - A Random Killing [Release date:: 2018-01-31] [x] Ep 2 - Manhunt [Release date:: 2018-01-24] [x] Ep 1 - The Man Who Would Be Vogue [Release date:: 2018-01-17] Season 1 \u00b6 [x] Ep 10 - The Verdict [Release date:: 2016-04-05] [x] Ep 9 - Manna from Heaven [Release date:: 2016-03-29] [x] Ep 8 - A Jury in Jail [Release date:: 2016-03-22] [x] Ep 7 - Conspiracy Theories [Release date:: 2016-03-15] [x] Ep 6 - Marcia, Marcia, Marcia [Release date:: 2016-03-08] [x] Ep 5 - The Race Card [Release date:: 2016-03-01] [x] Ep 4 - 100% Not Guilty [Release date:: 2016-02-23] [x] Ep 3 - The Dream Team [Release date:: 2016-02-16] [x] Ep 2 - The Run of His Life [Release date:: 2016-02-09] [x] Ep 1 - From the Ashes of Tragedy [Release date:: 2016-02-02]","title":"American Crime Story"},{"location":"10%20Example%20Data/shows/American%20Crime%20Story/#season-4","text":"","title":"Season 4"},{"location":"10%20Example%20Data/shows/American%20Crime%20Story/#season-3","text":"[x] Ep 10 - The Wilderness [Release date:: 2021-11-09] [x] Ep 9 - The Grand Jury [Release date:: 2021-11-02] [x] Ep 8 - Stand by Your Man [Release date:: 2021-10-26] [x] Ep 7 - The Assassination of Monica Lewinsky [Release date:: 2021-10-19] [x] Ep 6 - Man Handled [Release date:: 2021-10-12] [x] Ep 5 - Do You Hear What I Hear? [Release date:: 2021-10-05] [x] Ep 4 - The Telephone Hour [Release date:: 2021-09-28] [x] Ep 3 - Not to Be Believed [Release date:: 2021-09-21] [x] Ep 2 - The President Kissed Me [Release date:: 2021-09-14] [x] Ep 1 - Exiles [Release date:: 2021-09-07]","title":"Season 3"},{"location":"10%20Example%20Data/shows/American%20Crime%20Story/#season-2","text":"[x] Ep 9 - Alone [Release date:: 2018-03-21] [x] Ep 8 - Creator / Destroyer [Release date:: 2018-03-14] [x] Ep 7 - Ascent [Release date:: 2018-03-07] [x] Ep 6 - Descent [Release date:: 2018-02-28] [x] Ep 5 - Don't Ask Don't Tell [Release date:: 2018-02-14] [x] Ep 4 - House By the Lake [Release date:: 2018-02-07] [x] Ep 3 - A Random Killing [Release date:: 2018-01-31] [x] Ep 2 - Manhunt [Release date:: 2018-01-24] [x] Ep 1 - The Man Who Would Be Vogue [Release date:: 2018-01-17]","title":"Season 2"},{"location":"10%20Example%20Data/shows/American%20Crime%20Story/#season-1","text":"[x] Ep 10 - The Verdict [Release date:: 2016-04-05] [x] Ep 9 - Manna from Heaven [Release date:: 2016-03-29] [x] Ep 8 - A Jury in Jail [Release date:: 2016-03-22] [x] Ep 7 - Conspiracy Theories [Release date:: 2016-03-15] [x] Ep 6 - Marcia, Marcia, Marcia [Release date:: 2016-03-08] [x] Ep 5 - The Race Card [Release date:: 2016-03-01] [x] Ep 4 - 100% Not Guilty [Release date:: 2016-02-23] [x] Ep 3 - The Dream Team [Release date:: 2016-02-16] [x] Ep 2 - The Run of His Life [Release date:: 2016-02-09] [x] Ep 1 - From the Ashes of Tragedy [Release date:: 2016-02-02]","title":"Season 1"},{"location":"10%20Example%20Data/shows/American%20Gods/","text":"Season 3 \u00b6 [ ] Ep 10 - Tears of the Wrath-Bearing Tree [Release date:: 2021-03-21] [ ] Ep 9 - The Lake Effect [Release date:: 2021-03-14] [ ] Ep 8 - The Rapture of Burning [Release date:: 2021-03-07] [ ] Ep 7 - Fire and Ice [Release date:: 2021-02-28] [ ] Ep 6 - Conscience of the King [Release date:: 2021-02-21] [ ] Ep 5 - Sister Rising [Release date:: 2021-02-14] [ ] Ep 4 - The Unseen [Release date:: 2021-01-31] [ ] Ep 3 - Ashes and Demons [Release date:: 2021-01-24] [ ] Ep 2 - Serious Moonlight [Release date:: 2021-01-17] [ ] Ep 1 - A Winter's Tale [Release date:: 2021-01-10] Season 2 \u00b6 [ ] Ep 8 - Moon Shadow [Release date:: 2019-04-28] [ ] Ep 7 - Treasure of the Sun [Release date:: 2019-04-21] [ ] Ep 6 - Donar the Great [Release date:: 2019-04-14] [ ] Ep 5 - The Ways of the Dead [Release date:: 2019-04-07] [ ] Ep 4 - The Greatest Story Ever Told [Release date:: 2019-03-31] [ ] Ep 3 - Muninn [Release date:: 2019-03-24] [ ] Ep 2 - The Beguiling Man [Release date:: 2019-03-17] [ ] Ep 1 - House on the Rock [Release date:: 2019-03-10] Season 1 \u00b6 [x] Ep 8 - Come to Jesus [Release date:: 2017-06-18] [x] Ep 7 - A Prayer for Mad Sweeney [Release date:: 2017-06-11] [x] Ep 6 - A Murder of Gods [Release date:: 2017-06-04] [x] Ep 5 - Lemon Scented You [Release date:: 2017-05-28] [x] Ep 4 - Git Gone [Release date:: 2017-05-21] [x] Ep 3 - Head Full of Snow [Release date:: 2017-05-14] [x] Ep 2 - The Secret of Spoons [Release date:: 2017-05-07] [x] Ep 1 - The Bone Orchard [Release date:: 2017-04-30]","title":"American Gods"},{"location":"10%20Example%20Data/shows/American%20Gods/#season-3","text":"[ ] Ep 10 - Tears of the Wrath-Bearing Tree [Release date:: 2021-03-21] [ ] Ep 9 - The Lake Effect [Release date:: 2021-03-14] [ ] Ep 8 - The Rapture of Burning [Release date:: 2021-03-07] [ ] Ep 7 - Fire and Ice [Release date:: 2021-02-28] [ ] Ep 6 - Conscience of the King [Release date:: 2021-02-21] [ ] Ep 5 - Sister Rising [Release date:: 2021-02-14] [ ] Ep 4 - The Unseen [Release date:: 2021-01-31] [ ] Ep 3 - Ashes and Demons [Release date:: 2021-01-24] [ ] Ep 2 - Serious Moonlight [Release date:: 2021-01-17] [ ] Ep 1 - A Winter's Tale [Release date:: 2021-01-10]","title":"Season 3"},{"location":"10%20Example%20Data/shows/American%20Gods/#season-2","text":"[ ] Ep 8 - Moon Shadow [Release date:: 2019-04-28] [ ] Ep 7 - Treasure of the Sun [Release date:: 2019-04-21] [ ] Ep 6 - Donar the Great [Release date:: 2019-04-14] [ ] Ep 5 - The Ways of the Dead [Release date:: 2019-04-07] [ ] Ep 4 - The Greatest Story Ever Told [Release date:: 2019-03-31] [ ] Ep 3 - Muninn [Release date:: 2019-03-24] [ ] Ep 2 - The Beguiling Man [Release date:: 2019-03-17] [ ] Ep 1 - House on the Rock [Release date:: 2019-03-10]","title":"Season 2"},{"location":"10%20Example%20Data/shows/American%20Gods/#season-1","text":"[x] Ep 8 - Come to Jesus [Release date:: 2017-06-18] [x] Ep 7 - A Prayer for Mad Sweeney [Release date:: 2017-06-11] [x] Ep 6 - A Murder of Gods [Release date:: 2017-06-04] [x] Ep 5 - Lemon Scented You [Release date:: 2017-05-28] [x] Ep 4 - Git Gone [Release date:: 2017-05-21] [x] Ep 3 - Head Full of Snow [Release date:: 2017-05-14] [x] Ep 2 - The Secret of Spoons [Release date:: 2017-05-07] [x] Ep 1 - The Bone Orchard [Release date:: 2017-04-30]","title":"Season 1"},{"location":"10%20Example%20Data/shows/American%20Horror%20Stories/","text":"Title: American Horror Stories Genre: ['Horror'] Network: Hulu Seasons: 2 Episodes: 15 Runtime: 44 Show_status: Running Status: 'Watching' Rating: 2/5 Would rewatch: false Season 2 \u00b6 [ ] Ep 8 - Lake [Release date:: 2022-09-08] [ ] Ep 7 - Milkmaids [Release date:: 2022-09-01] [ ] Ep 6 - Facelift [Release date:: 2022-08-25] [ ] Ep 5 - Bloody Mary [Release date:: 2022-08-18] [ ] Ep 4 - Drive [Release date:: 2022-08-11] [ ] Ep 3 - Necro [Release date:: 2022-08-04] [ ] Ep 2 - Aura [Release date:: 2022-07-28] [ ] Ep 1 - Dollhouse [Release date:: 2022-07-21] Season 1 \u00b6 [x] Ep 7 - Game Over [Release date:: 2021-08-19] [x] Ep 6 - Feral [Release date:: 2021-08-12] [x] Ep 5 - BA'AL [Release date:: 2021-08-05] [x] Ep 4 - The Naughty List [Release date:: 2021-07-29] [x] Ep 3 - Drive In [Release date:: 2021-07-22] [x] Ep 2 - Rubber(wo)Man Part Two [Release date:: 2021-07-15] [x] Ep 1 - Rubber(wo)Man [Release date:: 2021-07-15]","title":"American Horror Stories"},{"location":"10%20Example%20Data/shows/American%20Horror%20Stories/#season-2","text":"[ ] Ep 8 - Lake [Release date:: 2022-09-08] [ ] Ep 7 - Milkmaids [Release date:: 2022-09-01] [ ] Ep 6 - Facelift [Release date:: 2022-08-25] [ ] Ep 5 - Bloody Mary [Release date:: 2022-08-18] [ ] Ep 4 - Drive [Release date:: 2022-08-11] [ ] Ep 3 - Necro [Release date:: 2022-08-04] [ ] Ep 2 - Aura [Release date:: 2022-07-28] [ ] Ep 1 - Dollhouse [Release date:: 2022-07-21]","title":"Season 2"},{"location":"10%20Example%20Data/shows/American%20Horror%20Stories/#season-1","text":"[x] Ep 7 - Game Over [Release date:: 2021-08-19] [x] Ep 6 - Feral [Release date:: 2021-08-12] [x] Ep 5 - BA'AL [Release date:: 2021-08-05] [x] Ep 4 - The Naughty List [Release date:: 2021-07-29] [x] Ep 3 - Drive In [Release date:: 2021-07-22] [x] Ep 2 - Rubber(wo)Man Part Two [Release date:: 2021-07-15] [x] Ep 1 - Rubber(wo)Man [Release date:: 2021-07-15]","title":"Season 1"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/","text":"Title: American Horror Story Genre: ['Drama', 'Horror', 'Thriller'] Network: FX Seasons: 13 Episodes: 116 Runtime: 61 Show_status: Running Status: 'Watching' Rating: 4/5 Would rewatch: true Season 13 \u00b6 Season 12 \u00b6 Season 11 \u00b6 [ ] Ep 3 - Thank You For Your Service [Release date:: 2022-10-24] [ ] Ep 2 - Smoke Signals [Release date:: 2022-10-17] [ ] Ep 1 - Something's Coming [Release date:: 2022-10-17] Season 10 \u00b6 [ ] Ep 10 - The Future Perfect [Release date:: 2021-10-20] [ ] Ep 9 - Blue Moon [Release date:: 2021-10-13] [ ] Ep 8 - Inside [Release date:: 2021-10-06] [ ] Ep 7 - Take Me to Your Leader [Release date:: 2021-09-29] [ ] Ep 6 - Winter Kills [Release date:: 2021-09-22] [ ] Ep 5 - Gaslight [Release date:: 2021-09-15] [ ] Ep 4 - Blood Buffet [Release date:: 2021-09-08] [ ] Ep 3 - Thirst [Release date:: 2021-09-01] [ ] Ep 2 - Pale [Release date:: 2021-08-25] [ ] Ep 1 - Cape Fear [Release date:: 2021-08-25] Season 9 \u00b6 [ ] Ep 9 - Final Girl [Release date:: 2019-11-13] [ ] Ep 8 - Rest in Pieces [Release date:: 2019-11-06] [ ] Ep 7 - The Lady in White [Release date:: 2019-10-30] [ ] Ep 6 - Episode 100 [Release date:: 2019-10-23] [ ] Ep 5 - Red Dawn [Release date:: 2019-10-16] [ ] Ep 4 - True Killers [Release date:: 2019-10-09] [ ] Ep 3 - Slashdance [Release date:: 2019-10-02] [ ] Ep 2 - Mr. Jingles [Release date:: 2019-09-25] [ ] Ep 1 - Camp Redwood [Release date:: 2019-09-18] Season 8 \u00b6 [x] Ep 10 - Apocalypse Then [Release date:: 2018-11-14] [x] Ep 9 - Fire and Reign [Release date:: 2018-11-07] [x] Ep 8 - Sojourn [Release date:: 2018-10-31] [x] Ep 7 - Traitor [Release date:: 2018-10-24] [x] Ep 6 - Return to Murder House [Release date:: 2018-10-17] [x] Ep 5 - Boy Wonder [Release date:: 2018-10-10] [x] Ep 4 - Could It Be ... Satan? [Release date:: 2018-10-03] [x] Ep 3 - Forbidden Fruit [Release date:: 2018-09-26] [x] Ep 2 - The Morning After [Release date:: 2018-09-19] [x] Ep 1 - The End [Release date:: 2018-09-12] Season 7 \u00b6 [x] Ep 11 - Great Again [Release date:: 2017-11-14] [x] Ep 10 - Charles (Manson) in Charge [Release date:: 2017-11-07] [x] Ep 9 - Drink the Kool-Aid [Release date:: 2017-10-31] [x] Ep 8 - Winter of Our Discontent [Release date:: 2017-10-24] [x] Ep 7 - Valerie Solanas Died for Your Sins: Scumbag [Release date:: 2017-10-17] [x] Ep 6 - Mid-Western Assassin [Release date:: 2017-10-10] [x] Ep 5 - Holes [Release date:: 2017-10-03] [x] Ep 4 - 11/9 [Release date:: 2017-09-26] [x] Ep 3 - Neighbors from Hell [Release date:: 2017-09-19] [x] Ep 2 - Don't Be Afraid of the Dark [Release date:: 2017-09-12] [x] Ep 1 - Election Night [Release date:: 2017-09-05] Season 6 \u00b6 [ ] Ep 10 - Chapter 10 [Release date:: 2016-11-16] [ ] Ep 9 - Chapter 9 [Release date:: 2016-11-09] [ ] Ep 8 - Chapter 8 [Release date:: 2016-11-02] [ ] Ep 7 - Chapter 7 [Release date:: 2016-10-26] [ ] Ep 6 - Chapter 6 [Release date:: 2016-10-19] [ ] Ep 5 - Chapter 5 [Release date:: 2016-10-12] [ ] Ep 4 - Chapter 4 [Release date:: 2016-10-05] [ ] Ep 3 - Chapter 3 [Release date:: 2016-09-28] [ ] Ep 2 - Chapter 2 [Release date:: 2016-09-21] [ ] Ep 1 - Chapter 1 [Release date:: 2016-09-14] Season 5 \u00b6 [ ] Ep 12 - Be Our Guest [Release date:: 2016-01-13] [ ] Ep 11 - Battle Royale [Release date:: 2016-01-06] [ ] Ep 10 - She Gets Revenge [Release date:: 2015-12-16] [ ] Ep 9 - She Wants Revenge [Release date:: 2015-12-09] [ ] Ep 8 - The Ten Commandments Killer [Release date:: 2015-12-02] [ ] Ep 7 - Flicker [Release date:: 2015-11-18] [ ] Ep 6 - Room 33 [Release date:: 2015-11-11] [ ] Ep 5 - Room Service [Release date:: 2015-11-04] [ ] Ep 4 - Devil's Night [Release date:: 2015-10-28] [ ] Ep 3 - Mommy [Release date:: 2015-10-21] [ ] Ep 2 - Chutes and Ladders [Release date:: 2015-10-14] [ ] Ep 1 - Checking In [Release date:: 2015-10-07] Season 4 \u00b6 [x] Ep 13 - Curtain Call [Release date:: 2015-01-21] [x] Ep 12 - Show Stoppers [Release date:: 2015-01-14] [x] Ep 11 - Magical Thinking [Release date:: 2015-01-07] [x] Ep 10 - Orphans [Release date:: 2014-12-17] [x] Ep 9 - Tupperware Party Massacre [Release date:: 2014-12-10] [x] Ep 8 - Blood Bath [Release date:: 2014-12-03] [x] Ep 7 - Test of Strength [Release date:: 2014-11-19] [x] Ep 6 - Bullseye [Release date:: 2014-11-12] [x] Ep 5 - Pink Cupcakes [Release date:: 2014-11-05] [x] Ep 4 - Edward Mordrake: Part 2 [Release date:: 2014-10-29] [x] Ep 3 - Edward Mordrake: Part 1 [Release date:: 2014-10-22] [x] Ep 2 - Massacres and Matinees [Release date:: 2014-10-15] [x] Ep 1 - Monsters Among Us [Release date:: 2014-10-08] Season 3 \u00b6 [x] Ep 13 - The Seven Wonders [Release date:: 2014-01-29] [x] Ep 12 - Go to Hell [Release date:: 2014-01-22] [x] Ep 11 - Protect the Coven [Release date:: 2014-01-15] [x] Ep 10 - The Magical Delights of Stevie Nicks [Release date:: 2014-01-08] [x] Ep 9 - Head [Release date:: 2013-12-11] [x] Ep 8 - The Sacred Taking [Release date:: 2013-12-04] [x] Ep 7 - The Dead [Release date:: 2013-11-20] [x] Ep 6 - The Axeman Cometh [Release date:: 2013-11-13] [x] Ep 5 - Burn, Witch. Burn! [Release date:: 2013-11-06] [x] Ep 4 - Fearful Pranks Ensue [Release date:: 2013-10-30] [x] Ep 3 - The Replacements [Release date:: 2013-10-23] [x] Ep 2 - Boy Parts [Release date:: 2013-10-16] [x] Ep 1 - Bitchcraft [Release date:: 2013-10-09] Season 2 \u00b6 [x] Ep 13 - Madness Ends [Release date:: 2013-01-23] [x] Ep 12 - Continuum [Release date:: 2013-01-16] [x] Ep 11 - Spilt Milk [Release date:: 2013-01-09] [x] Ep 10 - The Name Game [Release date:: 2013-01-02] [x] Ep 9 - The Coat Hanger [Release date:: 2012-12-12] [x] Ep 8 - Unholy Night [Release date:: 2012-12-05] [x] Ep 7 - Dark Cousin [Release date:: 2012-11-28] [x] Ep 6 - The Origins of Monstrosity [Release date:: 2012-11-21] [x] Ep 5 - I Am Anne Frank Part 2 [Release date:: 2012-11-14] [x] Ep 4 - I Am Anne Frank Part 1 [Release date:: 2012-11-07] [x] Ep 3 - Nor'easter [Release date:: 2012-10-31] [x] Ep 2 - Tricks and Treats [Release date:: 2012-10-24] [x] Ep 1 - Welcome to Briarcliff [Release date:: 2012-10-17] Season 1 \u00b6 [x] Ep 12 - Afterbirth [Release date:: 2011-12-21] [x] Ep 11 - Birth [Release date:: 2011-12-14] [x] Ep 10 - Smoldering Children [Release date:: 2011-12-07] [x] Ep 9 - Spooky Little Girl [Release date:: 2011-11-30] [x] Ep 8 - Rubber Man [Release date:: 2011-11-23] [x] Ep 7 - Open House [Release date:: 2011-11-16] [x] Ep 6 - Piggy, Piggy [Release date:: 2011-11-09] [x] Ep 5 - Halloween Part 2 [Release date:: 2011-11-02] [x] Ep 4 - Halloween Part 1 [Release date:: 2011-10-26] [x] Ep 3 - Murder House [Release date:: 2011-10-19] [x] Ep 2 - Home Invasion [Release date:: 2011-10-12] [x] Ep 1 - Pilot [Release date:: 2011-10-05]","title":"American Horror Story"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-13","text":"","title":"Season 13"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-12","text":"","title":"Season 12"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-11","text":"[ ] Ep 3 - Thank You For Your Service [Release date:: 2022-10-24] [ ] Ep 2 - Smoke Signals [Release date:: 2022-10-17] [ ] Ep 1 - Something's Coming [Release date:: 2022-10-17]","title":"Season 11"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-10","text":"[ ] Ep 10 - The Future Perfect [Release date:: 2021-10-20] [ ] Ep 9 - Blue Moon [Release date:: 2021-10-13] [ ] Ep 8 - Inside [Release date:: 2021-10-06] [ ] Ep 7 - Take Me to Your Leader [Release date:: 2021-09-29] [ ] Ep 6 - Winter Kills [Release date:: 2021-09-22] [ ] Ep 5 - Gaslight [Release date:: 2021-09-15] [ ] Ep 4 - Blood Buffet [Release date:: 2021-09-08] [ ] Ep 3 - Thirst [Release date:: 2021-09-01] [ ] Ep 2 - Pale [Release date:: 2021-08-25] [ ] Ep 1 - Cape Fear [Release date:: 2021-08-25]","title":"Season 10"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-9","text":"[ ] Ep 9 - Final Girl [Release date:: 2019-11-13] [ ] Ep 8 - Rest in Pieces [Release date:: 2019-11-06] [ ] Ep 7 - The Lady in White [Release date:: 2019-10-30] [ ] Ep 6 - Episode 100 [Release date:: 2019-10-23] [ ] Ep 5 - Red Dawn [Release date:: 2019-10-16] [ ] Ep 4 - True Killers [Release date:: 2019-10-09] [ ] Ep 3 - Slashdance [Release date:: 2019-10-02] [ ] Ep 2 - Mr. Jingles [Release date:: 2019-09-25] [ ] Ep 1 - Camp Redwood [Release date:: 2019-09-18]","title":"Season 9"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-8","text":"[x] Ep 10 - Apocalypse Then [Release date:: 2018-11-14] [x] Ep 9 - Fire and Reign [Release date:: 2018-11-07] [x] Ep 8 - Sojourn [Release date:: 2018-10-31] [x] Ep 7 - Traitor [Release date:: 2018-10-24] [x] Ep 6 - Return to Murder House [Release date:: 2018-10-17] [x] Ep 5 - Boy Wonder [Release date:: 2018-10-10] [x] Ep 4 - Could It Be ... Satan? [Release date:: 2018-10-03] [x] Ep 3 - Forbidden Fruit [Release date:: 2018-09-26] [x] Ep 2 - The Morning After [Release date:: 2018-09-19] [x] Ep 1 - The End [Release date:: 2018-09-12]","title":"Season 8"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-7","text":"[x] Ep 11 - Great Again [Release date:: 2017-11-14] [x] Ep 10 - Charles (Manson) in Charge [Release date:: 2017-11-07] [x] Ep 9 - Drink the Kool-Aid [Release date:: 2017-10-31] [x] Ep 8 - Winter of Our Discontent [Release date:: 2017-10-24] [x] Ep 7 - Valerie Solanas Died for Your Sins: Scumbag [Release date:: 2017-10-17] [x] Ep 6 - Mid-Western Assassin [Release date:: 2017-10-10] [x] Ep 5 - Holes [Release date:: 2017-10-03] [x] Ep 4 - 11/9 [Release date:: 2017-09-26] [x] Ep 3 - Neighbors from Hell [Release date:: 2017-09-19] [x] Ep 2 - Don't Be Afraid of the Dark [Release date:: 2017-09-12] [x] Ep 1 - Election Night [Release date:: 2017-09-05]","title":"Season 7"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-6","text":"[ ] Ep 10 - Chapter 10 [Release date:: 2016-11-16] [ ] Ep 9 - Chapter 9 [Release date:: 2016-11-09] [ ] Ep 8 - Chapter 8 [Release date:: 2016-11-02] [ ] Ep 7 - Chapter 7 [Release date:: 2016-10-26] [ ] Ep 6 - Chapter 6 [Release date:: 2016-10-19] [ ] Ep 5 - Chapter 5 [Release date:: 2016-10-12] [ ] Ep 4 - Chapter 4 [Release date:: 2016-10-05] [ ] Ep 3 - Chapter 3 [Release date:: 2016-09-28] [ ] Ep 2 - Chapter 2 [Release date:: 2016-09-21] [ ] Ep 1 - Chapter 1 [Release date:: 2016-09-14]","title":"Season 6"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-5","text":"[ ] Ep 12 - Be Our Guest [Release date:: 2016-01-13] [ ] Ep 11 - Battle Royale [Release date:: 2016-01-06] [ ] Ep 10 - She Gets Revenge [Release date:: 2015-12-16] [ ] Ep 9 - She Wants Revenge [Release date:: 2015-12-09] [ ] Ep 8 - The Ten Commandments Killer [Release date:: 2015-12-02] [ ] Ep 7 - Flicker [Release date:: 2015-11-18] [ ] Ep 6 - Room 33 [Release date:: 2015-11-11] [ ] Ep 5 - Room Service [Release date:: 2015-11-04] [ ] Ep 4 - Devil's Night [Release date:: 2015-10-28] [ ] Ep 3 - Mommy [Release date:: 2015-10-21] [ ] Ep 2 - Chutes and Ladders [Release date:: 2015-10-14] [ ] Ep 1 - Checking In [Release date:: 2015-10-07]","title":"Season 5"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-4","text":"[x] Ep 13 - Curtain Call [Release date:: 2015-01-21] [x] Ep 12 - Show Stoppers [Release date:: 2015-01-14] [x] Ep 11 - Magical Thinking [Release date:: 2015-01-07] [x] Ep 10 - Orphans [Release date:: 2014-12-17] [x] Ep 9 - Tupperware Party Massacre [Release date:: 2014-12-10] [x] Ep 8 - Blood Bath [Release date:: 2014-12-03] [x] Ep 7 - Test of Strength [Release date:: 2014-11-19] [x] Ep 6 - Bullseye [Release date:: 2014-11-12] [x] Ep 5 - Pink Cupcakes [Release date:: 2014-11-05] [x] Ep 4 - Edward Mordrake: Part 2 [Release date:: 2014-10-29] [x] Ep 3 - Edward Mordrake: Part 1 [Release date:: 2014-10-22] [x] Ep 2 - Massacres and Matinees [Release date:: 2014-10-15] [x] Ep 1 - Monsters Among Us [Release date:: 2014-10-08]","title":"Season 4"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-3","text":"[x] Ep 13 - The Seven Wonders [Release date:: 2014-01-29] [x] Ep 12 - Go to Hell [Release date:: 2014-01-22] [x] Ep 11 - Protect the Coven [Release date:: 2014-01-15] [x] Ep 10 - The Magical Delights of Stevie Nicks [Release date:: 2014-01-08] [x] Ep 9 - Head [Release date:: 2013-12-11] [x] Ep 8 - The Sacred Taking [Release date:: 2013-12-04] [x] Ep 7 - The Dead [Release date:: 2013-11-20] [x] Ep 6 - The Axeman Cometh [Release date:: 2013-11-13] [x] Ep 5 - Burn, Witch. Burn! [Release date:: 2013-11-06] [x] Ep 4 - Fearful Pranks Ensue [Release date:: 2013-10-30] [x] Ep 3 - The Replacements [Release date:: 2013-10-23] [x] Ep 2 - Boy Parts [Release date:: 2013-10-16] [x] Ep 1 - Bitchcraft [Release date:: 2013-10-09]","title":"Season 3"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-2","text":"[x] Ep 13 - Madness Ends [Release date:: 2013-01-23] [x] Ep 12 - Continuum [Release date:: 2013-01-16] [x] Ep 11 - Spilt Milk [Release date:: 2013-01-09] [x] Ep 10 - The Name Game [Release date:: 2013-01-02] [x] Ep 9 - The Coat Hanger [Release date:: 2012-12-12] [x] Ep 8 - Unholy Night [Release date:: 2012-12-05] [x] Ep 7 - Dark Cousin [Release date:: 2012-11-28] [x] Ep 6 - The Origins of Monstrosity [Release date:: 2012-11-21] [x] Ep 5 - I Am Anne Frank Part 2 [Release date:: 2012-11-14] [x] Ep 4 - I Am Anne Frank Part 1 [Release date:: 2012-11-07] [x] Ep 3 - Nor'easter [Release date:: 2012-10-31] [x] Ep 2 - Tricks and Treats [Release date:: 2012-10-24] [x] Ep 1 - Welcome to Briarcliff [Release date:: 2012-10-17]","title":"Season 2"},{"location":"10%20Example%20Data/shows/American%20Horror%20Story/#season-1","text":"[x] Ep 12 - Afterbirth [Release date:: 2011-12-21] [x] Ep 11 - Birth [Release date:: 2011-12-14] [x] Ep 10 - Smoldering Children [Release date:: 2011-12-07] [x] Ep 9 - Spooky Little Girl [Release date:: 2011-11-30] [x] Ep 8 - Rubber Man [Release date:: 2011-11-23] [x] Ep 7 - Open House [Release date:: 2011-11-16] [x] Ep 6 - Piggy, Piggy [Release date:: 2011-11-09] [x] Ep 5 - Halloween Part 2 [Release date:: 2011-11-02] [x] Ep 4 - Halloween Part 1 [Release date:: 2011-10-26] [x] Ep 3 - Murder House [Release date:: 2011-10-19] [x] Ep 2 - Home Invasion [Release date:: 2011-10-12] [x] Ep 1 - Pilot [Release date:: 2011-10-05]","title":"Season 1"},{"location":"10%20Example%20Data/shows/American%20Vandal/","text":"Season 2 \u00b6 [x] Ep 8 - The Dump [Release date:: 2018-09-14] [x] Ep 7 - Sh*t Storm [Release date:: 2018-09-14] [x] Ep 6 - All Backed Up [Release date:: 2018-09-14] [x] Ep 5 - Wiped Clean [Release date:: 2018-09-14] [x] Ep 4 - Sh*t Talk [Release date:: 2018-09-14] [x] Ep 3 - Leaving a Mark [Release date:: 2018-09-14] [x] Ep 2 - #2 [Release date:: 2018-09-14] [x] Ep 1 - The Brownout [Release date:: 2018-09-14] Season 1 \u00b6 [x] Ep 8 - Clean Up [Release date:: 2017-09-15] [x] Ep 7 - Climax [Release date:: 2017-09-15] [x] Ep 6 - Gag Order [Release date:: 2017-09-15] [x] Ep 5 - Premature Theories [Release date:: 2017-09-15] [x] Ep 4 - Growing Suspicion [Release date:: 2017-09-15] [x] Ep 3 - Nailed [Release date:: 2017-09-15] [x] Ep 2 - A Limp Alibi [Release date:: 2017-09-15] [x] Ep 1 - Hard Facts: Vandalism and Vulgarity [Release date:: 2017-09-15]","title":"American Vandal"},{"location":"10%20Example%20Data/shows/American%20Vandal/#season-2","text":"[x] Ep 8 - The Dump [Release date:: 2018-09-14] [x] Ep 7 - Sh*t Storm [Release date:: 2018-09-14] [x] Ep 6 - All Backed Up [Release date:: 2018-09-14] [x] Ep 5 - Wiped Clean [Release date:: 2018-09-14] [x] Ep 4 - Sh*t Talk [Release date:: 2018-09-14] [x] Ep 3 - Leaving a Mark [Release date:: 2018-09-14] [x] Ep 2 - #2 [Release date:: 2018-09-14] [x] Ep 1 - The Brownout [Release date:: 2018-09-14]","title":"Season 2"},{"location":"10%20Example%20Data/shows/American%20Vandal/#season-1","text":"[x] Ep 8 - Clean Up [Release date:: 2017-09-15] [x] Ep 7 - Climax [Release date:: 2017-09-15] [x] Ep 6 - Gag Order [Release date:: 2017-09-15] [x] Ep 5 - Premature Theories [Release date:: 2017-09-15] [x] Ep 4 - Growing Suspicion [Release date:: 2017-09-15] [x] Ep 3 - Nailed [Release date:: 2017-09-15] [x] Ep 2 - A Limp Alibi [Release date:: 2017-09-15] [x] Ep 1 - Hard Facts: Vandalism and Vulgarity [Release date:: 2017-09-15]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Big%20Little%20Lies/","text":"Season 2 \u00b6 [ ] Ep 7 - I Want to Know [Release date:: 2019-07-21] [ ] Ep 6 - The Bad Mother [Release date:: 2019-07-14] [ ] Ep 5 - Kill Me [Release date:: 2019-07-07] [ ] Ep 4 - She Knows [Release date:: 2019-06-30] [ ] Ep 3 - The End of the World [Release date:: 2019-06-23] [ ] Ep 2 - Tell-Tale Hearts [Release date:: 2019-06-16] [ ] Ep 1 - What Have They Done? [Release date:: 2019-06-09] Season 1 \u00b6 [x] Ep 7 - You Get What You Need [Release date:: 2017-04-02] [x] Ep 6 - Burning Love [Release date:: 2017-03-26] [x] Ep 5 - Once Bitten [Release date:: 2017-03-19] [x] Ep 4 - Push Comes to Shove [Release date:: 2017-03-12] [x] Ep 3 - Living the Dream [Release date:: 2017-03-05] [x] Ep 2 - Serious Mothering [Release date:: 2017-02-26] [x] Ep 1 - Somebody's Dead [Release date:: 2017-02-19]","title":"Big Little Lies"},{"location":"10%20Example%20Data/shows/Big%20Little%20Lies/#season-2","text":"[ ] Ep 7 - I Want to Know [Release date:: 2019-07-21] [ ] Ep 6 - The Bad Mother [Release date:: 2019-07-14] [ ] Ep 5 - Kill Me [Release date:: 2019-07-07] [ ] Ep 4 - She Knows [Release date:: 2019-06-30] [ ] Ep 3 - The End of the World [Release date:: 2019-06-23] [ ] Ep 2 - Tell-Tale Hearts [Release date:: 2019-06-16] [ ] Ep 1 - What Have They Done? [Release date:: 2019-06-09]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Big%20Little%20Lies/#season-1","text":"[x] Ep 7 - You Get What You Need [Release date:: 2017-04-02] [x] Ep 6 - Burning Love [Release date:: 2017-03-26] [x] Ep 5 - Once Bitten [Release date:: 2017-03-19] [x] Ep 4 - Push Comes to Shove [Release date:: 2017-03-12] [x] Ep 3 - Living the Dream [Release date:: 2017-03-05] [x] Ep 2 - Serious Mothering [Release date:: 2017-02-26] [x] Ep 1 - Somebody's Dead [Release date:: 2017-02-19]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Black%20Mirror/","text":"Season 5 \u00b6 [x] Ep 3 - Rachel, Jack and Ashley, Too [Release date:: 2019-06-05] [x] Ep 2 - Smithereens [Release date:: 2019-06-05] [x] Ep 1 - Striking Vipers [Release date:: 2019-06-05] Season 4 \u00b6 [x] Ep 6 - Black Museum [Release date:: 2017-12-29] [x] Ep 5 - Metalhead [Release date:: 2017-12-29] [x] Ep 4 - Hang the DJ [Release date:: 2017-12-29] [x] Ep 3 - Crocodile [Release date:: 2017-12-29] [x] Ep 2 - Arkangel [Release date:: 2017-12-29] [x] Ep 1 - USS Callister [Release date:: 2017-12-29] Season 3 \u00b6 [x] Ep 6 - Hated in the Nation [Release date:: 2016-10-21] [x] Ep 5 - Men Against Fire [Release date:: 2016-10-21] [x] Ep 4 - San Junipero [Release date:: 2016-10-21] [x] Ep 3 - Shut Up and Dance [Release date:: 2016-10-21] [x] Ep 2 - Playtest [Release date:: 2016-10-21] [x] Ep 1 - Nosedive [Release date:: 2016-10-21] Season 2 \u00b6 [x] Ep 3 - The Waldo Moment [Release date:: 2013-02-25] [x] Ep 2 - White Bear [Release date:: 2013-02-18] [x] Ep 1 - Be Right Back [Release date:: 2013-02-11] Season 1 \u00b6 [x] Ep 3 - The Entire History of You [Release date:: 2011-12-18] [x] Ep 2 - Fifteen Million Merits [Release date:: 2011-12-11] [x] Ep 1 - The National Anthem [Release date:: 2011-12-04]","title":"Black Mirror"},{"location":"10%20Example%20Data/shows/Black%20Mirror/#season-5","text":"[x] Ep 3 - Rachel, Jack and Ashley, Too [Release date:: 2019-06-05] [x] Ep 2 - Smithereens [Release date:: 2019-06-05] [x] Ep 1 - Striking Vipers [Release date:: 2019-06-05]","title":"Season 5"},{"location":"10%20Example%20Data/shows/Black%20Mirror/#season-4","text":"[x] Ep 6 - Black Museum [Release date:: 2017-12-29] [x] Ep 5 - Metalhead [Release date:: 2017-12-29] [x] Ep 4 - Hang the DJ [Release date:: 2017-12-29] [x] Ep 3 - Crocodile [Release date:: 2017-12-29] [x] Ep 2 - Arkangel [Release date:: 2017-12-29] [x] Ep 1 - USS Callister [Release date:: 2017-12-29]","title":"Season 4"},{"location":"10%20Example%20Data/shows/Black%20Mirror/#season-3","text":"[x] Ep 6 - Hated in the Nation [Release date:: 2016-10-21] [x] Ep 5 - Men Against Fire [Release date:: 2016-10-21] [x] Ep 4 - San Junipero [Release date:: 2016-10-21] [x] Ep 3 - Shut Up and Dance [Release date:: 2016-10-21] [x] Ep 2 - Playtest [Release date:: 2016-10-21] [x] Ep 1 - Nosedive [Release date:: 2016-10-21]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Black%20Mirror/#season-2","text":"[x] Ep 3 - The Waldo Moment [Release date:: 2013-02-25] [x] Ep 2 - White Bear [Release date:: 2013-02-18] [x] Ep 1 - Be Right Back [Release date:: 2013-02-11]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Black%20Mirror/#season-1","text":"[x] Ep 3 - The Entire History of You [Release date:: 2011-12-18] [x] Ep 2 - Fifteen Million Merits [Release date:: 2011-12-11] [x] Ep 1 - The National Anthem [Release date:: 2011-12-04]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Black%20Sails/","text":"Season 4 \u00b6 [x] Ep 10 - XXXVIII. [Release date:: 2017-04-02] [x] Ep 9 - XXXVII. [Release date:: 2017-03-26] [x] Ep 8 - XXXVI. [Release date:: 2017-03-19] [x] Ep 7 - XXXV. [Release date:: 2017-03-12] [x] Ep 6 - XXXIV. [Release date:: 2017-03-05] [x] Ep 5 - XXXIII. [Release date:: 2017-02-26] [x] Ep 4 - XXXII. [Release date:: 2017-02-19] [x] Ep 3 - XXXI. [Release date:: 2017-02-12] [x] Ep 2 - XXX. [Release date:: 2017-02-05] [x] Ep 1 - XXIX. [Release date:: 2017-01-29] Season 3 \u00b6 [x] Ep 10 - XXVIII. [Release date:: 2016-03-26] [x] Ep 9 - XXVII. [Release date:: 2016-03-19] [x] Ep 8 - XXVI. [Release date:: 2016-03-12] [x] Ep 7 - XXV. [Release date:: 2016-03-05] [x] Ep 6 - XXIV. [Release date:: 2016-02-27] [x] Ep 5 - XXIII. [Release date:: 2016-02-20] [x] Ep 4 - XXII. [Release date:: 2016-02-13] [x] Ep 3 - XXI. [Release date:: 2016-02-06] [x] Ep 2 - XX. [Release date:: 2016-01-30] [x] Ep 1 - XIX. [Release date:: 2016-01-23] Season 2 \u00b6 [x] Ep 10 - XVIII. [Release date:: 2015-03-28] [x] Ep 9 - XVII. [Release date:: 2015-03-21] [x] Ep 8 - XVI. [Release date:: 2015-03-14] [x] Ep 7 - XV. [Release date:: 2015-03-07] [x] Ep 6 - XIV. [Release date:: 2015-02-28] [x] Ep 5 - XIII. [Release date:: 2015-02-21] [x] Ep 4 - XII. [Release date:: 2015-02-14] [x] Ep 3 - XI. [Release date:: 2015-02-07] [x] Ep 2 - X. [Release date:: 2015-01-31] [x] Ep 1 - IX. [Release date:: 2015-01-24] Season 1 \u00b6 [x] Ep 8 - VIII. [Release date:: 2014-03-15] [x] Ep 7 - VII. [Release date:: 2014-03-08] [x] Ep 6 - VI. [Release date:: 2014-03-01] [x] Ep 5 - V. [Release date:: 2014-02-22] [x] Ep 4 - IV. [Release date:: 2014-02-15] [x] Ep 3 - III. [Release date:: 2014-02-08] [x] Ep 2 - II. [Release date:: 2014-02-01] [x] Ep 1 - I. [Release date:: 2014-01-25]","title":"Black Sails"},{"location":"10%20Example%20Data/shows/Black%20Sails/#season-4","text":"[x] Ep 10 - XXXVIII. [Release date:: 2017-04-02] [x] Ep 9 - XXXVII. [Release date:: 2017-03-26] [x] Ep 8 - XXXVI. [Release date:: 2017-03-19] [x] Ep 7 - XXXV. [Release date:: 2017-03-12] [x] Ep 6 - XXXIV. [Release date:: 2017-03-05] [x] Ep 5 - XXXIII. [Release date:: 2017-02-26] [x] Ep 4 - XXXII. [Release date:: 2017-02-19] [x] Ep 3 - XXXI. [Release date:: 2017-02-12] [x] Ep 2 - XXX. [Release date:: 2017-02-05] [x] Ep 1 - XXIX. [Release date:: 2017-01-29]","title":"Season 4"},{"location":"10%20Example%20Data/shows/Black%20Sails/#season-3","text":"[x] Ep 10 - XXVIII. [Release date:: 2016-03-26] [x] Ep 9 - XXVII. [Release date:: 2016-03-19] [x] Ep 8 - XXVI. [Release date:: 2016-03-12] [x] Ep 7 - XXV. [Release date:: 2016-03-05] [x] Ep 6 - XXIV. [Release date:: 2016-02-27] [x] Ep 5 - XXIII. [Release date:: 2016-02-20] [x] Ep 4 - XXII. [Release date:: 2016-02-13] [x] Ep 3 - XXI. [Release date:: 2016-02-06] [x] Ep 2 - XX. [Release date:: 2016-01-30] [x] Ep 1 - XIX. [Release date:: 2016-01-23]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Black%20Sails/#season-2","text":"[x] Ep 10 - XVIII. [Release date:: 2015-03-28] [x] Ep 9 - XVII. [Release date:: 2015-03-21] [x] Ep 8 - XVI. [Release date:: 2015-03-14] [x] Ep 7 - XV. [Release date:: 2015-03-07] [x] Ep 6 - XIV. [Release date:: 2015-02-28] [x] Ep 5 - XIII. [Release date:: 2015-02-21] [x] Ep 4 - XII. [Release date:: 2015-02-14] [x] Ep 3 - XI. [Release date:: 2015-02-07] [x] Ep 2 - X. [Release date:: 2015-01-31] [x] Ep 1 - IX. [Release date:: 2015-01-24]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Black%20Sails/#season-1","text":"[x] Ep 8 - VIII. [Release date:: 2014-03-15] [x] Ep 7 - VII. [Release date:: 2014-03-08] [x] Ep 6 - VI. [Release date:: 2014-03-01] [x] Ep 5 - V. [Release date:: 2014-02-22] [x] Ep 4 - IV. [Release date:: 2014-02-15] [x] Ep 3 - III. [Release date:: 2014-02-08] [x] Ep 2 - II. [Release date:: 2014-02-01] [x] Ep 1 - I. [Release date:: 2014-01-25]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Blue%20Planet%20II/","text":"Season 1 \u00b6 [x] Ep 7 - Our Blue Planet [Release date:: 2017-12-10] [x] Ep 6 - Coasts [Release date:: 2017-12-03] [x] Ep 5 - Green Seas [Release date:: 2017-11-26] [x] Ep 4 - Big Blue [Release date:: 2017-11-19] [x] Ep 3 - Coral Reefs [Release date:: 2017-11-12] [x] Ep 2 - The Deep [Release date:: 2017-11-05] [x] Ep 1 - One Ocean [Release date:: 2017-10-29]","title":"Blue Planet II"},{"location":"10%20Example%20Data/shows/Blue%20Planet%20II/#season-1","text":"[x] Ep 7 - Our Blue Planet [Release date:: 2017-12-10] [x] Ep 6 - Coasts [Release date:: 2017-12-03] [x] Ep 5 - Green Seas [Release date:: 2017-11-26] [x] Ep 4 - Big Blue [Release date:: 2017-11-19] [x] Ep 3 - Coral Reefs [Release date:: 2017-11-12] [x] Ep 2 - The Deep [Release date:: 2017-11-05] [x] Ep 1 - One Ocean [Release date:: 2017-10-29]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/","text":"Season 5 \u00b6 [x] Ep 16 - Felina [Release date:: 2013-09-29] [x] Ep 15 - Granite State [Release date:: 2013-09-22] [x] Ep 14 - Ozymandias [Release date:: 2013-09-15] [x] Ep 13 - To'hajiilee [Release date:: 2013-09-08] [x] Ep 12 - Rabid Dog [Release date:: 2013-09-01] [x] Ep 11 - Confessions [Release date:: 2013-08-25] [x] Ep 10 - Buried [Release date:: 2013-08-18] [x] Ep 9 - Blood Money [Release date:: 2013-08-11] [x] Ep 8 - Gliding Over All [Release date:: 2012-09-02] [x] Ep 7 - Say My Name [Release date:: 2012-08-26] [x] Ep 6 - Buyout [Release date:: 2012-08-19] [x] Ep 5 - Dead Freight [Release date:: 2012-08-12] [x] Ep 4 - Fifty-One [Release date:: 2012-08-05] [x] Ep 3 - Hazard Pay [Release date:: 2012-07-29] [x] Ep 2 - Madrigal [Release date:: 2012-07-22] [x] Ep 1 - Live Free or Die [Release date:: 2012-07-15] Season 4 \u00b6 [x] Ep 13 - Face Off [Release date:: 2011-10-09] [x] Ep 12 - End Times [Release date:: 2011-10-02] [x] Ep 11 - Crawl Space [Release date:: 2011-09-25] [x] Ep 10 - Salud [Release date:: 2011-09-18] [x] Ep 9 - Bug [Release date:: 2011-09-11] [x] Ep 8 - Hermanos [Release date:: 2011-09-04] [x] Ep 7 - Problem Dog [Release date:: 2011-08-28] [x] Ep 6 - Cornered [Release date:: 2011-08-21] [x] Ep 5 - Shotgun [Release date:: 2011-08-14] [x] Ep 4 - Bullet Points [Release date:: 2011-08-07] [x] Ep 3 - Open House [Release date:: 2011-07-31] [x] Ep 2 - Thirty-Eight Snub [Release date:: 2011-07-24] [x] Ep 1 - Box Cutter [Release date:: 2011-07-17] Season 3 \u00b6 [x] Ep 13 - Full Measure [Release date:: 2010-06-13] [x] Ep 12 - Half Measures [Release date:: 2010-06-06] [x] Ep 11 - Abiquiu [Release date:: 2010-05-30] [x] Ep 10 - Fly [Release date:: 2010-05-23] [x] Ep 9 - Kafkaesque [Release date:: 2010-05-16] [x] Ep 8 - I See You [Release date:: 2010-05-09] [x] Ep 7 - One Minute [Release date:: 2010-05-02] [x] Ep 6 - Sunset [Release date:: 2010-04-25] [x] Ep 5 - M\ufffds [Release date:: 2010-04-18] [x] Ep 4 - Green Light [Release date:: 2010-04-11] [x] Ep 3 - I.F.T. [Release date:: 2010-04-04] [x] Ep 2 - Caballo sin Nombre [Release date:: 2010-03-28] [x] Ep 1 - No M\ufffds [Release date:: 2010-03-21] Season 2 \u00b6 [x] Ep 13 - ABQ [Release date:: 2009-05-31] [x] Ep 12 - Phoenix [Release date:: 2009-05-24] [x] Ep 11 - Mandala [Release date:: 2009-05-17] [x] Ep 10 - Over [Release date:: 2009-05-10] [x] Ep 9 - 4 Days Out [Release date:: 2009-05-03] [x] Ep 8 - Better Call Saul [Release date:: 2009-04-26] [x] Ep 7 - Negro Y Azul [Release date:: 2009-04-19] [x] Ep 6 - Peekaboo [Release date:: 2009-04-12] [x] Ep 5 - Breakage [Release date:: 2009-04-05] [x] Ep 4 - Down [Release date:: 2009-03-29] [x] Ep 3 - Bit by a Dead Bee [Release date:: 2009-03-22] [x] Ep 2 - Grilled [Release date:: 2009-03-15] [x] Ep 1 - Seven Thirty-Seven [Release date:: 2009-03-08] Season 1 \u00b6 [x] Ep 7 - A No-Rough-Stuff-Type Deal [Release date:: 2008-03-09] [x] Ep 6 - Crazy Handful of Nothin' [Release date:: 2008-03-02] [x] Ep 5 - Gray Matter [Release date:: 2008-02-24] [x] Ep 4 - Cancer Man [Release date:: 2008-02-17] [x] Ep 3 - ...and the Bag's in the River [Release date:: 2008-02-10] [x] Ep 2 - Cat's in the Bag... [Release date:: 2008-01-27] [x] Ep 1 - Pilot [Release date:: 2008-01-20]","title":"Breaking Bad"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/#season-5","text":"[x] Ep 16 - Felina [Release date:: 2013-09-29] [x] Ep 15 - Granite State [Release date:: 2013-09-22] [x] Ep 14 - Ozymandias [Release date:: 2013-09-15] [x] Ep 13 - To'hajiilee [Release date:: 2013-09-08] [x] Ep 12 - Rabid Dog [Release date:: 2013-09-01] [x] Ep 11 - Confessions [Release date:: 2013-08-25] [x] Ep 10 - Buried [Release date:: 2013-08-18] [x] Ep 9 - Blood Money [Release date:: 2013-08-11] [x] Ep 8 - Gliding Over All [Release date:: 2012-09-02] [x] Ep 7 - Say My Name [Release date:: 2012-08-26] [x] Ep 6 - Buyout [Release date:: 2012-08-19] [x] Ep 5 - Dead Freight [Release date:: 2012-08-12] [x] Ep 4 - Fifty-One [Release date:: 2012-08-05] [x] Ep 3 - Hazard Pay [Release date:: 2012-07-29] [x] Ep 2 - Madrigal [Release date:: 2012-07-22] [x] Ep 1 - Live Free or Die [Release date:: 2012-07-15]","title":"Season 5"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/#season-4","text":"[x] Ep 13 - Face Off [Release date:: 2011-10-09] [x] Ep 12 - End Times [Release date:: 2011-10-02] [x] Ep 11 - Crawl Space [Release date:: 2011-09-25] [x] Ep 10 - Salud [Release date:: 2011-09-18] [x] Ep 9 - Bug [Release date:: 2011-09-11] [x] Ep 8 - Hermanos [Release date:: 2011-09-04] [x] Ep 7 - Problem Dog [Release date:: 2011-08-28] [x] Ep 6 - Cornered [Release date:: 2011-08-21] [x] Ep 5 - Shotgun [Release date:: 2011-08-14] [x] Ep 4 - Bullet Points [Release date:: 2011-08-07] [x] Ep 3 - Open House [Release date:: 2011-07-31] [x] Ep 2 - Thirty-Eight Snub [Release date:: 2011-07-24] [x] Ep 1 - Box Cutter [Release date:: 2011-07-17]","title":"Season 4"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/#season-3","text":"[x] Ep 13 - Full Measure [Release date:: 2010-06-13] [x] Ep 12 - Half Measures [Release date:: 2010-06-06] [x] Ep 11 - Abiquiu [Release date:: 2010-05-30] [x] Ep 10 - Fly [Release date:: 2010-05-23] [x] Ep 9 - Kafkaesque [Release date:: 2010-05-16] [x] Ep 8 - I See You [Release date:: 2010-05-09] [x] Ep 7 - One Minute [Release date:: 2010-05-02] [x] Ep 6 - Sunset [Release date:: 2010-04-25] [x] Ep 5 - M\ufffds [Release date:: 2010-04-18] [x] Ep 4 - Green Light [Release date:: 2010-04-11] [x] Ep 3 - I.F.T. [Release date:: 2010-04-04] [x] Ep 2 - Caballo sin Nombre [Release date:: 2010-03-28] [x] Ep 1 - No M\ufffds [Release date:: 2010-03-21]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/#season-2","text":"[x] Ep 13 - ABQ [Release date:: 2009-05-31] [x] Ep 12 - Phoenix [Release date:: 2009-05-24] [x] Ep 11 - Mandala [Release date:: 2009-05-17] [x] Ep 10 - Over [Release date:: 2009-05-10] [x] Ep 9 - 4 Days Out [Release date:: 2009-05-03] [x] Ep 8 - Better Call Saul [Release date:: 2009-04-26] [x] Ep 7 - Negro Y Azul [Release date:: 2009-04-19] [x] Ep 6 - Peekaboo [Release date:: 2009-04-12] [x] Ep 5 - Breakage [Release date:: 2009-04-05] [x] Ep 4 - Down [Release date:: 2009-03-29] [x] Ep 3 - Bit by a Dead Bee [Release date:: 2009-03-22] [x] Ep 2 - Grilled [Release date:: 2009-03-15] [x] Ep 1 - Seven Thirty-Seven [Release date:: 2009-03-08]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Breaking%20Bad/#season-1","text":"[x] Ep 7 - A No-Rough-Stuff-Type Deal [Release date:: 2008-03-09] [x] Ep 6 - Crazy Handful of Nothin' [Release date:: 2008-03-02] [x] Ep 5 - Gray Matter [Release date:: 2008-02-24] [x] Ep 4 - Cancer Man [Release date:: 2008-02-17] [x] Ep 3 - ...and the Bag's in the River [Release date:: 2008-02-10] [x] Ep 2 - Cat's in the Bag... [Release date:: 2008-01-27] [x] Ep 1 - Pilot [Release date:: 2008-01-20]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Castle%20Rock/","text":"Season 2 \u00b6 [ ] Ep 10 - Clean [Release date:: 2019-12-11] [ ] Ep 9 - Caveat Emptor [Release date:: 2019-12-04] [ ] Ep 8 - Dirty [Release date:: 2019-11-27] [ ] Ep 7 - The Word [Release date:: 2019-11-20] [ ] Ep 6 - The Mother [Release date:: 2019-11-13] [ ] Ep 5 - The Laughing Place [Release date:: 2019-11-06] [ ] Ep 4 - Restore Hope [Release date:: 2019-10-30] [ ] Ep 3 - Ties that Bind [Release date:: 2019-10-23] [ ] Ep 2 - New Jerusalem [Release date:: 2019-10-23] [ ] Ep 1 - Let the River Run [Release date:: 2019-10-23] Season 1 \u00b6 [ ] Ep 10 - Romans [Release date:: 2018-09-12] [ ] Ep 9 - Henry Deaver [Release date:: 2018-09-05] [ ] Ep 8 - Past Perfect [Release date:: 2018-08-29] [ ] Ep 7 - The Queen [Release date:: 2018-08-22] [ ] Ep 6 - Filter [Release date:: 2018-08-15] [ ] Ep 5 - Harvest [Release date:: 2018-08-08] [ ] Ep 4 - The Box [Release date:: 2018-08-01] [ ] Ep 3 - Local Color [Release date:: 2018-07-25] [ ] Ep 2 - Habeas Corpus [Release date:: 2018-07-25] [x] Ep 1 - Severance [Release date:: 2018-07-25]","title":"Castle Rock"},{"location":"10%20Example%20Data/shows/Castle%20Rock/#season-2","text":"[ ] Ep 10 - Clean [Release date:: 2019-12-11] [ ] Ep 9 - Caveat Emptor [Release date:: 2019-12-04] [ ] Ep 8 - Dirty [Release date:: 2019-11-27] [ ] Ep 7 - The Word [Release date:: 2019-11-20] [ ] Ep 6 - The Mother [Release date:: 2019-11-13] [ ] Ep 5 - The Laughing Place [Release date:: 2019-11-06] [ ] Ep 4 - Restore Hope [Release date:: 2019-10-30] [ ] Ep 3 - Ties that Bind [Release date:: 2019-10-23] [ ] Ep 2 - New Jerusalem [Release date:: 2019-10-23] [ ] Ep 1 - Let the River Run [Release date:: 2019-10-23]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Castle%20Rock/#season-1","text":"[ ] Ep 10 - Romans [Release date:: 2018-09-12] [ ] Ep 9 - Henry Deaver [Release date:: 2018-09-05] [ ] Ep 8 - Past Perfect [Release date:: 2018-08-29] [ ] Ep 7 - The Queen [Release date:: 2018-08-22] [ ] Ep 6 - Filter [Release date:: 2018-08-15] [ ] Ep 5 - Harvest [Release date:: 2018-08-08] [ ] Ep 4 - The Box [Release date:: 2018-08-01] [ ] Ep 3 - Local Color [Release date:: 2018-07-25] [ ] Ep 2 - Habeas Corpus [Release date:: 2018-07-25] [x] Ep 1 - Severance [Release date:: 2018-07-25]","title":"Season 1"},{"location":"10%20Example%20Data/shows/DOTA.%20Dragon%27s%20Blood/","text":"Season 3 \u00b6 [ ] Ep 1 - Episode 1 [Release date:: 2022-08-11] Season 2 \u00b6 [ ] Ep 8 - Chapter Eight: Unreal City [Release date:: 2022-01-18] [ ] Ep 7 - Chapter Seven: The Violet Hour [Release date:: 2022-01-18] [ ] Ep 6 - Chapter Six: The Hyacinth Girl [Release date:: 2022-01-18] [ ] Ep 5 - Chapter Five: The Burial of the Dead [Release date:: 2022-01-18] [ ] Ep 4 - Chapter Four: Desolate and Empty the Sea [Release date:: 2022-01-18] [ ] Ep 3 - Chapter Three: The Lady of Situations [Release date:: 2022-01-18] [ ] Ep 2 - Chapter Two: My Sword, My Life [Release date:: 2022-01-18] [ ] Ep 1 - Chapter One: Nothing with Nothing [Release date:: 2022-01-18] Season 1 \u00b6 [x] Ep 8 - Chapter Eight: A Game of Chess [Release date:: 2021-03-25] [x] Ep 7 - Chapter Seven: Speak the Words [Release date:: 2021-03-25] [x] Ep 6 - Chapter Six: Knight, Death and the Devil [Release date:: 2021-03-25] [x] Ep 5 - Chapter Five: The Fire Sermon [Release date:: 2021-03-25] [x] Ep 4 - Chapter Four: The Monster at the End of This Book [Release date:: 2021-03-25] [x] Ep 3 - Chapter Three: Neverwhere Land [Release date:: 2021-03-25] [x] Ep 2 - Chapter Two: Princess of Nothing [Release date:: 2021-03-25] [x] Ep 1 - Chapter One: What the Thunder Said [Release date:: 2021-03-25]","title":"DOTA. Dragon's Blood"},{"location":"10%20Example%20Data/shows/DOTA.%20Dragon%27s%20Blood/#season-3","text":"[ ] Ep 1 - Episode 1 [Release date:: 2022-08-11]","title":"Season 3"},{"location":"10%20Example%20Data/shows/DOTA.%20Dragon%27s%20Blood/#season-2","text":"[ ] Ep 8 - Chapter Eight: Unreal City [Release date:: 2022-01-18] [ ] Ep 7 - Chapter Seven: The Violet Hour [Release date:: 2022-01-18] [ ] Ep 6 - Chapter Six: The Hyacinth Girl [Release date:: 2022-01-18] [ ] Ep 5 - Chapter Five: The Burial of the Dead [Release date:: 2022-01-18] [ ] Ep 4 - Chapter Four: Desolate and Empty the Sea [Release date:: 2022-01-18] [ ] Ep 3 - Chapter Three: The Lady of Situations [Release date:: 2022-01-18] [ ] Ep 2 - Chapter Two: My Sword, My Life [Release date:: 2022-01-18] [ ] Ep 1 - Chapter One: Nothing with Nothing [Release date:: 2022-01-18]","title":"Season 2"},{"location":"10%20Example%20Data/shows/DOTA.%20Dragon%27s%20Blood/#season-1","text":"[x] Ep 8 - Chapter Eight: A Game of Chess [Release date:: 2021-03-25] [x] Ep 7 - Chapter Seven: Speak the Words [Release date:: 2021-03-25] [x] Ep 6 - Chapter Six: Knight, Death and the Devil [Release date:: 2021-03-25] [x] Ep 5 - Chapter Five: The Fire Sermon [Release date:: 2021-03-25] [x] Ep 4 - Chapter Four: The Monster at the End of This Book [Release date:: 2021-03-25] [x] Ep 3 - Chapter Three: Neverwhere Land [Release date:: 2021-03-25] [x] Ep 2 - Chapter Two: Princess of Nothing [Release date:: 2021-03-25] [x] Ep 1 - Chapter One: What the Thunder Said [Release date:: 2021-03-25]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/","text":"Title: Dragon Ball Genre: ['Action', 'Adventure', 'Anime', 'Fantasy'] Network: Fuji TV Seasons: 5 Episodes: 153 Runtime: 30 Show_status: Ended Status: 'Watching' Rating: Would rewatch: Season 5 \u00b6 [ ] Ep 31 - The End, the Beginning [Release date:: 1989-04-19] [ ] Ep 30 - Mystery of the Dark World [Release date:: 1989-04-12] [ ] Ep 29 - Outrageous Octagon [Release date:: 1989-04-05] [ ] Ep 28 - The Fire-Eater [Release date:: 1989-03-22] [ ] Ep 27 - Dress in Flames [Release date:: 1989-03-15] [ ] Ep 26 - The Victor [Release date:: 1989-03-08] [ ] Ep 25 - Goku Hangs On [Release date:: 1989-03-01] [ ] Ep 24 - Goku's Trap [Release date:: 1989-02-22] [ ] Ep 23 - Junior No More [Release date:: 1989-02-15] [ ] Ep 22 - Super Kamehameha [Release date:: 1989-02-08] [ ] Ep 21 - Battle for the Future [Release date:: 1989-02-01] [ ] Ep 20 - Kami vs. Piccolo [Release date:: 1989-01-25] [ ] Ep 19 - The Four Faces of Tien [Release date:: 1989-01-18] [ ] Ep 18 - Goku Gains Speed [Release date:: 1989-01-11] [ ] Ep 17 - Rematch [Release date:: 1988-12-21] [ ] Ep 16 - The Mysterious Hero [Release date:: 1988-12-14] [ ] Ep 15 - Anonymous Proposal [Release date:: 1988-12-07] [ ] Ep 14 - Tien Shinhan vs. Mercenary Tao [Release date:: 1988-11-30] [ ] Ep 13 - Battle of Eight [Release date:: 1988-11-23] [ ] Ep 12 - Preliminary Peril [Release date:: 1988-11-16] [ ] Ep 11 - Changes [Release date:: 1988-11-09] [ ] Ep 10 - Hotter Than Lava [Release date:: 1988-11-02] [ ] Ep 9 - Walking Their Own Ways [Release date:: 1988-10-26] [ ] Ep 8 - Goku's Doll? [Release date:: 1988-10-19] [ ] Ep 7 - The Time Room [Release date:: 1988-10-12] [ ] Ep 6 - Secret of the Woods [Release date:: 1988-09-28] [ ] Ep 5 - Quicker Than Lightning [Release date:: 1988-09-21] [ ] Ep 4 - Eternal Dragon Resurrected [Release date:: 1988-09-14] [ ] Ep 3 - Earth's Guardian Emerges [Release date:: 1988-08-31] [ ] Ep 2 - Temple Above the Clouds [Release date:: 1988-08-24] [ ] Ep 1 - Lost and Found [Release date:: 1988-08-17] Season 4 \u00b6 [ ] Ep 21 - Final Showdown [Release date:: 1988-08-10] [ ] Ep 20 - The Biggest Crisis [Release date:: 1988-08-03] [ ] Ep 19 - Goku Strikes Back [Release date:: 1988-07-27] [ ] Ep 18 - Battle Cry [Release date:: 1988-07-20] [ ] Ep 17 - Prelude to Vengeance [Release date:: 1988-07-06] [ ] Ep 16 - The Ultimate Sacrifice [Release date:: 1988-06-29] [ ] Ep 15 - A Taste of Destiny [Release date:: 1988-06-22] [ ] Ep 14 - Awaken Darkness [Release date:: 1988-06-08] [ ] Ep 13 - Conquest and Power [Release date:: 1988-06-01] [ ] Ep 12 - Siege on Chow Castle [Release date:: 1988-05-25] [ ] Ep 11 - King Piccolo's Wish [Release date:: 1988-05-18] [ ] Ep 10 - Roshi's Gambit [Release date:: 1988-05-11] [ ] Ep 9 - Piccolo Closes In [Release date:: 1988-05-04] [ ] Ep 8 - Goku vs. King Piccolo [Release date:: 1988-04-20] [ ] Ep 7 - Goku's Revenge [Release date:: 1988-04-13] [ ] Ep 6 - Tien's Atonement [Release date:: 1988-04-06] [ ] Ep 5 - Terrible Tambourine [Release date:: 1988-03-23] [ ] Ep 4 - Here Comes Yajirobe [Release date:: 1988-03-16] [ ] Ep 3 - Mark of the Demon [Release date:: 1988-03-09] [ ] Ep 2 - Tambourine Attacks! [Release date:: 1988-03-02] [ ] Ep 1 - Enter King Piccolo [Release date:: 1988-02-24] Season 3 \u00b6 [ ] Ep 48 - The Fallen [Release date:: 1988-02-17] [ ] Ep 47 - The Spirit Cannon [Release date:: 1988-02-10] [ ] Ep 46 - Tien's Insurrection [Release date:: 1988-02-03] [ ] Ep 45 - Victory's Edge [Release date:: 1988-01-27] [ ] Ep 44 - Final Match: Goku vs. Tien Shinhan [Release date:: 1988-01-20] [ ] Ep 43 - Tail's Tale [Release date:: 1988-01-13] [ ] Ep 42 - Goku vs. Krillin [Release date:: 1988-01-06] [ ] Ep 41 - Stepping Down [Release date:: 1987-12-30] [ ] Ep 40 - Tien Shinhan vs. Jacky Chun [Release date:: 1987-12-23] [ ] Ep 39 - Goku Enters the Ring [Release date:: 1987-12-16] [ ] Ep 38 - Counting Controversy! [Release date:: 1987-12-09] [ ] Ep 37 - The Dodon Wave [Release date:: 1987-12-02] [ ] Ep 36 - Full-Moon Vengeance [Release date:: 1987-11-25] [ ] Ep 35 - Yamcha's Big Break [Release date:: 1987-11-18] [ ] Ep 34 - Yamcha vs. Tien [Release date:: 1987-11-11] [ ] Ep 33 - Then There Were Eight [Release date:: 1987-11-04] [ ] Ep 32 - Preliminary Peril [Release date:: 1987-10-28] [ ] Ep 31 - Rivals and Arrivals [Release date:: 1987-10-21] [ ] Ep 30 - Which Way to Papaya Island? [Release date:: 1987-10-14] [ ] Ep 29 - The Rampage of InoShikaCho [Release date:: 1987-10-07] [ ] Ep 28 - Goku Goes to Demon Land [Release date:: 1987-09-30] [ ] Ep 27 - Goku vs. Sky Dragon [Release date:: 1987-09-23] [ ] Ep 26 - Terror and Plague [Release date:: 1987-09-16] [ ] Ep 25 - The Eternal Dragon Rises [Release date:: 1987-09-09] [ ] Ep 24 - Pilaf's Tactics [Release date:: 1987-09-02] [ ] Ep 23 - The True Colors of the Masked Man [Release date:: 1987-08-26] [ ] Ep 22 - The Strong Ones [Release date:: 1987-08-19] [ ] Ep 21 - The Mysterious Fifth Man [Release date:: 1987-08-12] [ ] Ep 20 - Devilmite Beam [Release date:: 1987-08-05] [ ] Ep 19 - Goku's Turn to Fight [Release date:: 1987-07-29] [ ] Ep 18 - Deadly Battle [Release date:: 1987-07-22] [ ] Ep 17 - We Are the Five Warriors [Release date:: 1987-07-15] [ ] Ep 16 - Who is Fortuneteller Baba? [Release date:: 1987-07-08] [ ] Ep 15 - The Last Dragon Ball [Release date:: 1987-07-01] [ ] Ep 14 - The End of Commander Red [Release date:: 1987-06-24] [ ] Ep 13 - A Real Bind [Release date:: 1987-06-17] [ ] Ep 12 - Confront the Red Ribbon Army [Release date:: 1987-06-10] [ ] Ep 11 - The Last of Mercenary Tao [Release date:: 1987-05-27] [ ] Ep 10 - The Return of Goku [Release date:: 1987-05-20] [ ] Ep 9 - Sacred Water [Release date:: 1987-05-13] [ ] Ep 8 - Korin Tower [Release date:: 1987-05-06] [ ] Ep 7 - Tao Attacks! [Release date:: 1987-04-29] [ ] Ep 6 - The Nortorious Mercenary [Release date:: 1987-04-22] [ ] Ep 5 - The Land of Korin [Release date:: 1987-04-15] [ ] Ep 4 - Arale vs. Blue [Release date:: 1987-04-08] [ ] Ep 3 - Strange Visitor [Release date:: 1987-03-25] [ ] Ep 2 - Penguin Village [Release date:: 1987-03-18] [ ] Ep 1 - Escape from Pirate Cave [Release date:: 1987-03-11] Season 2 \u00b6 [ ] Ep 25 - Blue, Black and Blue [Release date:: 1987-03-04] [ ] Ep 24 - The Pirate Treasure [Release date:: 1987-02-25] [ ] Ep 23 - Beware of the Robot [Release date:: 1987-02-18] [ ] Ep 22 - The Trap is Sprung [Release date:: 1987-02-11] [ ] Ep 21 - Roshi's Surprise [Release date:: 1987-02-04] [ ] Ep 20 - Deep Blue Sea [Release date:: 1987-01-28] [ ] Ep 19 - Kame House: Found! [Release date:: 1987-01-21] [ ] Ep 18 - Bulma's Bad Day [Release date:: 1987-01-14] [ ] Ep 17 - Danger in the Air [Release date:: 1987-01-07] [ ] Ep 16 - Master Thief, Haski [Release date:: 1986-12-24] [ ] Ep 15 - A Trip to the City [Release date:: 1986-12-17] [ ] Ep 14 - The Secret of Dr. Flappe [Release date:: 1986-12-10] [ ] Ep 13 - The Fall of Muscle Tower [Release date:: 1986-12-03] [ ] Ep 12 - Horrifying Buyon [Release date:: 1986-11-26] [ ] Ep 11 - Mysterious Android No.8 [Release date:: 1986-11-19] [ ] Ep 10 - Five Murasakis [Release date:: 1986-11-12] [ ] Ep 9 - The Ninja Murasaki is Coming! [Release date:: 1986-11-05] [ ] Ep 8 - Major Metallitron [Release date:: 1986-10-29] [ ] Ep 7 - Cold Reception [Release date:: 1986-10-22] [ ] Ep 6 - Cruel General Red [Release date:: 1986-10-15] [ ] Ep 5 - The Legend of a Dragon [Release date:: 1986-10-08] [ ] Ep 4 - The Flying Fortress: Vanished! [Release date:: 1986-10-01] [ ] Ep 3 - Wedding Plans? [Release date:: 1986-09-24] [ ] Ep 2 - Pilaf and the Mystery Force [Release date:: 1986-09-17] [ ] Ep 1 - The Roaming Lake [Release date:: 1986-09-10] Season 1 \u00b6 [ ] Ep 28 - The Final Blow [Release date:: 1986-09-03] [ ] Ep 27 - Number One Under the Moon [Release date:: 1986-08-27] [ ] Ep 26 - The Grand Finals [Release date:: 1986-08-20] [ ] Ep 25 - Danger from Above [Release date:: 1986-08-13] [ ] Ep 24 - Krillin's Frantic Attack! [Release date:: 1986-08-06] [x] Ep 23 - Monster Beast Giran [Release date:: 1986-07-30] [x] Ep 22 - Yamcha vs. Jackie Chun [Release date:: 1986-07-23] [x] Ep 21 - Smells Like Trouble [Release date:: 1986-07-16] [x] Ep 20 - Elimination Round [Release date:: 1986-07-09] [x] Ep 19 - The Tournament Begins [Release date:: 1986-07-02] [x] Ep 18 - The Turtle Hermit Way [Release date:: 1986-06-25] [x] Ep 17 - Milk Delivery [Release date:: 1986-06-18] [x] Ep 16 - Find That Stone! [Release date:: 1986-06-11] [x] Ep 15 - Look Out for Launch [Release date:: 1986-06-04] [x] Ep 14 - Goku's Rival [Release date:: 1986-05-28] [x] Ep 13 - The Legend of Goku [Release date:: 1986-05-21] [x] Ep 12 - A Wish to the Eternal Dragon [Release date:: 1986-05-14] [x] Ep 11 - The Penalty is Pinball [Release date:: 1986-05-07] [x] Ep 10 - The Dragon Balls Are Stolen! [Release date:: 1986-04-30] [x] Ep 9 - Boss Rabbit's Magic Touch [Release date:: 1986-04-23] [x] Ep 8 - The Kamehameha Wave [Release date:: 1986-04-16] [x] Ep 7 - The Ox-King on Fire Mountain [Release date:: 1986-04-09] [x] Ep 6 - Keep an Eye on the Dragon Balls [Release date:: 1986-04-02] [x] Ep 5 - Yamcha the Desert Bandit [Release date:: 1986-03-26] [x] Ep 4 - Oolong the Terrible [Release date:: 1986-03-19] [x] Ep 3 - The Nimbus Cloud of Roshi [Release date:: 1986-03-12] [x] Ep 2 - The Emperor's Quest [Release date:: 1986-03-05] [x] Ep 1 - Secret of the Dragon Ball [Release date:: 1986-02-26]","title":"Dragon Ball"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/#season-5","text":"[ ] Ep 31 - The End, the Beginning [Release date:: 1989-04-19] [ ] Ep 30 - Mystery of the Dark World [Release date:: 1989-04-12] [ ] Ep 29 - Outrageous Octagon [Release date:: 1989-04-05] [ ] Ep 28 - The Fire-Eater [Release date:: 1989-03-22] [ ] Ep 27 - Dress in Flames [Release date:: 1989-03-15] [ ] Ep 26 - The Victor [Release date:: 1989-03-08] [ ] Ep 25 - Goku Hangs On [Release date:: 1989-03-01] [ ] Ep 24 - Goku's Trap [Release date:: 1989-02-22] [ ] Ep 23 - Junior No More [Release date:: 1989-02-15] [ ] Ep 22 - Super Kamehameha [Release date:: 1989-02-08] [ ] Ep 21 - Battle for the Future [Release date:: 1989-02-01] [ ] Ep 20 - Kami vs. Piccolo [Release date:: 1989-01-25] [ ] Ep 19 - The Four Faces of Tien [Release date:: 1989-01-18] [ ] Ep 18 - Goku Gains Speed [Release date:: 1989-01-11] [ ] Ep 17 - Rematch [Release date:: 1988-12-21] [ ] Ep 16 - The Mysterious Hero [Release date:: 1988-12-14] [ ] Ep 15 - Anonymous Proposal [Release date:: 1988-12-07] [ ] Ep 14 - Tien Shinhan vs. Mercenary Tao [Release date:: 1988-11-30] [ ] Ep 13 - Battle of Eight [Release date:: 1988-11-23] [ ] Ep 12 - Preliminary Peril [Release date:: 1988-11-16] [ ] Ep 11 - Changes [Release date:: 1988-11-09] [ ] Ep 10 - Hotter Than Lava [Release date:: 1988-11-02] [ ] Ep 9 - Walking Their Own Ways [Release date:: 1988-10-26] [ ] Ep 8 - Goku's Doll? [Release date:: 1988-10-19] [ ] Ep 7 - The Time Room [Release date:: 1988-10-12] [ ] Ep 6 - Secret of the Woods [Release date:: 1988-09-28] [ ] Ep 5 - Quicker Than Lightning [Release date:: 1988-09-21] [ ] Ep 4 - Eternal Dragon Resurrected [Release date:: 1988-09-14] [ ] Ep 3 - Earth's Guardian Emerges [Release date:: 1988-08-31] [ ] Ep 2 - Temple Above the Clouds [Release date:: 1988-08-24] [ ] Ep 1 - Lost and Found [Release date:: 1988-08-17]","title":"Season 5"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/#season-4","text":"[ ] Ep 21 - Final Showdown [Release date:: 1988-08-10] [ ] Ep 20 - The Biggest Crisis [Release date:: 1988-08-03] [ ] Ep 19 - Goku Strikes Back [Release date:: 1988-07-27] [ ] Ep 18 - Battle Cry [Release date:: 1988-07-20] [ ] Ep 17 - Prelude to Vengeance [Release date:: 1988-07-06] [ ] Ep 16 - The Ultimate Sacrifice [Release date:: 1988-06-29] [ ] Ep 15 - A Taste of Destiny [Release date:: 1988-06-22] [ ] Ep 14 - Awaken Darkness [Release date:: 1988-06-08] [ ] Ep 13 - Conquest and Power [Release date:: 1988-06-01] [ ] Ep 12 - Siege on Chow Castle [Release date:: 1988-05-25] [ ] Ep 11 - King Piccolo's Wish [Release date:: 1988-05-18] [ ] Ep 10 - Roshi's Gambit [Release date:: 1988-05-11] [ ] Ep 9 - Piccolo Closes In [Release date:: 1988-05-04] [ ] Ep 8 - Goku vs. King Piccolo [Release date:: 1988-04-20] [ ] Ep 7 - Goku's Revenge [Release date:: 1988-04-13] [ ] Ep 6 - Tien's Atonement [Release date:: 1988-04-06] [ ] Ep 5 - Terrible Tambourine [Release date:: 1988-03-23] [ ] Ep 4 - Here Comes Yajirobe [Release date:: 1988-03-16] [ ] Ep 3 - Mark of the Demon [Release date:: 1988-03-09] [ ] Ep 2 - Tambourine Attacks! [Release date:: 1988-03-02] [ ] Ep 1 - Enter King Piccolo [Release date:: 1988-02-24]","title":"Season 4"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/#season-3","text":"[ ] Ep 48 - The Fallen [Release date:: 1988-02-17] [ ] Ep 47 - The Spirit Cannon [Release date:: 1988-02-10] [ ] Ep 46 - Tien's Insurrection [Release date:: 1988-02-03] [ ] Ep 45 - Victory's Edge [Release date:: 1988-01-27] [ ] Ep 44 - Final Match: Goku vs. Tien Shinhan [Release date:: 1988-01-20] [ ] Ep 43 - Tail's Tale [Release date:: 1988-01-13] [ ] Ep 42 - Goku vs. Krillin [Release date:: 1988-01-06] [ ] Ep 41 - Stepping Down [Release date:: 1987-12-30] [ ] Ep 40 - Tien Shinhan vs. Jacky Chun [Release date:: 1987-12-23] [ ] Ep 39 - Goku Enters the Ring [Release date:: 1987-12-16] [ ] Ep 38 - Counting Controversy! [Release date:: 1987-12-09] [ ] Ep 37 - The Dodon Wave [Release date:: 1987-12-02] [ ] Ep 36 - Full-Moon Vengeance [Release date:: 1987-11-25] [ ] Ep 35 - Yamcha's Big Break [Release date:: 1987-11-18] [ ] Ep 34 - Yamcha vs. Tien [Release date:: 1987-11-11] [ ] Ep 33 - Then There Were Eight [Release date:: 1987-11-04] [ ] Ep 32 - Preliminary Peril [Release date:: 1987-10-28] [ ] Ep 31 - Rivals and Arrivals [Release date:: 1987-10-21] [ ] Ep 30 - Which Way to Papaya Island? [Release date:: 1987-10-14] [ ] Ep 29 - The Rampage of InoShikaCho [Release date:: 1987-10-07] [ ] Ep 28 - Goku Goes to Demon Land [Release date:: 1987-09-30] [ ] Ep 27 - Goku vs. Sky Dragon [Release date:: 1987-09-23] [ ] Ep 26 - Terror and Plague [Release date:: 1987-09-16] [ ] Ep 25 - The Eternal Dragon Rises [Release date:: 1987-09-09] [ ] Ep 24 - Pilaf's Tactics [Release date:: 1987-09-02] [ ] Ep 23 - The True Colors of the Masked Man [Release date:: 1987-08-26] [ ] Ep 22 - The Strong Ones [Release date:: 1987-08-19] [ ] Ep 21 - The Mysterious Fifth Man [Release date:: 1987-08-12] [ ] Ep 20 - Devilmite Beam [Release date:: 1987-08-05] [ ] Ep 19 - Goku's Turn to Fight [Release date:: 1987-07-29] [ ] Ep 18 - Deadly Battle [Release date:: 1987-07-22] [ ] Ep 17 - We Are the Five Warriors [Release date:: 1987-07-15] [ ] Ep 16 - Who is Fortuneteller Baba? [Release date:: 1987-07-08] [ ] Ep 15 - The Last Dragon Ball [Release date:: 1987-07-01] [ ] Ep 14 - The End of Commander Red [Release date:: 1987-06-24] [ ] Ep 13 - A Real Bind [Release date:: 1987-06-17] [ ] Ep 12 - Confront the Red Ribbon Army [Release date:: 1987-06-10] [ ] Ep 11 - The Last of Mercenary Tao [Release date:: 1987-05-27] [ ] Ep 10 - The Return of Goku [Release date:: 1987-05-20] [ ] Ep 9 - Sacred Water [Release date:: 1987-05-13] [ ] Ep 8 - Korin Tower [Release date:: 1987-05-06] [ ] Ep 7 - Tao Attacks! [Release date:: 1987-04-29] [ ] Ep 6 - The Nortorious Mercenary [Release date:: 1987-04-22] [ ] Ep 5 - The Land of Korin [Release date:: 1987-04-15] [ ] Ep 4 - Arale vs. Blue [Release date:: 1987-04-08] [ ] Ep 3 - Strange Visitor [Release date:: 1987-03-25] [ ] Ep 2 - Penguin Village [Release date:: 1987-03-18] [ ] Ep 1 - Escape from Pirate Cave [Release date:: 1987-03-11]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/#season-2","text":"[ ] Ep 25 - Blue, Black and Blue [Release date:: 1987-03-04] [ ] Ep 24 - The Pirate Treasure [Release date:: 1987-02-25] [ ] Ep 23 - Beware of the Robot [Release date:: 1987-02-18] [ ] Ep 22 - The Trap is Sprung [Release date:: 1987-02-11] [ ] Ep 21 - Roshi's Surprise [Release date:: 1987-02-04] [ ] Ep 20 - Deep Blue Sea [Release date:: 1987-01-28] [ ] Ep 19 - Kame House: Found! [Release date:: 1987-01-21] [ ] Ep 18 - Bulma's Bad Day [Release date:: 1987-01-14] [ ] Ep 17 - Danger in the Air [Release date:: 1987-01-07] [ ] Ep 16 - Master Thief, Haski [Release date:: 1986-12-24] [ ] Ep 15 - A Trip to the City [Release date:: 1986-12-17] [ ] Ep 14 - The Secret of Dr. Flappe [Release date:: 1986-12-10] [ ] Ep 13 - The Fall of Muscle Tower [Release date:: 1986-12-03] [ ] Ep 12 - Horrifying Buyon [Release date:: 1986-11-26] [ ] Ep 11 - Mysterious Android No.8 [Release date:: 1986-11-19] [ ] Ep 10 - Five Murasakis [Release date:: 1986-11-12] [ ] Ep 9 - The Ninja Murasaki is Coming! [Release date:: 1986-11-05] [ ] Ep 8 - Major Metallitron [Release date:: 1986-10-29] [ ] Ep 7 - Cold Reception [Release date:: 1986-10-22] [ ] Ep 6 - Cruel General Red [Release date:: 1986-10-15] [ ] Ep 5 - The Legend of a Dragon [Release date:: 1986-10-08] [ ] Ep 4 - The Flying Fortress: Vanished! [Release date:: 1986-10-01] [ ] Ep 3 - Wedding Plans? [Release date:: 1986-09-24] [ ] Ep 2 - Pilaf and the Mystery Force [Release date:: 1986-09-17] [ ] Ep 1 - The Roaming Lake [Release date:: 1986-09-10]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Dragon%20Ball/#season-1","text":"[ ] Ep 28 - The Final Blow [Release date:: 1986-09-03] [ ] Ep 27 - Number One Under the Moon [Release date:: 1986-08-27] [ ] Ep 26 - The Grand Finals [Release date:: 1986-08-20] [ ] Ep 25 - Danger from Above [Release date:: 1986-08-13] [ ] Ep 24 - Krillin's Frantic Attack! [Release date:: 1986-08-06] [x] Ep 23 - Monster Beast Giran [Release date:: 1986-07-30] [x] Ep 22 - Yamcha vs. Jackie Chun [Release date:: 1986-07-23] [x] Ep 21 - Smells Like Trouble [Release date:: 1986-07-16] [x] Ep 20 - Elimination Round [Release date:: 1986-07-09] [x] Ep 19 - The Tournament Begins [Release date:: 1986-07-02] [x] Ep 18 - The Turtle Hermit Way [Release date:: 1986-06-25] [x] Ep 17 - Milk Delivery [Release date:: 1986-06-18] [x] Ep 16 - Find That Stone! [Release date:: 1986-06-11] [x] Ep 15 - Look Out for Launch [Release date:: 1986-06-04] [x] Ep 14 - Goku's Rival [Release date:: 1986-05-28] [x] Ep 13 - The Legend of Goku [Release date:: 1986-05-21] [x] Ep 12 - A Wish to the Eternal Dragon [Release date:: 1986-05-14] [x] Ep 11 - The Penalty is Pinball [Release date:: 1986-05-07] [x] Ep 10 - The Dragon Balls Are Stolen! [Release date:: 1986-04-30] [x] Ep 9 - Boss Rabbit's Magic Touch [Release date:: 1986-04-23] [x] Ep 8 - The Kamehameha Wave [Release date:: 1986-04-16] [x] Ep 7 - The Ox-King on Fire Mountain [Release date:: 1986-04-09] [x] Ep 6 - Keep an Eye on the Dragon Balls [Release date:: 1986-04-02] [x] Ep 5 - Yamcha the Desert Bandit [Release date:: 1986-03-26] [x] Ep 4 - Oolong the Terrible [Release date:: 1986-03-19] [x] Ep 3 - The Nimbus Cloud of Roshi [Release date:: 1986-03-12] [x] Ep 2 - The Emperor's Quest [Release date:: 1986-03-05] [x] Ep 1 - Secret of the Dragon Ball [Release date:: 1986-02-26]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Happy%21/","text":"Season 2 \u00b6 [x] Ep 10 - Resurrection [Release date:: 2019-05-29] [x] Ep 9 - Five Chicken Fingers and a Gun [Release date:: 2019-05-22] [x] Ep 8 - A Friend of Death [Release date:: 2019-05-15] [x] Ep 7 - Arlo and Marie [Release date:: 2019-05-08] [x] Ep 6 - Pervapalooza [Release date:: 2019-05-01] [x] Ep 5 - 19 Hours and 13 Minutes [Release date:: 2019-04-24] [x] Ep 4 - Blitzkrieg!!! [Release date:: 2019-04-17] [x] Ep 3 - Some Girls Need a Lot of Repenting [Release date:: 2019-04-10] [x] Ep 2 - Tallahassee [Release date:: 2019-04-03] [x] Ep 1 - The War on Easter [Release date:: 2019-03-27] Season 1 \u00b6 [x] Ep 8 - I Am the Future [Release date:: 2018-01-31] [x] Ep 7 - Destroyer of Worlds [Release date:: 2018-01-24] [x] Ep 6 - The Scrapyard of Childish Things [Release date:: 2018-01-17] [x] Ep 5 - White Sauce? Hot Sauce? [Release date:: 2018-01-10] [x] Ep 4 - Year of the Horse [Release date:: 2017-12-27] [x] Ep 3 - When Christmas Was Christmas [Release date:: 2017-12-20] [x] Ep 2 - What Smiles Are For [Release date:: 2017-12-13] [x] Ep 1 - Saint Nick [Release date:: 2017-12-06]","title":"Happy!"},{"location":"10%20Example%20Data/shows/Happy%21/#season-2","text":"[x] Ep 10 - Resurrection [Release date:: 2019-05-29] [x] Ep 9 - Five Chicken Fingers and a Gun [Release date:: 2019-05-22] [x] Ep 8 - A Friend of Death [Release date:: 2019-05-15] [x] Ep 7 - Arlo and Marie [Release date:: 2019-05-08] [x] Ep 6 - Pervapalooza [Release date:: 2019-05-01] [x] Ep 5 - 19 Hours and 13 Minutes [Release date:: 2019-04-24] [x] Ep 4 - Blitzkrieg!!! [Release date:: 2019-04-17] [x] Ep 3 - Some Girls Need a Lot of Repenting [Release date:: 2019-04-10] [x] Ep 2 - Tallahassee [Release date:: 2019-04-03] [x] Ep 1 - The War on Easter [Release date:: 2019-03-27]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Happy%21/#season-1","text":"[x] Ep 8 - I Am the Future [Release date:: 2018-01-31] [x] Ep 7 - Destroyer of Worlds [Release date:: 2018-01-24] [x] Ep 6 - The Scrapyard of Childish Things [Release date:: 2018-01-17] [x] Ep 5 - White Sauce? Hot Sauce? [Release date:: 2018-01-10] [x] Ep 4 - Year of the Horse [Release date:: 2017-12-27] [x] Ep 3 - When Christmas Was Christmas [Release date:: 2017-12-20] [x] Ep 2 - What Smiles Are For [Release date:: 2017-12-13] [x] Ep 1 - Saint Nick [Release date:: 2017-12-06]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Hollywood/","text":"Season 1 \u00b6 [ ] Ep 7 - A Hollywood Ending [Release date:: 2020-05-01] [ ] Ep 6 - Meg [Release date:: 2020-05-01] [ ] Ep 5 - Jump [Release date:: 2020-05-01] [ ] Ep 4 - (Screen) Tests [Release date:: 2020-05-01] [ ] Ep 3 - Outlaws [Release date:: 2020-05-01] [ ] Ep 2 - Hooray for Hollywood: Part 2 [Release date:: 2020-05-01] [ ] Ep 1 - Hooray for Hollywood [Release date:: 2020-05-01]","title":"Hollywood"},{"location":"10%20Example%20Data/shows/Hollywood/#season-1","text":"[ ] Ep 7 - A Hollywood Ending [Release date:: 2020-05-01] [ ] Ep 6 - Meg [Release date:: 2020-05-01] [ ] Ep 5 - Jump [Release date:: 2020-05-01] [ ] Ep 4 - (Screen) Tests [Release date:: 2020-05-01] [ ] Ep 3 - Outlaws [Release date:: 2020-05-01] [ ] Ep 2 - Hooray for Hollywood: Part 2 [Release date:: 2020-05-01] [ ] Ep 1 - Hooray for Hollywood [Release date:: 2020-05-01]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Horace%20and%20Pete/","text":"Season 1 \u00b6 [x] Ep 10 - Episode 10 [Release date:: 2016-04-02] [x] Ep 9 - Episode 9 [Release date:: 2016-03-26] [x] Ep 8 - Episode 8 [Release date:: 2016-03-19] [x] Ep 7 - Episode 7 [Release date:: 2016-03-12] [x] Ep 6 - Episode 6 [Release date:: 2016-03-05] [x] Ep 5 - Episode 5 [Release date:: 2016-02-27] [x] Ep 4 - Episode 4 [Release date:: 2016-02-20] [x] Ep 3 - Episode 3 [Release date:: 2016-02-13] [x] Ep 2 - Episode 2 [Release date:: 2016-02-06] [x] Ep 1 - Episode 1 [Release date:: 2016-01-30]","title":"Horace and Pete"},{"location":"10%20Example%20Data/shows/Horace%20and%20Pete/#season-1","text":"[x] Ep 10 - Episode 10 [Release date:: 2016-04-02] [x] Ep 9 - Episode 9 [Release date:: 2016-03-26] [x] Ep 8 - Episode 8 [Release date:: 2016-03-19] [x] Ep 7 - Episode 7 [Release date:: 2016-03-12] [x] Ep 6 - Episode 6 [Release date:: 2016-03-05] [x] Ep 5 - Episode 5 [Release date:: 2016-02-27] [x] Ep 4 - Episode 4 [Release date:: 2016-02-20] [x] Ep 3 - Episode 3 [Release date:: 2016-02-13] [x] Ep 2 - Episode 2 [Release date:: 2016-02-06] [x] Ep 1 - Episode 1 [Release date:: 2016-01-30]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Insatiable/","text":"Season 2 \u00b6 [ ] Ep 10 - The Most You You Can Be [Release date:: 2019-10-11] [ ] Ep 9 - Ladybomb [Release date:: 2019-10-11] [ ] Ep 8 - Pretty in Prison [Release date:: 2019-10-11] [ ] Ep 7 - Full Brazilian [Release date:: 2019-10-11] [ ] Ep 6 - Eat and Run [Release date:: 2019-10-11] [ ] Ep 5 - Finding Magnolia [Release date:: 2019-10-11] [ ] Ep 4 - Poison Patty [Release date:: 2019-10-11] [ ] Ep 3 - Boomerang [Release date:: 2019-10-11] [ ] Ep 2 - Dead Girl [Release date:: 2019-10-11] [ ] Ep 1 - Pig [Release date:: 2019-10-11] Season 1 \u00b6 [x] Ep 12 - Why Bad Things Happen [Release date:: 2018-08-10] [x] Ep 11 - Winners Win. Period. [Release date:: 2018-08-10] [x] Ep 10 - Banana Heart Banana [Release date:: 2018-08-10] [x] Ep 9 - Bad Kitty [Release date:: 2018-08-10] [x] Ep 8 - Wieners and Losers [Release date:: 2018-08-10] [x] Ep 7 - Miss Magic Jesus [Release date:: 2018-08-10] [x] Ep 6 - Dunk 'N' Donut [Release date:: 2018-08-10] [x] Ep 5 - Bikinis and Bitches [Release date:: 2018-08-10] [x] Ep 4 - WMBS [Release date:: 2018-08-10] [x] Ep 3 - Miss Bareback Buckaroo [Release date:: 2018-08-10] [x] Ep 2 - Skinny Is Magic [Release date:: 2018-08-10] [x] Ep 1 - Pilot [Release date:: 2018-08-10]","title":"Insatiable"},{"location":"10%20Example%20Data/shows/Insatiable/#season-2","text":"[ ] Ep 10 - The Most You You Can Be [Release date:: 2019-10-11] [ ] Ep 9 - Ladybomb [Release date:: 2019-10-11] [ ] Ep 8 - Pretty in Prison [Release date:: 2019-10-11] [ ] Ep 7 - Full Brazilian [Release date:: 2019-10-11] [ ] Ep 6 - Eat and Run [Release date:: 2019-10-11] [ ] Ep 5 - Finding Magnolia [Release date:: 2019-10-11] [ ] Ep 4 - Poison Patty [Release date:: 2019-10-11] [ ] Ep 3 - Boomerang [Release date:: 2019-10-11] [ ] Ep 2 - Dead Girl [Release date:: 2019-10-11] [ ] Ep 1 - Pig [Release date:: 2019-10-11]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Insatiable/#season-1","text":"[x] Ep 12 - Why Bad Things Happen [Release date:: 2018-08-10] [x] Ep 11 - Winners Win. Period. [Release date:: 2018-08-10] [x] Ep 10 - Banana Heart Banana [Release date:: 2018-08-10] [x] Ep 9 - Bad Kitty [Release date:: 2018-08-10] [x] Ep 8 - Wieners and Losers [Release date:: 2018-08-10] [x] Ep 7 - Miss Magic Jesus [Release date:: 2018-08-10] [x] Ep 6 - Dunk 'N' Donut [Release date:: 2018-08-10] [x] Ep 5 - Bikinis and Bitches [Release date:: 2018-08-10] [x] Ep 4 - WMBS [Release date:: 2018-08-10] [x] Ep 3 - Miss Bareback Buckaroo [Release date:: 2018-08-10] [x] Ep 2 - Skinny Is Magic [Release date:: 2018-08-10] [x] Ep 1 - Pilot [Release date:: 2018-08-10]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Into%20the%20Dark/","text":"Season 2 \u00b6 [ ] Ep 12 - Blood Moon [Release date:: 2021-03-26] [ ] Ep 11 - Tentacles [Release date:: 2021-02-12] [ ] Ep 10 - The Current Occupant [Release date:: 2020-07-17] [ ] Ep 9 - Good Boy [Release date:: 2020-06-12] [ ] Ep 8 - Delivered [Release date:: 2020-05-08] [ ] Ep 7 - Pooka Lives! [Release date:: 2020-04-03] [ ] Ep 6 - Crawlers [Release date:: 2020-03-06] [ ] Ep 5 - My Valentine [Release date:: 2020-02-07] [ ] Ep 4 - Midnight Kiss [Release date:: 2019-12-27] [ ] Ep 3 - A Nasty Piece of Work [Release date:: 2019-12-06] [ ] Ep 2 - Pilgrim [Release date:: 2019-11-01] [ ] Ep 1 - Uncanny Annie [Release date:: 2019-10-04] Season 1 \u00b6 [ ] Ep 12 - Pure [Release date:: 2019-09-06] [ ] Ep 11 - School Spirit [Release date:: 2019-08-02] [ ] Ep 10 - Culture Shock [Release date:: 2019-07-04] [ ] Ep 9 - They Come Knocking [Release date:: 2019-06-07] [ ] Ep 8 - All That We Destroy [Release date:: 2019-05-03] [ ] Ep 7 - I'm Just F*cking with You [Release date:: 2019-04-01] [ ] Ep 6 - Treehouse [Release date:: 2019-03-01] [ ] Ep 5 - Down [Release date:: 2019-02-01] [ ] Ep 4 - New Year, New You [Release date:: 2018-12-28] [ ] Ep 3 - Pooka! [Release date:: 2018-12-07] [x] Ep 2 - Flesh & Blood [Release date:: 2018-11-02] [x] Ep 1 - The Body [Release date:: 2018-10-05]","title":"Into the Dark"},{"location":"10%20Example%20Data/shows/Into%20the%20Dark/#season-2","text":"[ ] Ep 12 - Blood Moon [Release date:: 2021-03-26] [ ] Ep 11 - Tentacles [Release date:: 2021-02-12] [ ] Ep 10 - The Current Occupant [Release date:: 2020-07-17] [ ] Ep 9 - Good Boy [Release date:: 2020-06-12] [ ] Ep 8 - Delivered [Release date:: 2020-05-08] [ ] Ep 7 - Pooka Lives! [Release date:: 2020-04-03] [ ] Ep 6 - Crawlers [Release date:: 2020-03-06] [ ] Ep 5 - My Valentine [Release date:: 2020-02-07] [ ] Ep 4 - Midnight Kiss [Release date:: 2019-12-27] [ ] Ep 3 - A Nasty Piece of Work [Release date:: 2019-12-06] [ ] Ep 2 - Pilgrim [Release date:: 2019-11-01] [ ] Ep 1 - Uncanny Annie [Release date:: 2019-10-04]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Into%20the%20Dark/#season-1","text":"[ ] Ep 12 - Pure [Release date:: 2019-09-06] [ ] Ep 11 - School Spirit [Release date:: 2019-08-02] [ ] Ep 10 - Culture Shock [Release date:: 2019-07-04] [ ] Ep 9 - They Come Knocking [Release date:: 2019-06-07] [ ] Ep 8 - All That We Destroy [Release date:: 2019-05-03] [ ] Ep 7 - I'm Just F*cking with You [Release date:: 2019-04-01] [ ] Ep 6 - Treehouse [Release date:: 2019-03-01] [ ] Ep 5 - Down [Release date:: 2019-02-01] [ ] Ep 4 - New Year, New You [Release date:: 2018-12-28] [ ] Ep 3 - Pooka! [Release date:: 2018-12-07] [x] Ep 2 - Flesh & Blood [Release date:: 2018-11-02] [x] Ep 1 - The Body [Release date:: 2018-10-05]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Kidding/","text":"Season 2 \u00b6 [ ] Ep 10 - The Puppet Dalai Lama [Release date:: 2020-03-08] [ ] Ep 9 - The Nightingale Pledge [Release date:: 2020-03-08] [ ] Ep 8 - A Seat on the Rocket [Release date:: 2020-03-01] [ ] Ep 7 - The Acceptance Speech [Release date:: 2020-03-01] [ ] Ep 6 - The Death of Fil [Release date:: 2020-02-23] [ ] Ep 5 - Episode 3101 [Release date:: 2020-02-23] [ ] Ep 4 - I Wonder What Grass Tastes Like [Release date:: 2020-02-16] [ ] Ep 3 - I'm Listening [Release date:: 2020-02-16] [ ] Ep 2 - Up, Down and Everything in Between [Release date:: 2020-02-09] [ ] Ep 1 - The Cleanest Liver in Columbus, Ohio [Release date:: 2020-02-09] Season 1 \u00b6 [ ] Ep 10 - Some Day [Release date:: 2018-11-11] [ ] Ep 9 - Lt. Pickles [Release date:: 2018-11-04] [ ] Ep 8 - Philliam [Release date:: 2018-10-28] [ ] Ep 7 - Kintsugi [Release date:: 2018-10-21] [ ] Ep 6 - The Cookie [Release date:: 2018-10-14] [ ] Ep 5 - The New You [Release date:: 2018-10-07] [x] Ep 4 - Bye, Mom! [Release date:: 2018-09-30] [x] Ep 3 - Every Pain Needs a Name [Release date:: 2018-09-23] [x] Ep 2 - Pusillanimous [Release date:: 2018-09-16] [x] Ep 1 - Green Means Go [Release date:: 2018-09-09]","title":"Kidding"},{"location":"10%20Example%20Data/shows/Kidding/#season-2","text":"[ ] Ep 10 - The Puppet Dalai Lama [Release date:: 2020-03-08] [ ] Ep 9 - The Nightingale Pledge [Release date:: 2020-03-08] [ ] Ep 8 - A Seat on the Rocket [Release date:: 2020-03-01] [ ] Ep 7 - The Acceptance Speech [Release date:: 2020-03-01] [ ] Ep 6 - The Death of Fil [Release date:: 2020-02-23] [ ] Ep 5 - Episode 3101 [Release date:: 2020-02-23] [ ] Ep 4 - I Wonder What Grass Tastes Like [Release date:: 2020-02-16] [ ] Ep 3 - I'm Listening [Release date:: 2020-02-16] [ ] Ep 2 - Up, Down and Everything in Between [Release date:: 2020-02-09] [ ] Ep 1 - The Cleanest Liver in Columbus, Ohio [Release date:: 2020-02-09]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Kidding/#season-1","text":"[ ] Ep 10 - Some Day [Release date:: 2018-11-11] [ ] Ep 9 - Lt. Pickles [Release date:: 2018-11-04] [ ] Ep 8 - Philliam [Release date:: 2018-10-28] [ ] Ep 7 - Kintsugi [Release date:: 2018-10-21] [ ] Ep 6 - The Cookie [Release date:: 2018-10-14] [ ] Ep 5 - The New You [Release date:: 2018-10-07] [x] Ep 4 - Bye, Mom! [Release date:: 2018-09-30] [x] Ep 3 - Every Pain Needs a Name [Release date:: 2018-09-23] [x] Ep 2 - Pusillanimous [Release date:: 2018-09-16] [x] Ep 1 - Green Means Go [Release date:: 2018-09-09]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Love%2C%20Death%20%26%20Robots/","text":"Season 3 \u00b6 [ ] Ep 9 - Jibaro [Release date:: 2022-05-20] [ ] Ep 8 - In Vaulted Halls Entombed [Release date:: 2022-05-20] [ ] Ep 7 - Mason's Rats [Release date:: 2022-05-20] [ ] Ep 6 - Swarm [Release date:: 2022-05-20] [ ] Ep 5 - Kill Team Kill [Release date:: 2022-05-20] [ ] Ep 4 - Night of the Mini Dead [Release date:: 2022-05-20] [ ] Ep 3 - The Very Pulse of the Machine [Release date:: 2022-05-20] [ ] Ep 2 - Bad Travelling [Release date:: 2022-05-20] [ ] Ep 1 - Three Robots: Exit Strategies [Release date:: 2022-05-20] Season 2 \u00b6 [ ] Ep 8 - The Drowned Giant [Release date:: 2021-05-14] [ ] Ep 7 - Life Hutch [Release date:: 2021-05-14] [ ] Ep 6 - All Through the House [Release date:: 2021-05-14] [ ] Ep 5 - The Tall Grass [Release date:: 2021-05-14] [ ] Ep 4 - Snow in the Desert [Release date:: 2021-05-14] [ ] Ep 3 - Pop Squad [Release date:: 2021-05-14] [ ] Ep 2 - Ice [Release date:: 2021-05-14] [ ] Ep 1 - Automated Customer Service [Release date:: 2021-05-14] Season 1 \u00b6 [x] Ep 18 - Zima Blue [Release date:: 2019-03-15] [x] Ep 17 - Blindspot [Release date:: 2019-03-15] [x] Ep 16 - Lucky 13 [Release date:: 2019-03-15] [x] Ep 15 - Alternate Histories [Release date:: 2019-03-15] [x] Ep 14 - Helping Hand [Release date:: 2019-03-15] [x] Ep 13 - Fish Night [Release date:: 2019-03-15] [x] Ep 12 - Shape-Shifters [Release date:: 2019-03-15] [x] Ep 11 - The Dump [Release date:: 2019-03-15] [x] Ep 10 - Good Hunting [Release date:: 2019-03-15] [x] Ep 9 - Suits [Release date:: 2019-03-15] [x] Ep 8 - The Witness [Release date:: 2019-03-15] [x] Ep 7 - Sucker of Souls [Release date:: 2019-03-15] [x] Ep 6 - The Secret War [Release date:: 2019-03-15] [x] Ep 5 - When the Yogurt Took Over [Release date:: 2019-03-15] [x] Ep 4 - Sonnie's Edge [Release date:: 2019-03-15] [x] Ep 3 - Ice Age [Release date:: 2019-03-15] [x] Ep 2 - Beyond the Aquila Rift [Release date:: 2019-03-15] [x] Ep 1 - Three Robots [Release date:: 2019-03-15]","title":"Love, Death & Robots"},{"location":"10%20Example%20Data/shows/Love%2C%20Death%20%26%20Robots/#season-3","text":"[ ] Ep 9 - Jibaro [Release date:: 2022-05-20] [ ] Ep 8 - In Vaulted Halls Entombed [Release date:: 2022-05-20] [ ] Ep 7 - Mason's Rats [Release date:: 2022-05-20] [ ] Ep 6 - Swarm [Release date:: 2022-05-20] [ ] Ep 5 - Kill Team Kill [Release date:: 2022-05-20] [ ] Ep 4 - Night of the Mini Dead [Release date:: 2022-05-20] [ ] Ep 3 - The Very Pulse of the Machine [Release date:: 2022-05-20] [ ] Ep 2 - Bad Travelling [Release date:: 2022-05-20] [ ] Ep 1 - Three Robots: Exit Strategies [Release date:: 2022-05-20]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Love%2C%20Death%20%26%20Robots/#season-2","text":"[ ] Ep 8 - The Drowned Giant [Release date:: 2021-05-14] [ ] Ep 7 - Life Hutch [Release date:: 2021-05-14] [ ] Ep 6 - All Through the House [Release date:: 2021-05-14] [ ] Ep 5 - The Tall Grass [Release date:: 2021-05-14] [ ] Ep 4 - Snow in the Desert [Release date:: 2021-05-14] [ ] Ep 3 - Pop Squad [Release date:: 2021-05-14] [ ] Ep 2 - Ice [Release date:: 2021-05-14] [ ] Ep 1 - Automated Customer Service [Release date:: 2021-05-14]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Love%2C%20Death%20%26%20Robots/#season-1","text":"[x] Ep 18 - Zima Blue [Release date:: 2019-03-15] [x] Ep 17 - Blindspot [Release date:: 2019-03-15] [x] Ep 16 - Lucky 13 [Release date:: 2019-03-15] [x] Ep 15 - Alternate Histories [Release date:: 2019-03-15] [x] Ep 14 - Helping Hand [Release date:: 2019-03-15] [x] Ep 13 - Fish Night [Release date:: 2019-03-15] [x] Ep 12 - Shape-Shifters [Release date:: 2019-03-15] [x] Ep 11 - The Dump [Release date:: 2019-03-15] [x] Ep 10 - Good Hunting [Release date:: 2019-03-15] [x] Ep 9 - Suits [Release date:: 2019-03-15] [x] Ep 8 - The Witness [Release date:: 2019-03-15] [x] Ep 7 - Sucker of Souls [Release date:: 2019-03-15] [x] Ep 6 - The Secret War [Release date:: 2019-03-15] [x] Ep 5 - When the Yogurt Took Over [Release date:: 2019-03-15] [x] Ep 4 - Sonnie's Edge [Release date:: 2019-03-15] [x] Ep 3 - Ice Age [Release date:: 2019-03-15] [x] Ep 2 - Beyond the Aquila Rift [Release date:: 2019-03-15] [x] Ep 1 - Three Robots [Release date:: 2019-03-15]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Mr.%20Corman/","text":"Season 1 \u00b6 [ ] Ep 10 - The Big Picture [Release date:: 2021-10-01] [ ] Ep 9 - Mr. Corman [Release date:: 2021-09-24] [ ] Ep 8 - Hope You Feel Better [Release date:: 2021-09-17] [ ] Ep 7 - Many Worlds [Release date:: 2021-09-10] [ ] Ep 6 - Funeral [Release date:: 2021-09-03] [ ] Ep 5 - Action Adventure [Release date:: 2021-08-27] [ ] Ep 4 - Mr. Morales [Release date:: 2021-08-20] [ ] Ep 3 - Happy Birthday [Release date:: 2021-08-13] [x] Ep 2 - Don't Panic [Release date:: 2021-08-06] [x] Ep 1 - Good Luck [Release date:: 2021-08-06]","title":"Mr. Corman"},{"location":"10%20Example%20Data/shows/Mr.%20Corman/#season-1","text":"[ ] Ep 10 - The Big Picture [Release date:: 2021-10-01] [ ] Ep 9 - Mr. Corman [Release date:: 2021-09-24] [ ] Ep 8 - Hope You Feel Better [Release date:: 2021-09-17] [ ] Ep 7 - Many Worlds [Release date:: 2021-09-10] [ ] Ep 6 - Funeral [Release date:: 2021-09-03] [ ] Ep 5 - Action Adventure [Release date:: 2021-08-27] [ ] Ep 4 - Mr. Morales [Release date:: 2021-08-20] [ ] Ep 3 - Happy Birthday [Release date:: 2021-08-13] [x] Ep 2 - Don't Panic [Release date:: 2021-08-06] [x] Ep 1 - Good Luck [Release date:: 2021-08-06]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Mr.%20Robot/","text":"Season 4 \u00b6 [ ] Ep 13 - Hello, Elliot [Release date:: 2019-12-22] [ ] Ep 12 - whoami [Release date:: 2019-12-22] [ ] Ep 11 - eXit [Release date:: 2019-12-15] [ ] Ep 10 - 410 Gone [Release date:: 2019-12-08] [ ] Ep 9 - 409 Conflict [Release date:: 2019-12-01] [ ] Ep 8 - 408 Request Timeout [Release date:: 2019-11-24] [ ] Ep 7 - 407 Proxy Authentication Required [Release date:: 2019-11-17] [ ] Ep 6 - 406 Not Acceptable [Release date:: 2019-11-10] [ ] Ep 5 - 405 Method Not Allowed [Release date:: 2019-11-03] [ ] Ep 4 - 404 Not Found [Release date:: 2019-10-27] [ ] Ep 3 - 403 Forbidden [Release date:: 2019-10-20] [ ] Ep 2 - 402 Payment Required [Release date:: 2019-10-13] [ ] Ep 1 - 401 Unauthorized [Release date:: 2019-10-06] Season 3 \u00b6 [x] Ep 10 - shutdown -r [Release date:: 2017-12-13] [x] Ep 9 - eps3.8_stage3.torrent [Release date:: 2017-12-06] [x] Ep 8 - eps3.7_dont-delete-me.ko [Release date:: 2017-11-29] [x] Ep 7 - eps3.6_fredrick+tanya.chk [Release date:: 2017-11-22] [x] Ep 6 - eps3.5_kill-pr0cess.inc [Release date:: 2017-11-15] [x] Ep 5 - eps3.4_runtime-err0r.r00 [Release date:: 2017-11-08] [x] Ep 4 - eps3.3_metadata.par2 [Release date:: 2017-11-01] [x] Ep 3 - eps3.2_legacy.so [Release date:: 2017-10-25] [x] Ep 2 - eps3.1_undo.gz [Release date:: 2017-10-18] [x] Ep 1 - eps3.0_power-saver-mode.h [Release date:: 2017-10-11] Season 2 \u00b6 [x] Ep 12 - eps2.9_pyth0n-pt2.p7z [Release date:: 2016-09-21] [x] Ep 11 - eps2.9_pyth0n-pt1.p7z [Release date:: 2016-09-14] [x] Ep 10 - eps2.8_h1dden-pr0cess.axx [Release date:: 2016-09-07] [x] Ep 9 - eps2.7_init5.fve [Release date:: 2016-08-31] [x] Ep 8 - eps2.6_succ3ss0r.p12 [Release date:: 2016-08-24] [x] Ep 7 - eps2.5_h4ndshake.sme [Release date:: 2016-08-17] [x] Ep 6 - eps2.4_m4ster-s1ave.aes [Release date:: 2016-08-10] [x] Ep 5 - eps2.3_logic-b0mb.hc [Release date:: 2016-08-03] [x] Ep 4 - eps2.2_init1.asec [Release date:: 2016-07-27] [x] Ep 3 - eps2.1_k3rnel-pan1c.ksd [Release date:: 2016-07-20] [x] Ep 2 - eps2.0_unm4sk-pt2.tc [Release date:: 2016-07-13] [x] Ep 1 - eps2.0_unm4sk-pt1.tc [Release date:: 2016-07-13] Season 1 \u00b6 [x] Ep 10 - eps1.9_zer0-day.avi [Release date:: 2015-09-02] [x] Ep 9 - eps1.8_m1rr0r1ng.qt [Release date:: 2015-08-19] [x] Ep 8 - eps1.7_wh1ter0se.m4v [Release date:: 2015-08-12] [x] Ep 7 - eps1.6_v1ew-s0urce.flv [Release date:: 2015-08-05] [x] Ep 6 - eps1.5_br4ve-trave1er.asf [Release date:: 2015-07-29] [x] Ep 5 - eps1.4_3xpl0its.wmv [Release date:: 2015-07-22] [x] Ep 4 - eps1.3_da3m0ns.mp4 [Release date:: 2015-07-15] [x] Ep 3 - eps1.2_d3bug.mkv [Release date:: 2015-07-08] [x] Ep 2 - eps1.1_ones-and-zer0es.mpeg [Release date:: 2015-07-01] [x] Ep 1 - eps1.0_hellofriend.mov [Release date:: 2015-06-24]","title":"Mr. Robot"},{"location":"10%20Example%20Data/shows/Mr.%20Robot/#season-4","text":"[ ] Ep 13 - Hello, Elliot [Release date:: 2019-12-22] [ ] Ep 12 - whoami [Release date:: 2019-12-22] [ ] Ep 11 - eXit [Release date:: 2019-12-15] [ ] Ep 10 - 410 Gone [Release date:: 2019-12-08] [ ] Ep 9 - 409 Conflict [Release date:: 2019-12-01] [ ] Ep 8 - 408 Request Timeout [Release date:: 2019-11-24] [ ] Ep 7 - 407 Proxy Authentication Required [Release date:: 2019-11-17] [ ] Ep 6 - 406 Not Acceptable [Release date:: 2019-11-10] [ ] Ep 5 - 405 Method Not Allowed [Release date:: 2019-11-03] [ ] Ep 4 - 404 Not Found [Release date:: 2019-10-27] [ ] Ep 3 - 403 Forbidden [Release date:: 2019-10-20] [ ] Ep 2 - 402 Payment Required [Release date:: 2019-10-13] [ ] Ep 1 - 401 Unauthorized [Release date:: 2019-10-06]","title":"Season 4"},{"location":"10%20Example%20Data/shows/Mr.%20Robot/#season-3","text":"[x] Ep 10 - shutdown -r [Release date:: 2017-12-13] [x] Ep 9 - eps3.8_stage3.torrent [Release date:: 2017-12-06] [x] Ep 8 - eps3.7_dont-delete-me.ko [Release date:: 2017-11-29] [x] Ep 7 - eps3.6_fredrick+tanya.chk [Release date:: 2017-11-22] [x] Ep 6 - eps3.5_kill-pr0cess.inc [Release date:: 2017-11-15] [x] Ep 5 - eps3.4_runtime-err0r.r00 [Release date:: 2017-11-08] [x] Ep 4 - eps3.3_metadata.par2 [Release date:: 2017-11-01] [x] Ep 3 - eps3.2_legacy.so [Release date:: 2017-10-25] [x] Ep 2 - eps3.1_undo.gz [Release date:: 2017-10-18] [x] Ep 1 - eps3.0_power-saver-mode.h [Release date:: 2017-10-11]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Mr.%20Robot/#season-2","text":"[x] Ep 12 - eps2.9_pyth0n-pt2.p7z [Release date:: 2016-09-21] [x] Ep 11 - eps2.9_pyth0n-pt1.p7z [Release date:: 2016-09-14] [x] Ep 10 - eps2.8_h1dden-pr0cess.axx [Release date:: 2016-09-07] [x] Ep 9 - eps2.7_init5.fve [Release date:: 2016-08-31] [x] Ep 8 - eps2.6_succ3ss0r.p12 [Release date:: 2016-08-24] [x] Ep 7 - eps2.5_h4ndshake.sme [Release date:: 2016-08-17] [x] Ep 6 - eps2.4_m4ster-s1ave.aes [Release date:: 2016-08-10] [x] Ep 5 - eps2.3_logic-b0mb.hc [Release date:: 2016-08-03] [x] Ep 4 - eps2.2_init1.asec [Release date:: 2016-07-27] [x] Ep 3 - eps2.1_k3rnel-pan1c.ksd [Release date:: 2016-07-20] [x] Ep 2 - eps2.0_unm4sk-pt2.tc [Release date:: 2016-07-13] [x] Ep 1 - eps2.0_unm4sk-pt1.tc [Release date:: 2016-07-13]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Mr.%20Robot/#season-1","text":"[x] Ep 10 - eps1.9_zer0-day.avi [Release date:: 2015-09-02] [x] Ep 9 - eps1.8_m1rr0r1ng.qt [Release date:: 2015-08-19] [x] Ep 8 - eps1.7_wh1ter0se.m4v [Release date:: 2015-08-12] [x] Ep 7 - eps1.6_v1ew-s0urce.flv [Release date:: 2015-08-05] [x] Ep 6 - eps1.5_br4ve-trave1er.asf [Release date:: 2015-07-29] [x] Ep 5 - eps1.4_3xpl0its.wmv [Release date:: 2015-07-22] [x] Ep 4 - eps1.3_da3m0ns.mp4 [Release date:: 2015-07-15] [x] Ep 3 - eps1.2_d3bug.mkv [Release date:: 2015-07-08] [x] Ep 2 - eps1.1_ones-and-zer0es.mpeg [Release date:: 2015-07-01] [x] Ep 1 - eps1.0_hellofriend.mov [Release date:: 2015-06-24]","title":"Season 1"},{"location":"10%20Example%20Data/shows/On%20Becoming%20a%20God%20in%20Central%20Florida/","text":"Season 1 \u00b6 [ ] Ep 10 - Go Getters Gonna Go Getcha [Release date:: 2019-10-20] [ ] Ep 9 - Wham Bam Thank You FAM [Release date:: 2019-10-13] [ ] Ep 8 - Birthday Party [Release date:: 2019-10-06] [ ] Ep 7 - Flint Glass [Release date:: 2019-09-29] [ ] Ep 6 - American Merchandise [Release date:: 2019-09-22] [ ] Ep 5 - Many Masters [Release date:: 2019-09-15] [ ] Ep 4 - Manifest Destinee [Release date:: 2019-09-08] [x] Ep 3 - A Positive Spin! [Release date:: 2019-09-01] [x] Ep 2 - The Gloomy-Zoomies [Release date:: 2019-08-25] [x] Ep 1 - The Stinker Thinker [Release date:: 2019-08-25]","title":"On Becoming a God in Central Florida"},{"location":"10%20Example%20Data/shows/On%20Becoming%20a%20God%20in%20Central%20Florida/#season-1","text":"[ ] Ep 10 - Go Getters Gonna Go Getcha [Release date:: 2019-10-20] [ ] Ep 9 - Wham Bam Thank You FAM [Release date:: 2019-10-13] [ ] Ep 8 - Birthday Party [Release date:: 2019-10-06] [ ] Ep 7 - Flint Glass [Release date:: 2019-09-29] [ ] Ep 6 - American Merchandise [Release date:: 2019-09-22] [ ] Ep 5 - Many Masters [Release date:: 2019-09-15] [ ] Ep 4 - Manifest Destinee [Release date:: 2019-09-08] [x] Ep 3 - A Positive Spin! [Release date:: 2019-09-01] [x] Ep 2 - The Gloomy-Zoomies [Release date:: 2019-08-25] [x] Ep 1 - The Stinker Thinker [Release date:: 2019-08-25]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Physical/","text":"Season 2 \u00b6 [ ] Ep 10 - TBA [Release date:: 2022-08-05] [ ] Ep 9 - Don't You Want to Get Better [Release date:: 2022-07-29] [ ] Ep 8 - Don't You Run and Hide [Release date:: 2022-07-22] [ ] Ep 7 - Don't Try This at Home [Release date:: 2022-07-15] [ ] Ep 6 - Don't You Have Enough [Release date:: 2022-07-08] [ ] Ep 5 - Don't You Want to Watch [Release date:: 2022-07-01] [ ] Ep 4 - Don't You Know [Release date:: 2022-06-24] [ ] Ep 3 - Don't You Go Far [Release date:: 2022-06-17] [x] Ep 2 - Don't You Ever Stop [Release date:: 2022-06-10] [x] Ep 1 - Don't You Want Me [Release date:: 2022-06-03] Season 1 \u00b6 [x] Ep 10 - Let's Get Together [Release date:: 2021-08-06] [x] Ep 9 - Let's Face the Facts [Release date:: 2021-07-30] [x] Ep 8 - Let's Not and Say We Did [Release date:: 2021-07-23] [x] Ep 7 - Let's Take This Show on the Road [Release date:: 2021-07-16] [x] Ep 6 - Let's Get It on Tape [Release date:: 2021-07-09] [x] Ep 5 - Let's Agree to Disagree [Release date:: 2021-07-02] [x] Ep 4 - Let's Get This Party Started [Release date:: 2021-06-25] [x] Ep 3 - Let's Get Down to Business [Release date:: 2021-06-18] [x] Ep 2 - Let's Get Political [Release date:: 2021-06-18] [x] Ep 1 - Let's Do This Thing [Release date:: 2021-06-18]","title":"Physical"},{"location":"10%20Example%20Data/shows/Physical/#season-2","text":"[ ] Ep 10 - TBA [Release date:: 2022-08-05] [ ] Ep 9 - Don't You Want to Get Better [Release date:: 2022-07-29] [ ] Ep 8 - Don't You Run and Hide [Release date:: 2022-07-22] [ ] Ep 7 - Don't Try This at Home [Release date:: 2022-07-15] [ ] Ep 6 - Don't You Have Enough [Release date:: 2022-07-08] [ ] Ep 5 - Don't You Want to Watch [Release date:: 2022-07-01] [ ] Ep 4 - Don't You Know [Release date:: 2022-06-24] [ ] Ep 3 - Don't You Go Far [Release date:: 2022-06-17] [x] Ep 2 - Don't You Ever Stop [Release date:: 2022-06-10] [x] Ep 1 - Don't You Want Me [Release date:: 2022-06-03]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Physical/#season-1","text":"[x] Ep 10 - Let's Get Together [Release date:: 2021-08-06] [x] Ep 9 - Let's Face the Facts [Release date:: 2021-07-30] [x] Ep 8 - Let's Not and Say We Did [Release date:: 2021-07-23] [x] Ep 7 - Let's Take This Show on the Road [Release date:: 2021-07-16] [x] Ep 6 - Let's Get It on Tape [Release date:: 2021-07-09] [x] Ep 5 - Let's Agree to Disagree [Release date:: 2021-07-02] [x] Ep 4 - Let's Get This Party Started [Release date:: 2021-06-25] [x] Ep 3 - Let's Get Down to Business [Release date:: 2021-06-18] [x] Ep 2 - Let's Get Political [Release date:: 2021-06-18] [x] Ep 1 - Let's Do This Thing [Release date:: 2021-06-18]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Severance/","text":"Season 2 \u00b6 Season 1 \u00b6 [ ] Ep 9 - The We We Are [Release date:: 2022-04-08] [ ] Ep 8 - What's for Dinner? [Release date:: 2022-04-01] [ ] Ep 7 - Defiant Jazz [Release date:: 2022-03-25] [ ] Ep 6 - Hide and Seek [Release date:: 2022-03-18] [ ] Ep 5 - The Grim Barbarity of Optics and Design [Release date:: 2022-03-11] [ ] Ep 4 - The You You Are [Release date:: 2022-03-04] [ ] Ep 3 - In Perpetuity [Release date:: 2022-02-25] [ ] Ep 2 - Half Loop [Release date:: 2022-02-18] [x] Ep 1 - Good News About Hell [Release date:: 2022-02-18]","title":"Severance"},{"location":"10%20Example%20Data/shows/Severance/#season-2","text":"","title":"Season 2"},{"location":"10%20Example%20Data/shows/Severance/#season-1","text":"[ ] Ep 9 - The We We Are [Release date:: 2022-04-08] [ ] Ep 8 - What's for Dinner? [Release date:: 2022-04-01] [ ] Ep 7 - Defiant Jazz [Release date:: 2022-03-25] [ ] Ep 6 - Hide and Seek [Release date:: 2022-03-18] [ ] Ep 5 - The Grim Barbarity of Optics and Design [Release date:: 2022-03-11] [ ] Ep 4 - The You You Are [Release date:: 2022-03-04] [ ] Ep 3 - In Perpetuity [Release date:: 2022-02-25] [ ] Ep 2 - Half Loop [Release date:: 2022-02-18] [x] Ep 1 - Good News About Hell [Release date:: 2022-02-18]","title":"Season 1"},{"location":"10%20Example%20Data/shows/Succession/","text":"Season 4 \u00b6 Season 3 \u00b6 [ ] Ep 9 - All the Bells Say [Release date:: 2021-12-12] [ ] Ep 8 - Chiantishire [Release date:: 2021-12-05] [ ] Ep 7 - Too Much Birthday [Release date:: 2021-11-28] [ ] Ep 6 - What It Takes [Release date:: 2021-11-21] [ ] Ep 5 - Retired Janitors of Idaho [Release date:: 2021-11-14] [ ] Ep 4 - Lion in the Meadow [Release date:: 2021-11-07] [ ] Ep 3 - The Disruption [Release date:: 2021-10-31] [ ] Ep 2 - Mass in Time of War [Release date:: 2021-10-24] [ ] Ep 1 - Secession [Release date:: 2021-10-17] Season 2 \u00b6 [ ] Ep 10 - This Is Not for Tears [Release date:: 2019-10-13] [ ] Ep 9 - DC [Release date:: 2019-10-06] [ ] Ep 8 - Dundee [Release date:: 2019-09-29] [ ] Ep 7 - Return [Release date:: 2019-09-22] [ ] Ep 6 - Argestes [Release date:: 2019-09-15] [ ] Ep 5 - Tern Haven [Release date:: 2019-09-08] [ ] Ep 4 - Safe Room [Release date:: 2019-09-01] [ ] Ep 3 - Hunting [Release date:: 2019-08-25] [ ] Ep 2 - Vaulter [Release date:: 2019-08-18] [ ] Ep 1 - The Summer Palace [Release date:: 2019-08-11] Season 1 \u00b6 [ ] Ep 10 - Nobody Is Ever Missing [Release date:: 2018-08-05] [ ] Ep 9 - Pre-Nuptial [Release date:: 2018-07-29] [ ] Ep 8 - Prague [Release date:: 2018-07-22] [ ] Ep 7 - Austerlitz [Release date:: 2018-07-15] [ ] Ep 6 - Which Side Are You On? [Release date:: 2018-07-08] [ ] Ep 5 - I Went to Market [Release date:: 2018-07-01] [ ] Ep 4 - Sad Sack Wasp Trap [Release date:: 2018-06-24] [ ] Ep 3 - Lifeboats [Release date:: 2018-06-17] [ ] Ep 2 - Shit Show at the Fuck Factory [Release date:: 2018-06-10] [ ] Ep 1 - Celebration [Release date:: 2018-06-03]","title":"Succession"},{"location":"10%20Example%20Data/shows/Succession/#season-4","text":"","title":"Season 4"},{"location":"10%20Example%20Data/shows/Succession/#season-3","text":"[ ] Ep 9 - All the Bells Say [Release date:: 2021-12-12] [ ] Ep 8 - Chiantishire [Release date:: 2021-12-05] [ ] Ep 7 - Too Much Birthday [Release date:: 2021-11-28] [ ] Ep 6 - What It Takes [Release date:: 2021-11-21] [ ] Ep 5 - Retired Janitors of Idaho [Release date:: 2021-11-14] [ ] Ep 4 - Lion in the Meadow [Release date:: 2021-11-07] [ ] Ep 3 - The Disruption [Release date:: 2021-10-31] [ ] Ep 2 - Mass in Time of War [Release date:: 2021-10-24] [ ] Ep 1 - Secession [Release date:: 2021-10-17]","title":"Season 3"},{"location":"10%20Example%20Data/shows/Succession/#season-2","text":"[ ] Ep 10 - This Is Not for Tears [Release date:: 2019-10-13] [ ] Ep 9 - DC [Release date:: 2019-10-06] [ ] Ep 8 - Dundee [Release date:: 2019-09-29] [ ] Ep 7 - Return [Release date:: 2019-09-22] [ ] Ep 6 - Argestes [Release date:: 2019-09-15] [ ] Ep 5 - Tern Haven [Release date:: 2019-09-08] [ ] Ep 4 - Safe Room [Release date:: 2019-09-01] [ ] Ep 3 - Hunting [Release date:: 2019-08-25] [ ] Ep 2 - Vaulter [Release date:: 2019-08-18] [ ] Ep 1 - The Summer Palace [Release date:: 2019-08-11]","title":"Season 2"},{"location":"10%20Example%20Data/shows/Succession/#season-1","text":"[ ] Ep 10 - Nobody Is Ever Missing [Release date:: 2018-08-05] [ ] Ep 9 - Pre-Nuptial [Release date:: 2018-07-29] [ ] Ep 8 - Prague [Release date:: 2018-07-22] [ ] Ep 7 - Austerlitz [Release date:: 2018-07-15] [ ] Ep 6 - Which Side Are You On? [Release date:: 2018-07-08] [ ] Ep 5 - I Went to Market [Release date:: 2018-07-01] [ ] Ep 4 - Sad Sack Wasp Trap [Release date:: 2018-06-24] [ ] Ep 3 - Lifeboats [Release date:: 2018-06-17] [ ] Ep 2 - Shit Show at the Fuck Factory [Release date:: 2018-06-10] [ ] Ep 1 - Celebration [Release date:: 2018-06-03]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Get%20Down/","text":"Season 2 \u00b6 [ ] Ep 5 - Only from Exile Can We Come Home [Release date:: 2017-04-07] [ ] Ep 4 - Gamble Everything [Release date:: 2017-04-07] [ ] Ep 3 - One by One, Into the Dark [Release date:: 2017-04-07] [ ] Ep 2 - The Beat Says, This Is the Way [Release date:: 2017-04-07] [ ] Ep 1 - Unfold Your Own Myth [Release date:: 2017-04-07] Season 1 \u00b6 [ ] Ep 6 - Raise Your Words, Not Your Voice [Release date:: 2016-08-12] [ ] Ep 5 - You Have Wings, Learn to Fly [Release date:: 2016-08-12] [ ] Ep 4 - Forget Safety, Be Notorious [Release date:: 2016-08-12] [ ] Ep 3 - Darkness Is Your Candle [Release date:: 2016-08-12] [ ] Ep 2 - Seek Those Who Fan Your Flames [Release date:: 2016-08-12] [ ] Ep 1 - Where There Is Ruin, There Is Hope for a Treasure [Release date:: 2016-08-12]","title":"The Get Down"},{"location":"10%20Example%20Data/shows/The%20Get%20Down/#season-2","text":"[ ] Ep 5 - Only from Exile Can We Come Home [Release date:: 2017-04-07] [ ] Ep 4 - Gamble Everything [Release date:: 2017-04-07] [ ] Ep 3 - One by One, Into the Dark [Release date:: 2017-04-07] [ ] Ep 2 - The Beat Says, This Is the Way [Release date:: 2017-04-07] [ ] Ep 1 - Unfold Your Own Myth [Release date:: 2017-04-07]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Get%20Down/#season-1","text":"[ ] Ep 6 - Raise Your Words, Not Your Voice [Release date:: 2016-08-12] [ ] Ep 5 - You Have Wings, Learn to Fly [Release date:: 2016-08-12] [ ] Ep 4 - Forget Safety, Be Notorious [Release date:: 2016-08-12] [ ] Ep 3 - Darkness Is Your Candle [Release date:: 2016-08-12] [ ] Ep 2 - Seek Those Who Fan Your Flames [Release date:: 2016-08-12] [ ] Ep 1 - Where There Is Ruin, There Is Hope for a Treasure [Release date:: 2016-08-12]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/","text":"Season 6 \u00b6 [ ] Ep 1 - TBA [Release date:: 2022-10-03] Season 5 \u00b6 [ ] Ep 18 - Sons [Release date:: 2022-05-16] [ ] Ep 17 - The Lea Show [Release date:: 2022-05-09] [ ] Ep 16 - The Shaun Show [Release date:: 2022-05-02] [ ] Ep 15 - My Way [Release date:: 2022-04-18] [ ] Ep 14 - Potluck [Release date:: 2022-04-11] [ ] Ep 13 - Growing Pains [Release date:: 2022-04-04] [ ] Ep 12 - Dry Spell [Release date:: 2022-03-28] [ ] Ep 11 - The Family [Release date:: 2022-03-21] [ ] Ep 10 - Cheat Day [Release date:: 2022-03-14] [ ] Ep 9 - Yippee Ki-Yay [Release date:: 2022-03-07] [ ] Ep 8 - Rebellion [Release date:: 2022-02-28] [ ] Ep 7 - Expired [Release date:: 2021-11-22] [ ] Ep 6 - One Heart [Release date:: 2021-11-15] [ ] Ep 5 - Crazytown [Release date:: 2021-11-01] [ ] Ep 4 - Rationality [Release date:: 2021-10-25] [ ] Ep 3 - Measure of Intelligence [Release date:: 2021-10-11] [ ] Ep 2 - Piece of Cake [Release date:: 2021-10-04] [ ] Ep 1 - New Beginnings [Release date:: 2021-09-27] Season 4 \u00b6 [ ] Ep 20 - Vamos [Release date:: 2021-06-07] [ ] Ep 19 - Venga [Release date:: 2021-05-31] [ ] Ep 18 - Forgive or Forget [Release date:: 2021-05-24] [ ] Ep 17 - Letting Go [Release date:: 2021-05-17] [ ] Ep 16 - Dr. Ted [Release date:: 2021-05-10] [ ] Ep 15 - Waiting [Release date:: 2021-04-26] [ ] Ep 14 - Gender Reveal [Release date:: 2021-04-19] [ ] Ep 13 - Spilled Milk [Release date:: 2021-03-29] [ ] Ep 12 - Teeny Blue Eyes [Release date:: 2021-03-22] [ ] Ep 11 - We're All Crazy Sometimes [Release date:: 2021-03-08] [ ] Ep 10 - Decrypt [Release date:: 2021-02-22] [ ] Ep 9 - Irresponsible Salad Bar Practices [Release date:: 2021-02-15] [ ] Ep 8 - Parenting [Release date:: 2021-01-25] [ ] Ep 7 - The Uncertainty Principle [Release date:: 2021-01-18] [ ] Ep 6 - Lim [Release date:: 2021-01-11] [ ] Ep 5 - Fault [Release date:: 2020-11-30] [ ] Ep 4 - Not the Same [Release date:: 2020-11-23] [ ] Ep 3 - Newbies [Release date:: 2020-11-16] [ ] Ep 2 - Frontline, Part 2 [Release date:: 2020-11-09] [ ] Ep 1 - Frontline, Part 1 [Release date:: 2020-11-02] Season 3 \u00b6 [ ] Ep 20 - I Love You [Release date:: 2020-03-30] [ ] Ep 19 - Hurt [Release date:: 2020-03-23] [ ] Ep 18 - Heartbreak [Release date:: 2020-03-09] [ ] Ep 17 - Fixation [Release date:: 2020-03-02] [ ] Ep 16 - Autopsy [Release date:: 2020-02-24] [ ] Ep 15 - Unsaid [Release date:: 2020-02-17] [ ] Ep 14 - Influence [Release date:: 2020-02-10] [ ] Ep 13 - Sex and Death [Release date:: 2020-01-27] [ ] Ep 12 - Mutations [Release date:: 2020-01-20] [ ] Ep 11 - Fractured [Release date:: 2020-01-13] [ ] Ep 10 - Friends and Family [Release date:: 2019-12-02] [ ] Ep 9 - Incomplete [Release date:: 2019-11-25] [ ] Ep 8 - Moonshot [Release date:: 2019-11-18] [ ] Ep 7 - SFAD [Release date:: 2019-11-11] [ ] Ep 6 - 45-Degree Angle [Release date:: 2019-11-04] [ ] Ep 5 - First Case, Second Base [Release date:: 2019-10-21] [ ] Ep 4 - Take My Hand [Release date:: 2019-10-14] [ ] Ep 3 - Claire [Release date:: 2019-10-07] [ ] Ep 2 - Debts [Release date:: 2019-09-30] [ ] Ep 1 - Disaster [Release date:: 2019-09-23] Season 2 \u00b6 [ ] Ep 18 - Trampoline [Release date:: 2019-03-11] [ ] Ep 17 - Breakdown [Release date:: 2019-03-04] [ ] Ep 16 - Believe [Release date:: 2019-02-25] [ ] Ep 15 - Risk and Reward [Release date:: 2019-02-18] [ ] Ep 14 - Faces [Release date:: 2019-02-04] [ ] Ep 13 - Xin [Release date:: 2019-01-28] [ ] Ep 12 - Aftermath [Release date:: 2019-01-21] [ ] Ep 11 - Quarantine, Part 2 [Release date:: 2019-01-14] [ ] Ep 10 - Quarantine, Part 1 [Release date:: 2018-12-03] [ ] Ep 9 - Empathy [Release date:: 2018-11-26] [ ] Ep 8 - Stories [Release date:: 2018-11-19] [ ] Ep 7 - Hubert [Release date:: 2018-11-12] [ ] Ep 6 - Two-Ply (or Not Two-Ply) [Release date:: 2018-11-05] [ ] Ep 5 - Carrots [Release date:: 2018-10-29] [ ] Ep 4 - Tough Titmouse [Release date:: 2018-10-15] [ ] Ep 3 - 36 Hours [Release date:: 2018-10-08] [ ] Ep 2 - Middle Ground [Release date:: 2018-10-01] [ ] Ep 1 - Hello [Release date:: 2018-09-24] Season 1 \u00b6 [ ] Ep 18 - More [Release date:: 2018-03-26] [ ] Ep 17 - Smile [Release date:: 2018-03-19] [ ] Ep 16 - Pain [Release date:: 2018-03-12] [ ] Ep 15 - Heartfelt [Release date:: 2018-02-26] [ ] Ep 14 - She [Release date:: 2018-02-05] [ ] Ep 13 - Seven Reasons [Release date:: 2018-01-22] [ ] Ep 12 - Islands, Part 2 [Release date:: 2018-01-15] [ ] Ep 11 - Islands, Part 1 [Release date:: 2018-01-08] [x] Ep 10 - Sacrifice [Release date:: 2017-12-04] [x] Ep 9 - Intangibles [Release date:: 2017-11-27] [x] Ep 8 - Apple [Release date:: 2017-11-20] [x] Ep 7 - 22 Steps [Release date:: 2017-11-13] [x] Ep 6 - Not Fake [Release date:: 2017-10-30] [x] Ep 5 - Point Three Percent [Release date:: 2017-10-23] [x] Ep 4 - Pipes [Release date:: 2017-10-16] [x] Ep 3 - Oliver [Release date:: 2017-10-09] [x] Ep 2 - Mount Rushmore [Release date:: 2017-10-02] [x] Ep 1 - Burnt Food [Release date:: 2017-09-25]","title":"The Good Doctor"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-6","text":"[ ] Ep 1 - TBA [Release date:: 2022-10-03]","title":"Season 6"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-5","text":"[ ] Ep 18 - Sons [Release date:: 2022-05-16] [ ] Ep 17 - The Lea Show [Release date:: 2022-05-09] [ ] Ep 16 - The Shaun Show [Release date:: 2022-05-02] [ ] Ep 15 - My Way [Release date:: 2022-04-18] [ ] Ep 14 - Potluck [Release date:: 2022-04-11] [ ] Ep 13 - Growing Pains [Release date:: 2022-04-04] [ ] Ep 12 - Dry Spell [Release date:: 2022-03-28] [ ] Ep 11 - The Family [Release date:: 2022-03-21] [ ] Ep 10 - Cheat Day [Release date:: 2022-03-14] [ ] Ep 9 - Yippee Ki-Yay [Release date:: 2022-03-07] [ ] Ep 8 - Rebellion [Release date:: 2022-02-28] [ ] Ep 7 - Expired [Release date:: 2021-11-22] [ ] Ep 6 - One Heart [Release date:: 2021-11-15] [ ] Ep 5 - Crazytown [Release date:: 2021-11-01] [ ] Ep 4 - Rationality [Release date:: 2021-10-25] [ ] Ep 3 - Measure of Intelligence [Release date:: 2021-10-11] [ ] Ep 2 - Piece of Cake [Release date:: 2021-10-04] [ ] Ep 1 - New Beginnings [Release date:: 2021-09-27]","title":"Season 5"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-4","text":"[ ] Ep 20 - Vamos [Release date:: 2021-06-07] [ ] Ep 19 - Venga [Release date:: 2021-05-31] [ ] Ep 18 - Forgive or Forget [Release date:: 2021-05-24] [ ] Ep 17 - Letting Go [Release date:: 2021-05-17] [ ] Ep 16 - Dr. Ted [Release date:: 2021-05-10] [ ] Ep 15 - Waiting [Release date:: 2021-04-26] [ ] Ep 14 - Gender Reveal [Release date:: 2021-04-19] [ ] Ep 13 - Spilled Milk [Release date:: 2021-03-29] [ ] Ep 12 - Teeny Blue Eyes [Release date:: 2021-03-22] [ ] Ep 11 - We're All Crazy Sometimes [Release date:: 2021-03-08] [ ] Ep 10 - Decrypt [Release date:: 2021-02-22] [ ] Ep 9 - Irresponsible Salad Bar Practices [Release date:: 2021-02-15] [ ] Ep 8 - Parenting [Release date:: 2021-01-25] [ ] Ep 7 - The Uncertainty Principle [Release date:: 2021-01-18] [ ] Ep 6 - Lim [Release date:: 2021-01-11] [ ] Ep 5 - Fault [Release date:: 2020-11-30] [ ] Ep 4 - Not the Same [Release date:: 2020-11-23] [ ] Ep 3 - Newbies [Release date:: 2020-11-16] [ ] Ep 2 - Frontline, Part 2 [Release date:: 2020-11-09] [ ] Ep 1 - Frontline, Part 1 [Release date:: 2020-11-02]","title":"Season 4"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-3","text":"[ ] Ep 20 - I Love You [Release date:: 2020-03-30] [ ] Ep 19 - Hurt [Release date:: 2020-03-23] [ ] Ep 18 - Heartbreak [Release date:: 2020-03-09] [ ] Ep 17 - Fixation [Release date:: 2020-03-02] [ ] Ep 16 - Autopsy [Release date:: 2020-02-24] [ ] Ep 15 - Unsaid [Release date:: 2020-02-17] [ ] Ep 14 - Influence [Release date:: 2020-02-10] [ ] Ep 13 - Sex and Death [Release date:: 2020-01-27] [ ] Ep 12 - Mutations [Release date:: 2020-01-20] [ ] Ep 11 - Fractured [Release date:: 2020-01-13] [ ] Ep 10 - Friends and Family [Release date:: 2019-12-02] [ ] Ep 9 - Incomplete [Release date:: 2019-11-25] [ ] Ep 8 - Moonshot [Release date:: 2019-11-18] [ ] Ep 7 - SFAD [Release date:: 2019-11-11] [ ] Ep 6 - 45-Degree Angle [Release date:: 2019-11-04] [ ] Ep 5 - First Case, Second Base [Release date:: 2019-10-21] [ ] Ep 4 - Take My Hand [Release date:: 2019-10-14] [ ] Ep 3 - Claire [Release date:: 2019-10-07] [ ] Ep 2 - Debts [Release date:: 2019-09-30] [ ] Ep 1 - Disaster [Release date:: 2019-09-23]","title":"Season 3"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-2","text":"[ ] Ep 18 - Trampoline [Release date:: 2019-03-11] [ ] Ep 17 - Breakdown [Release date:: 2019-03-04] [ ] Ep 16 - Believe [Release date:: 2019-02-25] [ ] Ep 15 - Risk and Reward [Release date:: 2019-02-18] [ ] Ep 14 - Faces [Release date:: 2019-02-04] [ ] Ep 13 - Xin [Release date:: 2019-01-28] [ ] Ep 12 - Aftermath [Release date:: 2019-01-21] [ ] Ep 11 - Quarantine, Part 2 [Release date:: 2019-01-14] [ ] Ep 10 - Quarantine, Part 1 [Release date:: 2018-12-03] [ ] Ep 9 - Empathy [Release date:: 2018-11-26] [ ] Ep 8 - Stories [Release date:: 2018-11-19] [ ] Ep 7 - Hubert [Release date:: 2018-11-12] [ ] Ep 6 - Two-Ply (or Not Two-Ply) [Release date:: 2018-11-05] [ ] Ep 5 - Carrots [Release date:: 2018-10-29] [ ] Ep 4 - Tough Titmouse [Release date:: 2018-10-15] [ ] Ep 3 - 36 Hours [Release date:: 2018-10-08] [ ] Ep 2 - Middle Ground [Release date:: 2018-10-01] [ ] Ep 1 - Hello [Release date:: 2018-09-24]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Good%20Doctor/#season-1","text":"[ ] Ep 18 - More [Release date:: 2018-03-26] [ ] Ep 17 - Smile [Release date:: 2018-03-19] [ ] Ep 16 - Pain [Release date:: 2018-03-12] [ ] Ep 15 - Heartfelt [Release date:: 2018-02-26] [ ] Ep 14 - She [Release date:: 2018-02-05] [ ] Ep 13 - Seven Reasons [Release date:: 2018-01-22] [ ] Ep 12 - Islands, Part 2 [Release date:: 2018-01-15] [ ] Ep 11 - Islands, Part 1 [Release date:: 2018-01-08] [x] Ep 10 - Sacrifice [Release date:: 2017-12-04] [x] Ep 9 - Intangibles [Release date:: 2017-11-27] [x] Ep 8 - Apple [Release date:: 2017-11-20] [x] Ep 7 - 22 Steps [Release date:: 2017-11-13] [x] Ep 6 - Not Fake [Release date:: 2017-10-30] [x] Ep 5 - Point Three Percent [Release date:: 2017-10-23] [x] Ep 4 - Pipes [Release date:: 2017-10-16] [x] Ep 3 - Oliver [Release date:: 2017-10-09] [x] Ep 2 - Mount Rushmore [Release date:: 2017-10-02] [x] Ep 1 - Burnt Food [Release date:: 2017-09-25]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Mandalorian/","text":"Season 3 \u00b6 Season 2 \u00b6 [ ] Ep 8 - Chapter 16: The Rescue [Release date:: 2020-12-18] [ ] Ep 7 - Chapter 15: The Believer [Release date:: 2020-12-11] [ ] Ep 6 - Chapter 14: The Tragedy [Release date:: 2020-12-04] [ ] Ep 5 - Chapter 13: The Jedi [Release date:: 2020-11-27] [ ] Ep 4 - Chapter 12: The Siege [Release date:: 2020-11-20] [ ] Ep 3 - Chapter 11: The Heiress [Release date:: 2020-11-13] [ ] Ep 2 - Chapter 10: The Passenger [Release date:: 2020-11-06] [ ] Ep 1 - Chapter 9: The Marshal [Release date:: 2020-10-30] Season 1 \u00b6 [ ] Ep 8 - Chapter 8: Redemption [Release date:: 2019-12-27] [ ] Ep 7 - Chapter 7: The Reckoning [Release date:: 2019-12-18] [ ] Ep 6 - Chapter 6: The Prisoner [Release date:: 2019-12-13] [ ] Ep 5 - Chapter 5: The Gunslinger [Release date:: 2019-12-06] [ ] Ep 4 - Chapter 4: Sanctuary [Release date:: 2019-11-29] [ ] Ep 3 - Chapter 3: The Sin [Release date:: 2019-11-22] [x] Ep 2 - Chapter 2: The Child [Release date:: 2019-11-15] [x] Ep 1 - Chapter 1: The Mandalorian [Release date:: 2019-11-12]","title":"The Mandalorian"},{"location":"10%20Example%20Data/shows/The%20Mandalorian/#season-3","text":"","title":"Season 3"},{"location":"10%20Example%20Data/shows/The%20Mandalorian/#season-2","text":"[ ] Ep 8 - Chapter 16: The Rescue [Release date:: 2020-12-18] [ ] Ep 7 - Chapter 15: The Believer [Release date:: 2020-12-11] [ ] Ep 6 - Chapter 14: The Tragedy [Release date:: 2020-12-04] [ ] Ep 5 - Chapter 13: The Jedi [Release date:: 2020-11-27] [ ] Ep 4 - Chapter 12: The Siege [Release date:: 2020-11-20] [ ] Ep 3 - Chapter 11: The Heiress [Release date:: 2020-11-13] [ ] Ep 2 - Chapter 10: The Passenger [Release date:: 2020-11-06] [ ] Ep 1 - Chapter 9: The Marshal [Release date:: 2020-10-30]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Mandalorian/#season-1","text":"[ ] Ep 8 - Chapter 8: Redemption [Release date:: 2019-12-27] [ ] Ep 7 - Chapter 7: The Reckoning [Release date:: 2019-12-18] [ ] Ep 6 - Chapter 6: The Prisoner [Release date:: 2019-12-13] [ ] Ep 5 - Chapter 5: The Gunslinger [Release date:: 2019-12-06] [ ] Ep 4 - Chapter 4: Sanctuary [Release date:: 2019-11-29] [ ] Ep 3 - Chapter 3: The Sin [Release date:: 2019-11-22] [x] Ep 2 - Chapter 2: The Child [Release date:: 2019-11-15] [x] Ep 1 - Chapter 1: The Mandalorian [Release date:: 2019-11-12]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Politician/","text":"Season 2 \u00b6 [x] Ep 7 - Election Day [Release date:: 2020-06-19] [x] Ep 6 - What's in the Box? [Release date:: 2020-06-19] [x] Ep 5 - The Voters [Release date:: 2020-06-19] [x] Ep 4 - Hail Mary [Release date:: 2020-06-19] [x] Ep 3 - Cancel Culture [Release date:: 2020-06-19] [x] Ep 2 - Conscious Unthroupling [Release date:: 2020-06-19] [x] Ep 1 - New York State of Mind [Release date:: 2020-06-19] Season 1 \u00b6 [x] Ep 8 - Vienna [Release date:: 2019-09-27] [x] Ep 7 - The Assassination of Payton Hobart: Part 2 [Release date:: 2019-09-27] [x] Ep 6 - The Assassination of Payton Hobart [Release date:: 2019-09-27] [x] Ep 5 - The Voter [Release date:: 2019-09-27] [x] Ep 4 - Gone Girl [Release date:: 2019-09-27] [x] Ep 3 - October Surprise [Release date:: 2019-09-27] [x] Ep 2 - The Harrington Commode [Release date:: 2019-09-27] [x] Ep 1 - Pilot [Release date:: 2019-09-27]","title":"The Politician"},{"location":"10%20Example%20Data/shows/The%20Politician/#season-2","text":"[x] Ep 7 - Election Day [Release date:: 2020-06-19] [x] Ep 6 - What's in the Box? [Release date:: 2020-06-19] [x] Ep 5 - The Voters [Release date:: 2020-06-19] [x] Ep 4 - Hail Mary [Release date:: 2020-06-19] [x] Ep 3 - Cancel Culture [Release date:: 2020-06-19] [x] Ep 2 - Conscious Unthroupling [Release date:: 2020-06-19] [x] Ep 1 - New York State of Mind [Release date:: 2020-06-19]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Politician/#season-1","text":"[x] Ep 8 - Vienna [Release date:: 2019-09-27] [x] Ep 7 - The Assassination of Payton Hobart: Part 2 [Release date:: 2019-09-27] [x] Ep 6 - The Assassination of Payton Hobart [Release date:: 2019-09-27] [x] Ep 5 - The Voter [Release date:: 2019-09-27] [x] Ep 4 - Gone Girl [Release date:: 2019-09-27] [x] Ep 3 - October Surprise [Release date:: 2019-09-27] [x] Ep 2 - The Harrington Commode [Release date:: 2019-09-27] [x] Ep 1 - Pilot [Release date:: 2019-09-27]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Righteous%20Gemstones/","text":"Season 2 \u00b6 [ ] Ep 9 - I Will Tell of All Your Deeds [Release date:: 2022-02-27] [ ] Ep 8 - The Prayer of a Righteous Man [Release date:: 2022-02-20] [ ] Ep 7 - And Infants Shall Rule Over Them [Release date:: 2022-02-13] [ ] Ep 6 - Never Avenge Yourselves, But Leave It to the Wrath of God [Release date:: 2022-02-06] [ ] Ep 5 - Interlude II [Release date:: 2022-01-30] [ ] Ep 4 - As to How They Might Destroy Him [Release date:: 2022-01-23] [ ] Ep 3 - For He Is a Liar and the Father of Lies [Release date:: 2022-01-16] [ ] Ep 2 - After I Leave, Savage Wolves Will Come [Release date:: 2022-01-09] [ ] Ep 1 - I Speak in the Tongues of Men and Angels [Release date:: 2022-01-09] Season 1 \u00b6 [ ] Ep 9 - Better is the End of a Thing Than Its Beginning [Release date:: 2019-10-13] [ ] Ep 8 - But the Righteous Will See Their Fall [Release date:: 2019-10-06] [ ] Ep 7 - And Yet One of You is a Devil [Release date:: 2019-09-29] [ ] Ep 6 - Now the Sons of Eli Were Worthless Men [Release date:: 2019-09-22] [ ] Ep 5 - Interlude [Release date:: 2019-09-15] [ ] Ep 4 - Wicked Lips [Release date:: 2019-09-08] [ ] Ep 3 - They Are Weak, But He Is Strong [Release date:: 2019-09-01] [ ] Ep 2 - Is This the Man Who Made the Earth Tremble [Release date:: 2019-08-25] [ ] Ep 1 - The Righteous Gemstones [Release date:: 2019-08-18]","title":"The Righteous Gemstones"},{"location":"10%20Example%20Data/shows/The%20Righteous%20Gemstones/#season-2","text":"[ ] Ep 9 - I Will Tell of All Your Deeds [Release date:: 2022-02-27] [ ] Ep 8 - The Prayer of a Righteous Man [Release date:: 2022-02-20] [ ] Ep 7 - And Infants Shall Rule Over Them [Release date:: 2022-02-13] [ ] Ep 6 - Never Avenge Yourselves, But Leave It to the Wrath of God [Release date:: 2022-02-06] [ ] Ep 5 - Interlude II [Release date:: 2022-01-30] [ ] Ep 4 - As to How They Might Destroy Him [Release date:: 2022-01-23] [ ] Ep 3 - For He Is a Liar and the Father of Lies [Release date:: 2022-01-16] [ ] Ep 2 - After I Leave, Savage Wolves Will Come [Release date:: 2022-01-09] [ ] Ep 1 - I Speak in the Tongues of Men and Angels [Release date:: 2022-01-09]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Righteous%20Gemstones/#season-1","text":"[ ] Ep 9 - Better is the End of a Thing Than Its Beginning [Release date:: 2019-10-13] [ ] Ep 8 - But the Righteous Will See Their Fall [Release date:: 2019-10-06] [ ] Ep 7 - And Yet One of You is a Devil [Release date:: 2019-09-29] [ ] Ep 6 - Now the Sons of Eli Were Worthless Men [Release date:: 2019-09-22] [ ] Ep 5 - Interlude [Release date:: 2019-09-15] [ ] Ep 4 - Wicked Lips [Release date:: 2019-09-08] [ ] Ep 3 - They Are Weak, But He Is Strong [Release date:: 2019-09-01] [ ] Ep 2 - Is This the Man Who Made the Earth Tremble [Release date:: 2019-08-25] [ ] Ep 1 - The Righteous Gemstones [Release date:: 2019-08-18]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Wire/","text":"Season 5 \u00b6 [ ] Ep 10 - -30- [Release date:: 2008-03-09] [ ] Ep 9 - Late Editions [Release date:: 2008-03-02] [ ] Ep 8 - Clarifications [Release date:: 2008-02-24] [ ] Ep 7 - Took [Release date:: 2008-02-17] [ ] Ep 6 - The Dickensian Aspect [Release date:: 2008-02-10] [ ] Ep 5 - React Quotes [Release date:: 2008-02-03] [ ] Ep 4 - Transitions [Release date:: 2008-01-27] [ ] Ep 3 - Not for Attribution [Release date:: 2008-01-20] [ ] Ep 2 - Unconfirmed Reports [Release date:: 2008-01-13] [ ] Ep 1 - More with Less [Release date:: 2008-01-06] Season 4 \u00b6 [ ] Ep 13 - Final Grades [Release date:: 2006-12-10] [ ] Ep 12 - That's Got His Own [Release date:: 2006-12-03] [ ] Ep 11 - A New Day [Release date:: 2006-11-26] [ ] Ep 10 - Misgivings [Release date:: 2006-11-19] [ ] Ep 9 - Know Your Place [Release date:: 2006-11-12] [ ] Ep 8 - Corner Boys [Release date:: 2006-11-05] [ ] Ep 7 - Unto Others [Release date:: 2006-10-29] [ ] Ep 6 - Margin of Error [Release date:: 2006-10-15] [ ] Ep 5 - Alliances [Release date:: 2006-10-08] [ ] Ep 4 - Refugees [Release date:: 2006-10-01] [ ] Ep 3 - Home Room [Release date:: 2006-09-24] [ ] Ep 2 - Soft Eyes [Release date:: 2006-09-17] [ ] Ep 1 - Boys of Summer [Release date:: 2006-09-10] Season 3 \u00b6 [ ] Ep 12 - Mission Accomplished [Release date:: 2004-12-19] [ ] Ep 11 - Middle Ground [Release date:: 2004-12-12] [ ] Ep 10 - Reformation [Release date:: 2004-11-28] [ ] Ep 9 - Slapstick [Release date:: 2004-11-21] [ ] Ep 8 - Moral Midgetry [Release date:: 2004-11-14] [ ] Ep 7 - Back Burners [Release date:: 2004-11-07] [ ] Ep 6 - Homecoming [Release date:: 2004-10-31] [ ] Ep 5 - Straight and True [Release date:: 2004-10-17] [ ] Ep 4 - Hamsterdam [Release date:: 2004-10-10] [ ] Ep 3 - Dead Soldiers [Release date:: 2004-10-03] [ ] Ep 2 - All Due Respect [Release date:: 2004-09-26] [ ] Ep 1 - Time After Time [Release date:: 2004-09-19] Season 2 \u00b6 [x] Ep 12 - Port in a Storm [Release date:: 2003-08-24] [x] Ep 11 - Bad Dreams [Release date:: 2003-08-17] [x] Ep 10 - Storm Warnings [Release date:: 2003-08-10] [x] Ep 9 - Stray Rounds [Release date:: 2003-08-03] [x] Ep 8 - Duck and Cover [Release date:: 2003-07-27] [x] Ep 7 - Backwash [Release date:: 2003-07-13] [x] Ep 6 - All Prologue [Release date:: 2003-07-06] [x] Ep 5 - Undertow [Release date:: 2003-06-29] [x] Ep 4 - Hard Cases [Release date:: 2003-06-22] [x] Ep 3 - Hot Shots [Release date:: 2003-06-15] [x] Ep 2 - Collateral Damage [Release date:: 2003-06-08] [x] Ep 1 - Ebb Tide [Release date:: 2003-06-01] Season 1 \u00b6 [x] Ep 13 - Sentencing [Release date:: 2002-09-08] [x] Ep 12 - Cleaning Up [Release date:: 2002-09-01] [x] Ep 11 - The Hunt [Release date:: 2002-08-18] [x] Ep 10 - The Cost [Release date:: 2002-08-11] [x] Ep 9 - Game Day [Release date:: 2002-08-04] [x] Ep 8 - Lessons [Release date:: 2002-07-28] [x] Ep 7 - One Arrest [Release date:: 2002-07-21] [x] Ep 6 - The Wire [Release date:: 2002-07-07] [x] Ep 5 - The Pager [Release date:: 2002-06-30] [x] Ep 4 - Old Cases [Release date:: 2002-06-23] [x] Ep 3 - The Buys [Release date:: 2002-06-16] [x] Ep 2 - The Detail [Release date:: 2002-06-09] [x] Ep 1 - The Target [Release date:: 2002-06-02]","title":"The Wire"},{"location":"10%20Example%20Data/shows/The%20Wire/#season-5","text":"[ ] Ep 10 - -30- [Release date:: 2008-03-09] [ ] Ep 9 - Late Editions [Release date:: 2008-03-02] [ ] Ep 8 - Clarifications [Release date:: 2008-02-24] [ ] Ep 7 - Took [Release date:: 2008-02-17] [ ] Ep 6 - The Dickensian Aspect [Release date:: 2008-02-10] [ ] Ep 5 - React Quotes [Release date:: 2008-02-03] [ ] Ep 4 - Transitions [Release date:: 2008-01-27] [ ] Ep 3 - Not for Attribution [Release date:: 2008-01-20] [ ] Ep 2 - Unconfirmed Reports [Release date:: 2008-01-13] [ ] Ep 1 - More with Less [Release date:: 2008-01-06]","title":"Season 5"},{"location":"10%20Example%20Data/shows/The%20Wire/#season-4","text":"[ ] Ep 13 - Final Grades [Release date:: 2006-12-10] [ ] Ep 12 - That's Got His Own [Release date:: 2006-12-03] [ ] Ep 11 - A New Day [Release date:: 2006-11-26] [ ] Ep 10 - Misgivings [Release date:: 2006-11-19] [ ] Ep 9 - Know Your Place [Release date:: 2006-11-12] [ ] Ep 8 - Corner Boys [Release date:: 2006-11-05] [ ] Ep 7 - Unto Others [Release date:: 2006-10-29] [ ] Ep 6 - Margin of Error [Release date:: 2006-10-15] [ ] Ep 5 - Alliances [Release date:: 2006-10-08] [ ] Ep 4 - Refugees [Release date:: 2006-10-01] [ ] Ep 3 - Home Room [Release date:: 2006-09-24] [ ] Ep 2 - Soft Eyes [Release date:: 2006-09-17] [ ] Ep 1 - Boys of Summer [Release date:: 2006-09-10]","title":"Season 4"},{"location":"10%20Example%20Data/shows/The%20Wire/#season-3","text":"[ ] Ep 12 - Mission Accomplished [Release date:: 2004-12-19] [ ] Ep 11 - Middle Ground [Release date:: 2004-12-12] [ ] Ep 10 - Reformation [Release date:: 2004-11-28] [ ] Ep 9 - Slapstick [Release date:: 2004-11-21] [ ] Ep 8 - Moral Midgetry [Release date:: 2004-11-14] [ ] Ep 7 - Back Burners [Release date:: 2004-11-07] [ ] Ep 6 - Homecoming [Release date:: 2004-10-31] [ ] Ep 5 - Straight and True [Release date:: 2004-10-17] [ ] Ep 4 - Hamsterdam [Release date:: 2004-10-10] [ ] Ep 3 - Dead Soldiers [Release date:: 2004-10-03] [ ] Ep 2 - All Due Respect [Release date:: 2004-09-26] [ ] Ep 1 - Time After Time [Release date:: 2004-09-19]","title":"Season 3"},{"location":"10%20Example%20Data/shows/The%20Wire/#season-2","text":"[x] Ep 12 - Port in a Storm [Release date:: 2003-08-24] [x] Ep 11 - Bad Dreams [Release date:: 2003-08-17] [x] Ep 10 - Storm Warnings [Release date:: 2003-08-10] [x] Ep 9 - Stray Rounds [Release date:: 2003-08-03] [x] Ep 8 - Duck and Cover [Release date:: 2003-07-27] [x] Ep 7 - Backwash [Release date:: 2003-07-13] [x] Ep 6 - All Prologue [Release date:: 2003-07-06] [x] Ep 5 - Undertow [Release date:: 2003-06-29] [x] Ep 4 - Hard Cases [Release date:: 2003-06-22] [x] Ep 3 - Hot Shots [Release date:: 2003-06-15] [x] Ep 2 - Collateral Damage [Release date:: 2003-06-08] [x] Ep 1 - Ebb Tide [Release date:: 2003-06-01]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Wire/#season-1","text":"[x] Ep 13 - Sentencing [Release date:: 2002-09-08] [x] Ep 12 - Cleaning Up [Release date:: 2002-09-01] [x] Ep 11 - The Hunt [Release date:: 2002-08-18] [x] Ep 10 - The Cost [Release date:: 2002-08-11] [x] Ep 9 - Game Day [Release date:: 2002-08-04] [x] Ep 8 - Lessons [Release date:: 2002-07-28] [x] Ep 7 - One Arrest [Release date:: 2002-07-21] [x] Ep 6 - The Wire [Release date:: 2002-07-07] [x] Ep 5 - The Pager [Release date:: 2002-06-30] [x] Ep 4 - Old Cases [Release date:: 2002-06-23] [x] Ep 3 - The Buys [Release date:: 2002-06-16] [x] Ep 2 - The Detail [Release date:: 2002-06-09] [x] Ep 1 - The Target [Release date:: 2002-06-02]","title":"Season 1"},{"location":"10%20Example%20Data/shows/The%20Witcher/","text":"Season 2 \u00b6 [ ] Ep 8 - Family [Release date:: 2021-12-17] [ ] Ep 7 - Voleth Meir [Release date:: 2021-12-17] [ ] Ep 6 - Dear Friend... [Release date:: 2021-12-17] [ ] Ep 5 - Turn Your Back [Release date:: 2021-12-17] [ ] Ep 4 - Redanian Intelligence [Release date:: 2021-12-17] [ ] Ep 3 - What Is Lost [Release date:: 2021-12-17] [ ] Ep 2 - Kaer Morhen [Release date:: 2021-12-17] [ ] Ep 1 - A Grain of Truth [Release date:: 2021-12-17] Season 1 \u00b6 [ ] Ep 8 - Much More [Release date:: 2019-12-20] [ ] Ep 7 - Before a Fall [Release date:: 2019-12-20] [ ] Ep 6 - Rare Species [Release date:: 2019-12-20] [x] Ep 5 - Bottled Appetites [Release date:: 2019-12-20] [x] Ep 4 - Of Banquets, Bastards and Burials [Release date:: 2019-12-20] [x] Ep 3 - Betrayer Moon [Release date:: 2019-12-20] [x] Ep 2 - Four Marks [Release date:: 2019-12-20] [x] Ep 1 - The End's Beginning [Release date:: 2019-12-20]","title":"The Witcher"},{"location":"10%20Example%20Data/shows/The%20Witcher/#season-2","text":"[ ] Ep 8 - Family [Release date:: 2021-12-17] [ ] Ep 7 - Voleth Meir [Release date:: 2021-12-17] [ ] Ep 6 - Dear Friend... [Release date:: 2021-12-17] [ ] Ep 5 - Turn Your Back [Release date:: 2021-12-17] [ ] Ep 4 - Redanian Intelligence [Release date:: 2021-12-17] [ ] Ep 3 - What Is Lost [Release date:: 2021-12-17] [ ] Ep 2 - Kaer Morhen [Release date:: 2021-12-17] [ ] Ep 1 - A Grain of Truth [Release date:: 2021-12-17]","title":"Season 2"},{"location":"10%20Example%20Data/shows/The%20Witcher/#season-1","text":"[ ] Ep 8 - Much More [Release date:: 2019-12-20] [ ] Ep 7 - Before a Fall [Release date:: 2019-12-20] [ ] Ep 6 - Rare Species [Release date:: 2019-12-20] [x] Ep 5 - Bottled Appetites [Release date:: 2019-12-20] [x] Ep 4 - Of Banquets, Bastards and Burials [Release date:: 2019-12-20] [x] Ep 3 - Betrayer Moon [Release date:: 2019-12-20] [x] Ep 2 - Four Marks [Release date:: 2019-12-20] [x] Ep 1 - The End's Beginning [Release date:: 2019-12-20]","title":"Season 1"},{"location":"10%20Example%20Data/weeklys/2022-W39/","text":"Weekly To Dos \u00b6 [ ] Grocery shopping [ ] Send in application [ ] House floor cleaning","title":"2022 W39"},{"location":"10%20Example%20Data/weeklys/2022-W39/#weekly-to-dos","text":"[ ] Grocery shopping [ ] Send in application [ ] House floor cleaning","title":"Weekly To Dos"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/","tags":["dv/dataviewjs","dvjs/page","dvjs/el","dvjs/current"],"text":"A progress bar that grows with your progress to track of your writing projects Add a NaNoWriMon to your vault \u00b6 About NaNoWriMons NaNoWriMons are a inofficial, motivational help for participants of NaNoWriMo. Beside tracking your progress it adds a pok\u00e9mon of your choice that grows with your progress. You'll find the original here Basic \u00b6 Local image files To save us from fetching the image pictures from the web all the time, this query assumes that you have them local and inside your configured attachment folder. This has the advantage that your mascot do not need to be a Pok\u00e9mon but can be whatever you choose! wordcount:: 3500 targetcount:: 15000 const pagePath = \"Add a NaNoWriMon to your vault\" // the page path from vault root const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Bulba\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_001.png\", \"Pok\u00e9mon-Icon_002.png\", \"Pok\u00e9mon-Icon_003.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.page(pagePath); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html) Variants \u00b6 Use any amount of images \u00b6 The Basic Variant is set to use three images. With this variant the breakpoints on which percentage the next image will be shown gets calculated automatically depending on the amount of images specified and thus support i.e. Pok\u00e9mon with two evolutions or image series of any number. const pagePath = \"Add a NaNoWriMon to your vault\" // the page path from vault root const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Story Progress\"; // The name of your mon const images = [\"flower_growth/flowergrowth1.png\", \"flower_growth/flowergrowth2.png\",\"flower_growth/flowergrowth3.png\",\"flower_growth/flowergrowth4.png\",\"flower_growth/flowergrowth5.png\",\"flower_growth/flowergrowth6.png\"] // Image file names to use for your mon. // rendering, doesn't need to be adjusted const page = dv.page(pagePath); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (images.length > 1) { const breakpoint = 100 / images.length; let i = 0; let currentBreakpoint = (i + 1) * breakpoint; while (percentage > currentBreakpoint && currentBreakpoint <= 100) { i++; currentBreakpoint = (i + 1) * breakpoint; } image = images[i] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html) Use the current page as source \u00b6 const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Bulba\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_001.png\", \"Pok\u00e9mon-Icon_002.png\", \"Pok\u00e9mon-Icon_003.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.current(); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html) Use the size of the current page as character count \u00b6 Character count instead of word count This variant is based on a character count instead of a word count. We do not have any information about the word count available automatically. Usage of file.size We use file.size here to automatically read the character count of the current page. Please mind that the file.size property is not equals the character count you see in the status bar, but only near it. If you want to have exact numbers, you need to track your progress manually with the Variant above. If you're fine with an estimate, this variant saves you the trouble of updating your current character count. const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Belli\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_069.png\", \"Pok\u00e9mon-Icon_070.png\", \"Pok\u00e9mon-Icon_071.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.current(); let image = images[0]; const percentage = Math.round(page.file.size / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html)","title":"Add a NaNoWriMon to your vault"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#add-a-nanowrimon-to-your-vault","text":"About NaNoWriMons NaNoWriMons are a inofficial, motivational help for participants of NaNoWriMo. Beside tracking your progress it adds a pok\u00e9mon of your choice that grows with your progress. You'll find the original here","title":"Add a NaNoWriMon to your vault"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#basic","text":"Local image files To save us from fetching the image pictures from the web all the time, this query assumes that you have them local and inside your configured attachment folder. This has the advantage that your mascot do not need to be a Pok\u00e9mon but can be whatever you choose! wordcount:: 3500 targetcount:: 15000 const pagePath = \"Add a NaNoWriMon to your vault\" // the page path from vault root const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Bulba\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_001.png\", \"Pok\u00e9mon-Icon_002.png\", \"Pok\u00e9mon-Icon_003.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.page(pagePath); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html)","title":"Basic"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#use-any-amount-of-images","text":"The Basic Variant is set to use three images. With this variant the breakpoints on which percentage the next image will be shown gets calculated automatically depending on the amount of images specified and thus support i.e. Pok\u00e9mon with two evolutions or image series of any number. const pagePath = \"Add a NaNoWriMon to your vault\" // the page path from vault root const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Story Progress\"; // The name of your mon const images = [\"flower_growth/flowergrowth1.png\", \"flower_growth/flowergrowth2.png\",\"flower_growth/flowergrowth3.png\",\"flower_growth/flowergrowth4.png\",\"flower_growth/flowergrowth5.png\",\"flower_growth/flowergrowth6.png\"] // Image file names to use for your mon. // rendering, doesn't need to be adjusted const page = dv.page(pagePath); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (images.length > 1) { const breakpoint = 100 / images.length; let i = 0; let currentBreakpoint = (i + 1) * breakpoint; while (percentage > currentBreakpoint && currentBreakpoint <= 100) { i++; currentBreakpoint = (i + 1) * breakpoint; } image = images[i] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html)","title":"Use any amount of images"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#use-the-current-page-as-source","text":"const inlineWordcount = \"wordcount\"; // the field your wordcount is saved in const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Bulba\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_001.png\", \"Pok\u00e9mon-Icon_002.png\", \"Pok\u00e9mon-Icon_003.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.current(); let image = images[0]; const percentage = Math.round(page[inlineWordcount] / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html)","title":"Use the current page as source"},{"location":"20%20Dataview%20Queries/Add%20a%20NaNoWriMon%20to%20your%20vault/#use-the-size-of-the-current-page-as-character-count","text":"Character count instead of word count This variant is based on a character count instead of a word count. We do not have any information about the word count available automatically. Usage of file.size We use file.size here to automatically read the character count of the current page. Please mind that the file.size property is not equals the character count you see in the status bar, but only near it. If you want to have exact numbers, you need to track your progress manually with the Variant above. If you're fine with an estimate, this variant saves you the trouble of updating your current character count. const inlineTargetCount = \"targetcount\" // the field your target count is saved in const name = \"Belli\"; // The name of your mon const images = [\"Pok\u00e9mon-Icon_069.png\", \"Pok\u00e9mon-Icon_070.png\", \"Pok\u00e9mon-Icon_071.png\"] // Image file names to use for your mon. needs to be three and they need to be saved in your attachments folder // rendering, doesn't need to be adjusted const page = dv.current(); let image = images[0]; const percentage = Math.round(page.file.size / page[inlineTargetCount] * 100); if (percentage > 33 && percentage < 66) { image = images[1] } else if (percentage > 66) { image = images[2] } const attachments = this.app.vault.getConfig(\"attachmentFolderPath\"); const basePath = this.app.vault.adapter.basePath const html = `<div class=\"monwrapper\" style=\"display:flex;align-items:center;\"> <img src=\"${basePath}/${attachments}/${image}\" class=\"mon\" style=\"margin-right:10px;\"></img> <div> <div class=\"monname\">${name}</div> <div class=\"progressbar\"><progress max=\"100\" value=\"${percentage}\"></progress> Lv. ${percentage}</div></div> </div>`; dv.el(\"div\", html)","title":"Use the size of the current page as character count"},{"location":"20%20Dataview%20Queries/Basic%20Calendar%20Queries/","tags":["dv/CALENDAR","dv/FROM","dv/WHERE"],"text":"Showcase basic usage of Calendar Queries Basic Calendar Queries \u00b6 Errornous Pagepreview as of v0.5.43 When hovering over a dot, you get a page preview of this note. But beware: You'll see the same preview for all pages. Basic \u00b6 Usage of Calendar Query Type The Calendar Query Type needs a valid date information as a field in order to display notes. You always need to give this information. If the calendar query encounters a file you've queried that does not have your defined \"date source\" - or if it's invalid - the Calendar won't render at all. You need to go to August 2022 or Jan/Feb 2022 to see results Query from a folder CALENDAR file.day FROM \"10 Example Data/dailys\" Query from a tag CALENDAR file.day FROM #daily Query from a tag/folder combination CALENDAR file.day FROM \"10 Example Data/dailys\" OR #journal Query for all pages, everywhere Query for \"all\" Unlike other Query Types, Calendar always need the datefield information. The most minimalistic Query for a Calendar looks like CALENDAR <datefield> - but then all of your files need to have a valid date inside this specific field! CALENDAR file.ctime Variants \u00b6 Make sure the date information is available \u00b6 CALENDAR due FROM \"10 Example Data/assignments\" WHERE due Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available CALENDAR queries in the vault!","title":"Basic Calendar Queries"},{"location":"20%20Dataview%20Queries/Basic%20Calendar%20Queries/#basic-calendar-queries","text":"Errornous Pagepreview as of v0.5.43 When hovering over a dot, you get a page preview of this note. But beware: You'll see the same preview for all pages.","title":"Basic Calendar Queries"},{"location":"20%20Dataview%20Queries/Basic%20Calendar%20Queries/#basic","text":"Usage of Calendar Query Type The Calendar Query Type needs a valid date information as a field in order to display notes. You always need to give this information. If the calendar query encounters a file you've queried that does not have your defined \"date source\" - or if it's invalid - the Calendar won't render at all. You need to go to August 2022 or Jan/Feb 2022 to see results Query from a folder CALENDAR file.day FROM \"10 Example Data/dailys\" Query from a tag CALENDAR file.day FROM #daily Query from a tag/folder combination CALENDAR file.day FROM \"10 Example Data/dailys\" OR #journal Query for all pages, everywhere Query for \"all\" Unlike other Query Types, Calendar always need the datefield information. The most minimalistic Query for a Calendar looks like CALENDAR <datefield> - but then all of your files need to have a valid date inside this specific field! CALENDAR file.ctime","title":"Basic"},{"location":"20%20Dataview%20Queries/Basic%20Calendar%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Basic%20Calendar%20Queries/#make-sure-the-date-information-is-available","text":"CALENDAR due FROM \"10 Example Data/assignments\" WHERE due Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available CALENDAR queries in the vault!","title":"Make sure the date information is available"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/","tags":["dv/inlinejs","dv/inline","dv/LIST","dv/WHERE"],"text":"Showcase basic syntax of DQL and JS Inline Queries Basic Inline Queries \u00b6 Basic \u00b6 DQL \u00b6 Inline Queries: Use cases and Limitations Unlike a normal dataview block with three backticks, dataview inline queries are, like the name suggests, for the inline usage in text, headlines or similar to dynamically display values in the flow of your note instead of requiring a isolated block for them. Inline Queries always yield exactly one value . Given that, it is not possible to perform page collecting operations with them - Query types cannot be used inside Inline Queries . Instead, they use expressions . Documentation This is an inline query - view in source mode to see the code: = this.file.name DataviewJS \u00b6 Dataview JS Inline Queries DataviewJS Inline Queries in the contrary have everything available that a dataviewjs block can use, making them immensively powerful. They need to be explicitly activated in the Dataviews Options. Documentation This is an inline query - view in source mode to see the code: $= dv.current().file.name Variants \u00b6 Showing file properties and meta data \u00b6 Created: = this.file.ctime Last Edited: = this.file.mtime Description of the page: = this.description Displaying a multi value field: = this.multivalue Use dataview functions \u00b6 Dataview functions are available in inline queries. Lets better trim this description down to \" = truncate(this.description, 20, \"...\") \" - it's enough to see the start. Check if important meta data is set description: = choice(contains(this, \"description\"), \"Set\", \"Missing!\") topics: = choice(contains(this, \"topics\"), \"Set\", \"Missing!\") someOtherField: = choice(contains(this, \"someOtherField\"), \"Set\", \"Missing!\") Access meta data of other files \u00b6 While you cannot write Queries in the traditional sense, you can still access concrete links and their properties. The \" = [Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.link \" Use Case exists since = [Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.ctime and contains = length([Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.outlinks) outlinks - = choice(length(filter([Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.outlinks, (x) => meta(x).path = this.file.path)), \"including one to this file\", \"but none to this file\") . Formatting inline queries \u00b6 Inline Queries are treaten as text You can format an inline query like you'd format normal text. Today is = date(today) , and it's = dateformat(date(now), \"HH:MM\") . This file title is \" = this.file.name \" \u00b6 Last edited: = this.file.mtime Using a inline query as a meta data value \u00b6 Calculate a meta data field You can assign inline queries to a meta data field to use this calculation on other places, i.e. in a regular dataview query. existsSince:: = date(now) - this.file.ctime LIST existsSince WHERE existsSince Inline DataviewJS With the help of Inline DataviewJS queries, you can even assign complete queries to a meta data field. This is a rather advanced technique, though. allAuthorsInVault:: $= dv.pages('\"10 Example Data/books\"').groupBy(p => p.author).key LIST allAuthorsInVault WHERE allAuthorsInVault","title":"Basic Inline Queries"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#basic-inline-queries","text":"","title":"Basic Inline Queries"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#basic","text":"","title":"Basic"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#dql","text":"Inline Queries: Use cases and Limitations Unlike a normal dataview block with three backticks, dataview inline queries are, like the name suggests, for the inline usage in text, headlines or similar to dynamically display values in the flow of your note instead of requiring a isolated block for them. Inline Queries always yield exactly one value . Given that, it is not possible to perform page collecting operations with them - Query types cannot be used inside Inline Queries . Instead, they use expressions . Documentation This is an inline query - view in source mode to see the code: = this.file.name","title":"DQL"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#dataviewjs","text":"Dataview JS Inline Queries DataviewJS Inline Queries in the contrary have everything available that a dataviewjs block can use, making them immensively powerful. They need to be explicitly activated in the Dataviews Options. Documentation This is an inline query - view in source mode to see the code: $= dv.current().file.name","title":"DataviewJS"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#showing-file-properties-and-meta-data","text":"Created: = this.file.ctime Last Edited: = this.file.mtime Description of the page: = this.description Displaying a multi value field: = this.multivalue","title":"Showing file properties and meta data"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#use-dataview-functions","text":"Dataview functions are available in inline queries. Lets better trim this description down to \" = truncate(this.description, 20, \"...\") \" - it's enough to see the start. Check if important meta data is set description: = choice(contains(this, \"description\"), \"Set\", \"Missing!\") topics: = choice(contains(this, \"topics\"), \"Set\", \"Missing!\") someOtherField: = choice(contains(this, \"someOtherField\"), \"Set\", \"Missing!\")","title":"Use dataview functions"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#access-meta-data-of-other-files","text":"While you cannot write Queries in the traditional sense, you can still access concrete links and their properties. The \" = [Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.link \" Use Case exists since = [Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.ctime and contains = length([Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.outlinks) outlinks - = choice(length(filter([Learn the Basics](<../30 Dataview Resources/33 Use Cases/Learn the Basics.md>).file.outlinks, (x) => meta(x).path = this.file.path)), \"including one to this file\", \"but none to this file\") .","title":"Access meta data of other files"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#formatting-inline-queries","text":"Inline Queries are treaten as text You can format an inline query like you'd format normal text. Today is = date(today) , and it's = dateformat(date(now), \"HH:MM\") .","title":"Formatting inline queries"},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#this-file-title-is-thisfilename","text":"Last edited: = this.file.mtime","title":"This file title is \"= this.file.name\""},{"location":"20%20Dataview%20Queries/Basic%20Inline%20Queries/#using-a-inline-query-as-a-meta-data-value","text":"Calculate a meta data field You can assign inline queries to a meta data field to use this calculation on other places, i.e. in a regular dataview query. existsSince:: = date(now) - this.file.ctime LIST existsSince WHERE existsSince Inline DataviewJS With the help of Inline DataviewJS queries, you can even assign complete queries to a meta data field. This is a rather advanced technique, though. allAuthorsInVault:: $= dv.pages('\"10 Example Data/books\"').groupBy(p => p.author).key LIST allAuthorsInVault WHERE allAuthorsInVault","title":"Using a inline query as a meta data value"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/","tags":["dv/list","dv/from","dv/where","dv/sort","dv/groupby"],"text":"Showcase basic syntax of LIST queries Basic List Queries \u00b6 Basic \u00b6 List pages from a folder LIST FROM \"10 Example Data/games\" List pages from a tag LIST FROM #type/books Combine multiple tags LIST FROM #dvjs/el OR #dv/min Combine multiple folders LIST FROM \"10 Example Data/books\" OR \"10 Example Data/games\" Combine tags and folders LIST FROM \"10 Example Data/games\" AND #genre/action List all pages Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! Please note: There needs to be a space behind LIST to see results! LIST Variants \u00b6 List pages from a certain author \u00b6 LIST FROM #type/books WHERE author = \"Conrad C\" List pages and show a meta data field \u00b6 Only one additional information For lists, you can only add one additional output. For more, you need to use a table or create a custom output . LIST author FROM #type/books List meta data values instead of the pages \u00b6 i.e. list source links of your recipes: LIST WITHOUT ID source FROM \"10 Example Data/food\" WHERE source Group list elements \u00b6 LIST rows.file.link FROM \"10 Example Data/books\" GROUP BY author Sort list elements \u00b6 LIST author FROM \"10 Example Data/books\" SORT author Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available LIST queries in the vault!","title":"Basic List Queries"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#basic-list-queries","text":"","title":"Basic List Queries"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#basic","text":"List pages from a folder LIST FROM \"10 Example Data/games\" List pages from a tag LIST FROM #type/books Combine multiple tags LIST FROM #dvjs/el OR #dv/min Combine multiple folders LIST FROM \"10 Example Data/books\" OR \"10 Example Data/games\" Combine tags and folders LIST FROM \"10 Example Data/games\" AND #genre/action List all pages Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! Please note: There needs to be a space behind LIST to see results! LIST","title":"Basic"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#list-pages-from-a-certain-author","text":"LIST FROM #type/books WHERE author = \"Conrad C\"","title":"List pages from a certain author"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#list-pages-and-show-a-meta-data-field","text":"Only one additional information For lists, you can only add one additional output. For more, you need to use a table or create a custom output . LIST author FROM #type/books","title":"List pages and show a meta data field"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#list-meta-data-values-instead-of-the-pages","text":"i.e. list source links of your recipes: LIST WITHOUT ID source FROM \"10 Example Data/food\" WHERE source","title":"List meta data values instead of the pages"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#group-list-elements","text":"LIST rows.file.link FROM \"10 Example Data/books\" GROUP BY author","title":"Group list elements"},{"location":"20%20Dataview%20Queries/Basic%20List%20Queries/#sort-list-elements","text":"LIST author FROM \"10 Example Data/books\" SORT author Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available LIST queries in the vault!","title":"Sort list elements"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/","tags":["dv/table","dv/from","dv/where","dv/sort","dv/groupby"],"text":"Showcase basic syntax of TABLE queries Basic Table Queries \u00b6 Basic \u00b6 Show pages from a folder as table TABLE FROM \"10 Example Data/games\" Show pages from a tag as table TABLE FROM #type/books Combine multiple tags TABLE FROM #dvjs/el OR #dv/min Combine multiple folders TABLE FROM \"10 Example Data/books\" OR \"10 Example Data/games\" Combine tags and folders TABLE FROM \"10 Example Data/games\" AND #genre/action List all pages Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! Please note: There needs to be a space behind TABLE to see results! TABLE Variants \u00b6 Show pages from a certain author \u00b6 TABLE FROM #type/books WHERE author = \"Conrad C\" Show pages and additional information \u00b6 TABLE author, pagesRead, totalPages FROM #type/books Show only meta data information and no file link \u00b6 TABLE WITHOUT ID source, time, ingredients FROM \"10 Example Data/food\" WHERE source Group list elements \u00b6 Without additional columns TABLE FROM \"10 Example Data/books\" GROUP BY author With additional columns TABLE rows.file.link, rows.pagesRead FROM \"10 Example Data/books\" GROUP BY author Customize table headers \u00b6 Of additional columns TABLE contacts.phone AS \"Phone Number\", contacts.mail AS \"E-Mail\" from \"10 Example Data/people\" Of the first (link/group) header without grouping TABLE WITHOUT ID file.link AS \"Game\", developer, price FROM \"10 Example Data/games\" Of the first (link/group) header with grouping TABLE WITHOUT ID key AS \"Author\", rows.file.link AS \"Books\" FROM \"10 Example Data/books\" GROUP BY author Sort tables \u00b6 TABLE author FROM \"10 Example Data/books\" SORT author Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available TABLE queries in the vault!","title":"Basic Table Queries"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#basic-table-queries","text":"","title":"Basic Table Queries"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#basic","text":"Show pages from a folder as table TABLE FROM \"10 Example Data/games\" Show pages from a tag as table TABLE FROM #type/books Combine multiple tags TABLE FROM #dvjs/el OR #dv/min Combine multiple folders TABLE FROM \"10 Example Data/books\" OR \"10 Example Data/games\" Combine tags and folders TABLE FROM \"10 Example Data/games\" AND #genre/action List all pages Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! Please note: There needs to be a space behind TABLE to see results! TABLE","title":"Basic"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#show-pages-from-a-certain-author","text":"TABLE FROM #type/books WHERE author = \"Conrad C\"","title":"Show pages from a certain author"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#show-pages-and-additional-information","text":"TABLE author, pagesRead, totalPages FROM #type/books","title":"Show pages and additional information"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#show-only-meta-data-information-and-no-file-link","text":"TABLE WITHOUT ID source, time, ingredients FROM \"10 Example Data/food\" WHERE source","title":"Show only meta data information and no file link"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#group-list-elements","text":"Without additional columns TABLE FROM \"10 Example Data/books\" GROUP BY author With additional columns TABLE rows.file.link, rows.pagesRead FROM \"10 Example Data/books\" GROUP BY author","title":"Group list elements"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#customize-table-headers","text":"Of additional columns TABLE contacts.phone AS \"Phone Number\", contacts.mail AS \"E-Mail\" from \"10 Example Data/people\" Of the first (link/group) header without grouping TABLE WITHOUT ID file.link AS \"Game\", developer, price FROM \"10 Example Data/games\" Of the first (link/group) header with grouping TABLE WITHOUT ID key AS \"Author\", rows.file.link AS \"Books\" FROM \"10 Example Data/books\" GROUP BY author","title":"Customize table headers"},{"location":"20%20Dataview%20Queries/Basic%20Table%20Queries/#sort-tables","text":"TABLE author FROM \"10 Example Data/books\" SORT author Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available TABLE queries in the vault!","title":"Sort tables"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/","tags":["dv/TASK","dv/FROM","dv/WHERE","dv/groupby","dv/contains","dv/SORT"],"text":"Showcase basic syntax of TASK Queries Basic Task Queries \u00b6 Basic \u00b6 Relationship between Tasks and Pages The TASK query type is special, because unlike all other query types ( LIST , TABLE , CALENDAR ) TASK does not operate on page level but on task level . If a page contains three tasks, you'll get back three results instead of one, like you'd get with any other query type. This allows us to filter for task specific properties, like included tags, meta data or text. Be aware though, that every task inherits all properties from the page it's in . Read more about how task queries behave and what for information you have available . List tasks from a folder TASK FROM \"10 Example Data/assignments\" List tasks from a tag TASK FROM #next Combine multiple tags TASK FROM #clientC OR #clientB Combine multiple folders TASK FROM \"10 Example Data/assignments\" OR \"10 Example Data/games\" Combine tags and folders TASK FROM \"10 Example Data/assignments\" AND #later List all tasks, everywhere Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! TASK Variants \u00b6 List only open tasks \u00b6 TASK FROM \"10 Example Data/assignments\" WHERE !completed Group tasks by file \u00b6 TASK FROM \"10 Example Data/assignments\" GROUP BY file.link Show tasks that have a certain tag \u00b6 TASK FROM \"10 Example Data/assignments\" WHERE contains(tags, \"#later\") Show tasks with a due date (a task-located meta data field) \u00b6 Meta data on task level You can add meta data on tasks via the inline meta data syntax, i.e. [duedate:: 2022-09-09] - or [contact:: Petro] . Just be sure to wrap it into square brackets, so that data view can interpret it correctly. TASK FROM \"10 Example Data/assignments\" WHERE duedate Sort task after completion date \u00b6 Only possible with designated meta data A task does not know its completion date out of the box. In order to query for it, you need to add it to the task as an inline meta data field. Dataview provides an automatism for this: In the dataview options, at the very bottom, activate \"Automatic Task Completion Date\" to automatically append a completion date when checking a task. { width=\"500\" } \u26a0 Attention! Dataview can only add this information if you check a task inside a dataview output - meaning inside a TASK Query! TASK FROM \"10 Example Data/assignments\" WHERE completed SORT completion Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available TASK queries in the vault!","title":"Basic Task Queries"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#basic-task-queries","text":"","title":"Basic Task Queries"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#basic","text":"Relationship between Tasks and Pages The TASK query type is special, because unlike all other query types ( LIST , TABLE , CALENDAR ) TASK does not operate on page level but on task level . If a page contains three tasks, you'll get back three results instead of one, like you'd get with any other query type. This allows us to filter for task specific properties, like included tags, meta data or text. Be aware though, that every task inherits all properties from the page it's in . Read more about how task queries behave and what for information you have available . List tasks from a folder TASK FROM \"10 Example Data/assignments\" List tasks from a tag TASK FROM #next Combine multiple tags TASK FROM #clientC OR #clientB Combine multiple folders TASK FROM \"10 Example Data/assignments\" OR \"10 Example Data/games\" Combine tags and folders TASK FROM \"10 Example Data/assignments\" AND #later List all tasks, everywhere Add dataview to code block The output of this is pretty long. If you want to see it, add dataview to the code block - like on the examples above! TASK","title":"Basic"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#list-only-open-tasks","text":"TASK FROM \"10 Example Data/assignments\" WHERE !completed","title":"List only open tasks"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#group-tasks-by-file","text":"TASK FROM \"10 Example Data/assignments\" GROUP BY file.link","title":"Group tasks by file"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#show-tasks-that-have-a-certain-tag","text":"TASK FROM \"10 Example Data/assignments\" WHERE contains(tags, \"#later\")","title":"Show tasks that have a certain tag"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#show-tasks-with-a-due-date-a-task-located-meta-data-field","text":"Meta data on task level You can add meta data on tasks via the inline meta data syntax, i.e. [duedate:: 2022-09-09] - or [contact:: Petro] . Just be sure to wrap it into square brackets, so that data view can interpret it correctly. TASK FROM \"10 Example Data/assignments\" WHERE duedate","title":"Show tasks with a due date (a task-located meta data field)"},{"location":"20%20Dataview%20Queries/Basic%20Task%20Queries/#sort-task-after-completion-date","text":"Only possible with designated meta data A task does not know its completion date out of the box. In order to query for it, you need to add it to the task as an inline meta data field. Dataview provides an automatism for this: In the dataview options, at the very bottom, activate \"Automatic Task Completion Date\" to automatically append a completion date when checking a task. { width=\"500\" } \u26a0 Attention! Dataview can only add this information if you check a task inside a dataview output - meaning inside a TASK Query! TASK FROM \"10 Example Data/assignments\" WHERE completed SORT completion Advanced usage Do you want to see more advanced examples? Head over to the Query Type Overview to see all available TASK queries in the vault!","title":"Sort task after completion date"},{"location":"20%20Dataview%20Queries/Calculate%20Sum%20of%20working%20hours%20for%20a%20project/","tags":["dv/dataviewjs","dvjs/pages","dvjs/mutate","dvjs/table","dvjs/map","dvjs/luxon","dvjs/sort"],"text":"Calculate the sum of multiple times (hh:mm), i.e. the sum of hours one has spent on a project Calculate Sum of working hours for a project \u00b6 Basic \u00b6 const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p[\"working hours\"]) .mutate(p => p.workHourSum = sumUpWorkHours(p[\"working hours\"])) dv.table([\"Project\", \"Working Hours\", \"Sum Working Hours\"], projects.map(p => [p.file.link, p[\"working hours\"], p.workHourSum])) function sumUpWorkHours(workingHours) { const durations = workingHours .split(\",\") .map(h => dv.luxon.Duration.fromISOTime(h.trim())); const sum = durations.reduce((acc, curr) => acc + curr, 0) return dv.luxon.Duration.fromMillis(sum) } Variants \u00b6 Format sum output and output more metadata \u00b6 Possible formats Have a look at the luxon documentation for a reference of possible formats const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p[\"working hours\"]) .mutate(p => p.workHourSum = sumUpWorkHours(p[\"working hours\"])) .sort(p => p.status, \"desc\") dv.table([\"Project\", \"ID\", \"Status\", \"Tags\", \"Sum\"], projects.map(p => [p.file.link, p[\"Project ID\"], p.status, p[\"tags\"], p.workHourSum])) function sumUpWorkHours(workingHours) { const durations = workingHours .split(\",\") .map(h => dv.luxon.Duration.fromISOTime(h.trim())); const sum = durations.reduce((acc, curr) => acc + curr, 0) return dv.luxon.Duration.fromMillis(sum).toFormat(\"hh'h' mm'm'\") }","title":"Calculate Sum of working hours for a project"},{"location":"20%20Dataview%20Queries/Calculate%20Sum%20of%20working%20hours%20for%20a%20project/#calculate-sum-of-working-hours-for-a-project","text":"","title":"Calculate Sum of working hours for a project"},{"location":"20%20Dataview%20Queries/Calculate%20Sum%20of%20working%20hours%20for%20a%20project/#basic","text":"const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p[\"working hours\"]) .mutate(p => p.workHourSum = sumUpWorkHours(p[\"working hours\"])) dv.table([\"Project\", \"Working Hours\", \"Sum Working Hours\"], projects.map(p => [p.file.link, p[\"working hours\"], p.workHourSum])) function sumUpWorkHours(workingHours) { const durations = workingHours .split(\",\") .map(h => dv.luxon.Duration.fromISOTime(h.trim())); const sum = durations.reduce((acc, curr) => acc + curr, 0) return dv.luxon.Duration.fromMillis(sum) }","title":"Basic"},{"location":"20%20Dataview%20Queries/Calculate%20Sum%20of%20working%20hours%20for%20a%20project/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Calculate%20Sum%20of%20working%20hours%20for%20a%20project/#format-sum-output-and-output-more-metadata","text":"Possible formats Have a look at the luxon documentation for a reference of possible formats const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p[\"working hours\"]) .mutate(p => p.workHourSum = sumUpWorkHours(p[\"working hours\"])) .sort(p => p.status, \"desc\") dv.table([\"Project\", \"ID\", \"Status\", \"Tags\", \"Sum\"], projects.map(p => [p.file.link, p[\"Project ID\"], p.status, p[\"tags\"], p.workHourSum])) function sumUpWorkHours(workingHours) { const durations = workingHours .split(\",\") .map(h => dv.luxon.Duration.fromISOTime(h.trim())); const sum = durations.reduce((acc, curr) => acc + curr, 0) return dv.luxon.Duration.fromMillis(sum).toFormat(\"hh'h' mm'm'\") }","title":"Format sum output and output more metadata"},{"location":"20%20Dataview%20Queries/Calculate%20cycle%20lengths%20and%20durations/","tags":["dv/dataviewjs","dvjs/pages","dvjs/mutate","dvjs/duration","dvjs/luxon","dvjs/sort","dvjs/array","dvjs/table"],"text":"Calculate cycle times and durations based on meta data value in your dailies, i.e. how long your maniac phase or migraine holds Calculate cycle lengths and durations \u00b6 Basic \u00b6 const metadatafield = \"\" let startDates = dv.pages('\"10 Example Data/dailys\"').mutate(p => p.previousDay = dv.page(dv.luxon.DateTime.fromMillis(p.file.day - dv.duration(\"1d\")).toFormat('yyyy-MM-dd'))).sort(p => p.file.name) const endDates = dv.array(dv.clone(startDates)[0]).where(p => !checkCriteria(p) && checkCriteria(p.previousDay)) startDates = startDates.where(p => checkCriteria(p) && !checkCriteria(p.previousDay)) const cycles = []; for (let i = 0; i < endDates.length; i++) { cycles.push([ startDates[i].file.link, endDates[i].file.link, dv.luxon.Duration.fromMillis(endDates[i].file.day - startDates[i].file.day), i === 0 ? '' : dv.luxon.Duration.fromMillis(startDates[i].file.day - endDates[i-1]?.file.day), i === 0 ? '' : dv.luxon.Duration.fromMillis(startDates[i].file.day - startDates[i-1]?.file.day).toFormat(\"d 'Days'\"), ]) } dv.table([\"Start\", \"End\", \"Duration\", \"Gap\", \"Cycletime\"], cycles) function checkCriteria(p) { return p && p.wellbeing && (p.wellbeing[\"pain-type\"] || []).contains(\"head\") }","title":"Calculate cycle lengths and durations"},{"location":"20%20Dataview%20Queries/Calculate%20cycle%20lengths%20and%20durations/#calculate-cycle-lengths-and-durations","text":"","title":"Calculate cycle lengths and durations"},{"location":"20%20Dataview%20Queries/Calculate%20cycle%20lengths%20and%20durations/#basic","text":"const metadatafield = \"\" let startDates = dv.pages('\"10 Example Data/dailys\"').mutate(p => p.previousDay = dv.page(dv.luxon.DateTime.fromMillis(p.file.day - dv.duration(\"1d\")).toFormat('yyyy-MM-dd'))).sort(p => p.file.name) const endDates = dv.array(dv.clone(startDates)[0]).where(p => !checkCriteria(p) && checkCriteria(p.previousDay)) startDates = startDates.where(p => checkCriteria(p) && !checkCriteria(p.previousDay)) const cycles = []; for (let i = 0; i < endDates.length; i++) { cycles.push([ startDates[i].file.link, endDates[i].file.link, dv.luxon.Duration.fromMillis(endDates[i].file.day - startDates[i].file.day), i === 0 ? '' : dv.luxon.Duration.fromMillis(startDates[i].file.day - endDates[i-1]?.file.day), i === 0 ? '' : dv.luxon.Duration.fromMillis(startDates[i].file.day - startDates[i-1]?.file.day).toFormat(\"d 'Days'\"), ]) } dv.table([\"Start\", \"End\", \"Duration\", \"Gap\", \"Cycletime\"], cycles) function checkCriteria(p) { return p && p.wellbeing && (p.wellbeing[\"pain-type\"] || []).contains(\"head\") }","title":"Basic"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/","tags":["dv/dataviewjs","dv/table","dv/from","dv/limit","dv/flatten","dvjs/pages","dvjs/limit","dvjs/mutate","dvjs/table","dvjs/map","dvjs/luxon"],"text":"Calculate time spans with a start and end time, i.e. waking phase by wake up and go to sleep times Calculate waking phase with wake up and go to sleep times \u00b6 Basic \u00b6 As DataviewJS solution \u00b6 const dailies = dv.pages('\"10 Example Data/dailys\"') .limit(10) .mutate(p => p.wakingPhase = calculateWakingPhase(p[\"wake-up\"], p[\"go-to-sleep\"])) dv.table([\"File\", \"wake-up\", \"go-to-sleep\", \"Waking Phase\"], dailies.map(p => [p.file.link, p[\"wake-up\"], p[\"go-to-sleep\"], p.wakingPhase])) function calculateWakingPhase(wakeUp, goToSleep) { const isValid = isValidTime(wakeUp) && isValidTime(goToSleep) if (!isValid) return '_\u26a0 Input times not valid_' wakeUp = dv.luxon.Duration.fromISOTime(wakeUp); goToSleep = dv.luxon.Duration.fromISOTime(goToSleep); return dv.luxon.Duration.fromMillis(goToSleep - wakeUp) } function isValidTime(time) { const dur = dv.luxon.Duration.fromISOTime(time); return !dur.invalid; } As DQL (dataview) solution \u00b6 Dates with invalid times will be skipped and file.day (or another metadata with the files date) must be set TABLE wake-up, go-to-sleep, wakeTime FROM \"10 Example Data/dailys\" LIMIT 10 FLATTEN dateformat(file.day, \"yyyy-MM-dd\") as dt FLATTEN date(dt + \"T\" + go-to-sleep) - date(dt + \"T\" + wake-up) as wakeTime Variants \u00b6 Calculate Sleeping time instead Wake time \u00b6 TABLE go-to-sleep, wake-up, sleep FROM \"10 Example Data/dailys\" LIMIT 10 FLATTEN dateformat(file.day, \"yyyy-MM-dd\") as dt FLATTEN (date(dt + \"T\" + wake-up) + dur(\"1d\")) - date(dt + \"T\" + go-to-sleep) as sleep Variants \u00b6 Fix up missing leading zeros & sleep times after midnight \u00b6 const Duration = dv.luxon.Duration; const dailies = dv.pages('\"10 Example Data/dailys\"') .limit(10) .mutate(p => p.wakingPhase = calculateWakingPhase(p[\"wake-up\"], p[\"go-to-sleep\"])) dv.table([\"File\", \"wake-up\", \"go-to-sleep\", \"Waking Phase\"], dailies.map(p => [p.file.link, p[\"wake-up\"], p[\"go-to-sleep\"], p.wakingPhase])) function calculateWakingPhase(wakeUp, goToSleep) { wakeUp = tryToFixUp(wakeUp); goToSleep = tryToFixUp(goToSleep); const isValid = isValidTime(wakeUp) && isValidTime(goToSleep) if (!isValid) return '_\u26a0 Input times not valid_' wakeUp = Duration.fromISOTime(wakeUp); goToSleep = Duration.fromISOTime(goToSleep); if (goToSleep < wakeUp) { goToSleep = goToSleep.plus(Duration.fromISO(\"P1D\")) } return Duration.fromMillis(goToSleep - wakeUp) } function tryToFixUp(time) { if (!time) return time; if (time.match(/^[0-9]{3}/) || time.match(/^[0-9]{1}:[0-9]{2}/)) { return \"0\" + time; } return time; } function isValidTime(time) { return !Duration.fromISOTime(time).invalid; } Calculation with 00h00m format \u00b6 If your metadata has the format 00h00m , i.e. 15h55m , calculations get easier. t1:: 11h45m t2:: 15h55m TABLE WITHOUT ID t1, t2, duration WHERE file.name = this.file.name FLATTEN t2 - t1 as duration As Inline statement for current file \u00b6 date:: 2022-06-06 wake-up:: 07:35 go-to-sleep:: 23:50 Wake time: = date(dateformat(this.file.day, \"yyyy-MM-dd\") + \"T\" + this.go-to-sleep) - (date(dateformat(this.file.day, \"yyyy-MM-dd\") + \"T\" + this.wake-up))","title":"Calculate waking phase with wake up and go to sleep times"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#calculate-waking-phase-with-wake-up-and-go-to-sleep-times","text":"","title":"Calculate waking phase with wake up and go to sleep times"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#basic","text":"","title":"Basic"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#as-dataviewjs-solution","text":"const dailies = dv.pages('\"10 Example Data/dailys\"') .limit(10) .mutate(p => p.wakingPhase = calculateWakingPhase(p[\"wake-up\"], p[\"go-to-sleep\"])) dv.table([\"File\", \"wake-up\", \"go-to-sleep\", \"Waking Phase\"], dailies.map(p => [p.file.link, p[\"wake-up\"], p[\"go-to-sleep\"], p.wakingPhase])) function calculateWakingPhase(wakeUp, goToSleep) { const isValid = isValidTime(wakeUp) && isValidTime(goToSleep) if (!isValid) return '_\u26a0 Input times not valid_' wakeUp = dv.luxon.Duration.fromISOTime(wakeUp); goToSleep = dv.luxon.Duration.fromISOTime(goToSleep); return dv.luxon.Duration.fromMillis(goToSleep - wakeUp) } function isValidTime(time) { const dur = dv.luxon.Duration.fromISOTime(time); return !dur.invalid; }","title":"As DataviewJS solution"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#as-dql-dataview-solution","text":"Dates with invalid times will be skipped and file.day (or another metadata with the files date) must be set TABLE wake-up, go-to-sleep, wakeTime FROM \"10 Example Data/dailys\" LIMIT 10 FLATTEN dateformat(file.day, \"yyyy-MM-dd\") as dt FLATTEN date(dt + \"T\" + go-to-sleep) - date(dt + \"T\" + wake-up) as wakeTime","title":"As DQL (dataview) solution"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#calculate-sleeping-time-instead-wake-time","text":"TABLE go-to-sleep, wake-up, sleep FROM \"10 Example Data/dailys\" LIMIT 10 FLATTEN dateformat(file.day, \"yyyy-MM-dd\") as dt FLATTEN (date(dt + \"T\" + wake-up) + dur(\"1d\")) - date(dt + \"T\" + go-to-sleep) as sleep","title":"Calculate Sleeping time instead Wake time"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#variants_1","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#fix-up-missing-leading-zeros-sleep-times-after-midnight","text":"const Duration = dv.luxon.Duration; const dailies = dv.pages('\"10 Example Data/dailys\"') .limit(10) .mutate(p => p.wakingPhase = calculateWakingPhase(p[\"wake-up\"], p[\"go-to-sleep\"])) dv.table([\"File\", \"wake-up\", \"go-to-sleep\", \"Waking Phase\"], dailies.map(p => [p.file.link, p[\"wake-up\"], p[\"go-to-sleep\"], p.wakingPhase])) function calculateWakingPhase(wakeUp, goToSleep) { wakeUp = tryToFixUp(wakeUp); goToSleep = tryToFixUp(goToSleep); const isValid = isValidTime(wakeUp) && isValidTime(goToSleep) if (!isValid) return '_\u26a0 Input times not valid_' wakeUp = Duration.fromISOTime(wakeUp); goToSleep = Duration.fromISOTime(goToSleep); if (goToSleep < wakeUp) { goToSleep = goToSleep.plus(Duration.fromISO(\"P1D\")) } return Duration.fromMillis(goToSleep - wakeUp) } function tryToFixUp(time) { if (!time) return time; if (time.match(/^[0-9]{3}/) || time.match(/^[0-9]{1}:[0-9]{2}/)) { return \"0\" + time; } return time; } function isValidTime(time) { return !Duration.fromISOTime(time).invalid; }","title":"Fix up missing leading zeros &amp; sleep times after midnight"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#calculation-with-00h00m-format","text":"If your metadata has the format 00h00m , i.e. 15h55m , calculations get easier. t1:: 11h45m t2:: 15h55m TABLE WITHOUT ID t1, t2, duration WHERE file.name = this.file.name FLATTEN t2 - t1 as duration","title":"Calculation with 00h00m format"},{"location":"20%20Dataview%20Queries/Calculate%20waking%20phase%20with%20wake%20up%20and%20go%20to%20sleep%20times/#as-inline-statement-for-current-file","text":"date:: 2022-06-06 wake-up:: 07:35 go-to-sleep:: 23:50 Wake time: = date(dateformat(this.file.day, \"yyyy-MM-dd\") + \"T\" + this.go-to-sleep) - (date(dateformat(this.file.day, \"yyyy-MM-dd\") + \"T\" + this.wake-up))","title":"As Inline statement for current file"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/","tags":["dv/dataviewjs","dvjs/pages","dvjs/taskList"],"text":"Add a meta data, i.e. the priority, as a color code in front of your tasks Contributed by mnvwvnm Colorcode tasks based on meta data \u00b6 Basic \u00b6 // define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) // priorities color const red = \"<span style='border-left: 3px solid red;'>&nbsp;</span>\" const orange = \"<span style='border-left: 3px solid orange;'>&nbsp;</span>\" const green = \"<span style='border-left: 3px solid rgb(55 166 155);'>&nbsp;</span>\" // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks){ task.visual = \"\"; if (task.priority === \"high\") { task.visual = red } else if (task.priority === \"medium\") { task.visual = orange } else if (task.priority === \"low\") { task.visual = green } task.visual += task.text.replace(regex, \"\"); } // render open tasks sorted after priority const order = [ \"low\", \"medium\", \"high\"] dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) Variants \u00b6 Show newest completed tasks with low opacity \u00b6 // define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) // priorities color const red = \"<span style='border-left: 3px solid red;'>&nbsp;</span>\" const orange = \"<span style='border-left: 3px solid orange;'>&nbsp;</span>\" const green = \"<span style='border-left: 3px solid rgb(55 166 155);'>&nbsp;</span>\" // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks){ task.visual = \"\"; if (task.priority === \"high\") { task.visual = red } else if (task.priority === \"medium\") { task.visual = orange } else if (task.priority === \"low\") { task.visual = green } task.visual += task.text.replace(regex, \"\"); } // render open tasks const order = [ \"low\", \"medium\", \"high\"] dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.priority && t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\") In case of more priority values, use a map object \u00b6 // define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) const priorityColorMap = { low: \"rgb(55 166 155)\", medium: \"orange\", high: \"red\", } // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks) { task.visual = getColorCode(task.priority) + task.text.replace(regex, \"\"); } // render open tasks const order = Object.keys(priorityColorMap) dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.priority && t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\") function getColorCode(priority) { const color = priorityColorMap[priority] ?? \"grey\"; return `<span style='border-left: 3px solid ${color};'>&nbsp;</span>` } Also show tasks that have no priority and sort them last \u00b6 // define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => !t.completed) const priorityColorMap = { low: \"rgb(55 166 155)\", medium: \"orange\", high: \"red\", } // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks) { task.visual = getColorCode(task.priority) + task.text.replace(regex, \"\"); } // render open tasks const order = Object.keys(priorityColorMap) dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\") function getColorCode(priority) { const color = priorityColorMap[priority] ?? \"grey\"; return `<span style='border-left: 3px solid ${color};'>&nbsp;</span>` }","title":"Colorcode tasks based on meta data"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#colorcode-tasks-based-on-meta-data","text":"","title":"Colorcode tasks based on meta data"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#basic","text":"// define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) // priorities color const red = \"<span style='border-left: 3px solid red;'>&nbsp;</span>\" const orange = \"<span style='border-left: 3px solid orange;'>&nbsp;</span>\" const green = \"<span style='border-left: 3px solid rgb(55 166 155);'>&nbsp;</span>\" // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks){ task.visual = \"\"; if (task.priority === \"high\") { task.visual = red } else if (task.priority === \"medium\") { task.visual = orange } else if (task.priority === \"low\") { task.visual = green } task.visual += task.text.replace(regex, \"\"); } // render open tasks sorted after priority const order = [ \"low\", \"medium\", \"high\"] dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false)","title":"Basic"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#show-newest-completed-tasks-with-low-opacity","text":"// define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) // priorities color const red = \"<span style='border-left: 3px solid red;'>&nbsp;</span>\" const orange = \"<span style='border-left: 3px solid orange;'>&nbsp;</span>\" const green = \"<span style='border-left: 3px solid rgb(55 166 155);'>&nbsp;</span>\" // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks){ task.visual = \"\"; if (task.priority === \"high\") { task.visual = red } else if (task.priority === \"medium\") { task.visual = orange } else if (task.priority === \"low\") { task.visual = green } task.visual += task.text.replace(regex, \"\"); } // render open tasks const order = [ \"low\", \"medium\", \"high\"] dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.priority && t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\")","title":"Show newest completed tasks with low opacity"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#in-case-of-more-priority-values-use-a-map-object","text":"// define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => t.priority && !t.completed) const priorityColorMap = { low: \"rgb(55 166 155)\", medium: \"orange\", high: \"red\", } // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks) { task.visual = getColorCode(task.priority) + task.text.replace(regex, \"\"); } // render open tasks const order = Object.keys(priorityColorMap) dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.priority && t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\") function getColorCode(priority) { const color = priorityColorMap[priority] ?? \"grey\"; return `<span style='border-left: 3px solid ${color};'>&nbsp;</span>` }","title":"In case of more priority values, use a map object"},{"location":"20%20Dataview%20Queries/Colorcode%20tasks%20based%20on%20meta%20data/#also-show-tasks-that-have-no-priority-and-sort-them-last","text":"// define pages const pages = dv.pages('\"10 Example Data/projects\"') // OPEN TASKS const tasks = pages.file.tasks.where(t => !t.completed) const priorityColorMap = { low: \"rgb(55 166 155)\", medium: \"orange\", high: \"red\", } // regex to remove the field priority in text const regex = /\\[priority[^\\]]+\\]/g // assign colors according to priority for (let task of tasks) { task.visual = getColorCode(task.priority) + task.text.replace(regex, \"\"); } // render open tasks const order = Object.keys(priorityColorMap) dv.taskList(tasks.sort((a, b) => order.indexOf(b.priority) - order.indexOf(a.priority)), false) // COMPLETED TASKS const done = pages.file.tasks.where(t => t.completed) // render completed tasks and add a limit to the number of the listed tasks (sorted by the completion date - need to activate auto-completion in dataview settings) if (done.length >= 1) { dv.taskList(done.sort(t => t.completion, 'desc').limit(10), false) } // change opacity of completed tasks this.container.querySelectorAll(\"li.task-list-item.is-checked\").forEach(s => s.style.opacity = \"30%\") function getColorCode(priority) { const color = priorityColorMap[priority] ?? \"grey\"; return `<span style='border-left: 3px solid ${color};'>&nbsp;</span>` }","title":"Also show tasks that have no priority and sort them last"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/","tags":["dv/table","dv/from","dv/where","dv/embed","dv/meta","dv/link"],"text":"display and resize images in dataview tables. Display images in a dataview table \u00b6 Tip - Setting image size When returning an embeded image link in a dataview query, dataview will interpret an numeric display name alias as an image size. For example: - [anyName](image-link) will display the image at it natural largest size. - [anyname|50](image-link) will display the image at a size of 50. Note: This []() format only works for external images, and for internal images where you specify the full hard-drive path to the image file. For relative internal links, see #Basic - Internal Images . Basic - External Images \u00b6 Link to a online image file saved as YAML --- Cover-Img: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1546512443i/43451211.jpg\" --- TABLE author as \"Author\", genres as \"Genres\", \"![anyName|50](\" + cover-img + \")\" AS \"Cover\" FROM \"10 Example Data/books\" Basic - Internal Images \u00b6 Warning - Internal Image Links Internal links are usually stored as relative paths within the vault, making the previous []() approach impractical for sizing internal images (because it requires the full hard-drive path to the image). This means a different approach must be used for internal links. Below is one possible (simple) method, although this method reduces flexibilty by hard-coding the size of the image into the metadata field itself. An alternative approach is outlined further below in #Internal Images - meta path approach . --- cover-img: \"![[Some Internal Image.jpg|500]]\" --- TABLE test-internal AS \"\" FROM \"\" WHERE file.name = this.file.name Variations \u00b6 Internal Images - using the meta path approach \u00b6 Warning - Internal Image Links Because internal links are stored as relative paths within the vault, it is impractical to use the []() approach; and likewise it can be limiting to hard-code the embed information in the image link itself. To avoid this, an embeded link to an internal resource can be reverse enginered by using `meta(...).path` as follows: ` embed(link(meta(cover-img).path, \"50\"))` --- cover-img: \"[[Some Internal Image.jpg]]\" --- TABLE embed(link(meta(test-internal2).path, \"500\")) AS \"\" FROM \"\" WHERE file.name = this.file.name Mixed Images \u00b6 Help - I have a mixture of image sources! The code below combines the most flexible two methods above; allowing both internal and external images to be handled within the same query. The code is not pretty - so only use this approach if you know you will encounter mixed image sources. And if you find a cleaner method - let us know! --- cover-img: \"[[Some Internal Image.jpg]]\" # OR cover-img: \"https://images.com/my-cool-external-image.jpg\" --- TABLE author, genres, EmbededCoverImg as \"\" FROM \"10 Example Data/books\" FLATTEN choice(typeof(cover-img)=\"link\", embed(link(meta( choice( typeof(cover-img)=\"link\", cover-img, this.file.link ) ).path, \"50\")), \"![anyName|50](\" + cover-img + \")\") AS EmbededCoverImg","title":"Display images in a dataview table"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#display-images-in-a-dataview-table","text":"Tip - Setting image size When returning an embeded image link in a dataview query, dataview will interpret an numeric display name alias as an image size. For example: - [anyName](image-link) will display the image at it natural largest size. - [anyname|50](image-link) will display the image at a size of 50. Note: This []() format only works for external images, and for internal images where you specify the full hard-drive path to the image file. For relative internal links, see #Basic - Internal Images .","title":"Display images in a dataview table"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#basic-external-images","text":"Link to a online image file saved as YAML --- Cover-Img: \"https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1546512443i/43451211.jpg\" --- TABLE author as \"Author\", genres as \"Genres\", \"![anyName|50](\" + cover-img + \")\" AS \"Cover\" FROM \"10 Example Data/books\"","title":"Basic - External Images"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#basic-internal-images","text":"Warning - Internal Image Links Internal links are usually stored as relative paths within the vault, making the previous []() approach impractical for sizing internal images (because it requires the full hard-drive path to the image). This means a different approach must be used for internal links. Below is one possible (simple) method, although this method reduces flexibilty by hard-coding the size of the image into the metadata field itself. An alternative approach is outlined further below in #Internal Images - meta path approach . --- cover-img: \"![[Some Internal Image.jpg|500]]\" --- TABLE test-internal AS \"\" FROM \"\" WHERE file.name = this.file.name","title":"Basic - Internal Images"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#variations","text":"","title":"Variations"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#internal-images-using-the-meta-path-approach","text":"Warning - Internal Image Links Because internal links are stored as relative paths within the vault, it is impractical to use the []() approach; and likewise it can be limiting to hard-code the embed information in the image link itself. To avoid this, an embeded link to an internal resource can be reverse enginered by using `meta(...).path` as follows: ` embed(link(meta(cover-img).path, \"50\"))` --- cover-img: \"[[Some Internal Image.jpg]]\" --- TABLE embed(link(meta(test-internal2).path, \"500\")) AS \"\" FROM \"\" WHERE file.name = this.file.name","title":"Internal Images - using the meta path approach"},{"location":"20%20Dataview%20Queries/Display%20images%20in%20a%20dataview%20table/#mixed-images","text":"Help - I have a mixture of image sources! The code below combines the most flexible two methods above; allowing both internal and external images to be handled within the same query. The code is not pretty - so only use this approach if you know you will encounter mixed image sources. And if you find a cleaner method - let us know! --- cover-img: \"[[Some Internal Image.jpg]]\" # OR cover-img: \"https://images.com/my-cool-external-image.jpg\" --- TABLE author, genres, EmbededCoverImg as \"\" FROM \"10 Example Data/books\" FLATTEN choice(typeof(cover-img)=\"link\", embed(link(meta( choice( typeof(cover-img)=\"link\", cover-img, this.file.link ) ).path, \"50\")), \"![anyName|50](\" + cover-img + \")\") AS EmbededCoverImg","title":"Mixed Images"},{"location":"20%20Dataview%20Queries/Display%20meta%20data%20values%20as%20a%20tag%20cloud/","tags":["dv/dataviewjs","dvjs/view"],"text":"Displays a set of values (i.e. from a meta data field) as a tag or word cloud Display meta data values as a tag cloud \u00b6 Basic \u00b6 Sources You'll find the sources of this dv.view snippet under 00 Meta/dataview_views/tagcloud . It expects the values you want to display as an array in the second argument. await dv.view(\"00 Meta/dataview_views/tagcloud\", { values: dv.pages('\"10 Example Data/dailys\"').where(p => p.person).person }) Usage in the dataview example vault This query is used to render the Topic Overview !","title":"Display meta data values as a tag cloud"},{"location":"20%20Dataview%20Queries/Display%20meta%20data%20values%20as%20a%20tag%20cloud/#display-meta-data-values-as-a-tag-cloud","text":"","title":"Display meta data values as a tag cloud"},{"location":"20%20Dataview%20Queries/Display%20meta%20data%20values%20as%20a%20tag%20cloud/#basic","text":"Sources You'll find the sources of this dv.view snippet under 00 Meta/dataview_views/tagcloud . It expects the values you want to display as an array in the second argument. await dv.view(\"00 Meta/dataview_views/tagcloud\", { values: dv.pages('\"10 Example Data/dailys\"').where(p => p.person).person }) Usage in the dataview example vault This query is used to render the Topic Overview !","title":"Basic"},{"location":"20%20Dataview%20Queries/Display%20metadata%20of%20a%20week%20as%20emjois%20%28habit%20tracking%29/","tags":["dv/table","dv/from","dv/where","dv/choice"],"text":"Display metadata of a certain week as emojis (i.e. for habit tracking) Display metadata of a week as emjois (habit tracking) \u00b6 Basic \u00b6 TABLE choice(praying, \"\ud83d\udc9a\", \"\u2796\") AS Praying, choice(breathing, \"\ud83d\udc9a\", \"\u2796\") AS breathing, choice(beingthankful, \"\ud83d\udc9a\", \"\u2796\") AS \"being thankful\", choice(slowdown, \"\ud83d\udc9a\", \"\u2796\") AS \"slow down\" FROM \"10 Example Data/dailys\" WHERE wellbeing.mood > 0 AND date(file.day).weekyear = 2 Variants \u00b6 Add the mood of the day as a smiley TABLE choice(wellbeing.mood = 1, \"\ud83d\ude22\", choice(wellbeing.mood = 2 or wellbeing.mood = 3, \"\ud83d\ude10\", choice(wellbeing.mood > 3, \"\ud83d\ude03\", \"\"))) as Mood, choice(praying, \"\ud83d\udc9a\", \"\u2796\") AS Praying, choice(breathing, \"\ud83d\udc9a\", \"\u2796\") AS breating, choice(beingthankful, \"\ud83d\udc9a\", \"\u2796\") AS \"being thankful\", choice(slowdown, \"\ud83d\udc9a\", \"\u2796\") AS \"slow down\" FROM \"10 Example Data/dailys\" WHERE wellbeing.mood > 0 AND date(file.day).weekyear = 2","title":"Display metadata of a week as emjois (habit tracking)"},{"location":"20%20Dataview%20Queries/Display%20metadata%20of%20a%20week%20as%20emjois%20%28habit%20tracking%29/#display-metadata-of-a-week-as-emjois-habit-tracking","text":"","title":"Display metadata of a week as emjois (habit tracking)"},{"location":"20%20Dataview%20Queries/Display%20metadata%20of%20a%20week%20as%20emjois%20%28habit%20tracking%29/#basic","text":"TABLE choice(praying, \"\ud83d\udc9a\", \"\u2796\") AS Praying, choice(breathing, \"\ud83d\udc9a\", \"\u2796\") AS breathing, choice(beingthankful, \"\ud83d\udc9a\", \"\u2796\") AS \"being thankful\", choice(slowdown, \"\ud83d\udc9a\", \"\u2796\") AS \"slow down\" FROM \"10 Example Data/dailys\" WHERE wellbeing.mood > 0 AND date(file.day).weekyear = 2","title":"Basic"},{"location":"20%20Dataview%20Queries/Display%20metadata%20of%20a%20week%20as%20emjois%20%28habit%20tracking%29/#variants","text":"Add the mood of the day as a smiley TABLE choice(wellbeing.mood = 1, \"\ud83d\ude22\", choice(wellbeing.mood = 2 or wellbeing.mood = 3, \"\ud83d\ude10\", choice(wellbeing.mood > 3, \"\ud83d\ude03\", \"\"))) as Mood, choice(praying, \"\ud83d\udc9a\", \"\u2796\") AS Praying, choice(breathing, \"\ud83d\udc9a\", \"\u2796\") AS breating, choice(beingthankful, \"\ud83d\udc9a\", \"\u2796\") AS \"being thankful\", choice(slowdown, \"\ud83d\udc9a\", \"\u2796\") AS \"slow down\" FROM \"10 Example Data/dailys\" WHERE wellbeing.mood > 0 AND date(file.day).weekyear = 2","title":"Variants"},{"location":"20%20Dataview%20Queries/Display%20or%20hide%20dataview%20queries%20based%20on%20a%20task%20selection/","tags":["dv/dataviewjs","dvjs/current","dvjs/header","dvjs/list","dvjs/flatMap","dvjs/where"],"text":"Hide or show dataview queries based on a task selection (\"toggle tasks\") Contributed by mnvwvnm Display or hide dataview queries based on a task selection \u00b6 Basic \u00b6 [ ] Michel Foucault [x] Walter Benjamin [ ] Karl Marx const checklist = dv.current().file.tasks.where(t => t.completed); if (isActive(\"Michel Foucault\")) { dv.header(2, \"Michel Foucault quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Michel Foucault\").text) } if (isActive(\"Walter Benjamin\")) { dv.header(2, \"Walter Benjamin quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Walter Benjamin\").text) } if (isActive(\"Karl Marx\")) { dv.header(2, \"Karl Marx quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Karl Marx\").text) } function isActive(name) { return checklist.where(t => t.text == name)[0] } Variants \u00b6 Make code reusable, if the query to execute is always almost the same \u00b6 If your dataview query only differs in the field value to select, like the example above, you can do a refactoring that makes it unnecessary to touch the code again when adding new authors. When having \"normal\" tasks in the same file If you want to use \"toggle tasks\" along side normal tasks, the Basic approach is a bit safer. Nevertheless, you can use this one if you like, when you put your \"toggle tasks\" under a heading and filter for this, too, via && t.section.subpath === \"Basic\" in the where function. If the only tasks in your file are \"toggle tasks\", you don't need this additional filter. const checklist = dv.current().file.tasks.where(t => t.completed && t.section.subpath === \"Basic\"); checklist.forEach(task => showContent(task.text)) function isActive(name) { return checklist.where(t => t.text == name)[0] } function showContent(author) { dv.header(2, author + \" quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == author).text) }","title":"Display or hide dataview queries based on a task selection"},{"location":"20%20Dataview%20Queries/Display%20or%20hide%20dataview%20queries%20based%20on%20a%20task%20selection/#display-or-hide-dataview-queries-based-on-a-task-selection","text":"","title":"Display or hide dataview queries based on a task selection"},{"location":"20%20Dataview%20Queries/Display%20or%20hide%20dataview%20queries%20based%20on%20a%20task%20selection/#basic","text":"[ ] Michel Foucault [x] Walter Benjamin [ ] Karl Marx const checklist = dv.current().file.tasks.where(t => t.completed); if (isActive(\"Michel Foucault\")) { dv.header(2, \"Michel Foucault quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Michel Foucault\").text) } if (isActive(\"Walter Benjamin\")) { dv.header(2, \"Walter Benjamin quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Walter Benjamin\").text) } if (isActive(\"Karl Marx\")) { dv.header(2, \"Karl Marx quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == \"Karl Marx\").text) } function isActive(name) { return checklist.where(t => t.text == name)[0] }","title":"Basic"},{"location":"20%20Dataview%20Queries/Display%20or%20hide%20dataview%20queries%20based%20on%20a%20task%20selection/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Display%20or%20hide%20dataview%20queries%20based%20on%20a%20task%20selection/#make-code-reusable-if-the-query-to-execute-is-always-almost-the-same","text":"If your dataview query only differs in the field value to select, like the example above, you can do a refactoring that makes it unnecessary to touch the code again when adding new authors. When having \"normal\" tasks in the same file If you want to use \"toggle tasks\" along side normal tasks, the Basic approach is a bit safer. Nevertheless, you can use this one if you like, when you put your \"toggle tasks\" under a heading and filter for this, too, via && t.section.subpath === \"Basic\" in the where function. If the only tasks in your file are \"toggle tasks\", you don't need this additional filter. const checklist = dv.current().file.tasks.where(t => t.completed && t.section.subpath === \"Basic\"); checklist.forEach(task => showContent(task.text)) function isActive(name) { return checklist.where(t => t.text == name)[0] } function showContent(author) { dv.header(2, author + \" quotes\") dv.list(dv.pages('\"10 Example Data/dailys\"').flatMap(p => p.file.lists).where(l => l.author == author).text) }","title":"Make code reusable, if the query to execute is always almost the same"},{"location":"20%20Dataview%20Queries/Display%20random%20images%20from%20a%20path/","tags":["dv/dataviewjs","dvjs/list","dvjs/array","dvjs/sort","dvjs/limit","dvjs/map"],"text":"Display random images from a path in vault Display random images from a path \u00b6 Basic \u00b6 const amountOfImages = 3; const pathToImageFolder = '00 Meta/attachments' const imageFiles = app.vault.getFiles().filter(file => file.extension !== 'md' && file.parent.path === pathToImageFolder) dv.list(dv.array(imageFiles) .sort(() => 0.5 - Math.random()) .limit(amountOfImages) .map(file => dv.func.embed(dv.fileLink(file.path))))","title":"Display random images from a path"},{"location":"20%20Dataview%20Queries/Display%20random%20images%20from%20a%20path/#display-random-images-from-a-path","text":"","title":"Display random images from a path"},{"location":"20%20Dataview%20Queries/Display%20random%20images%20from%20a%20path/#basic","text":"const amountOfImages = 3; const pathToImageFolder = '00 Meta/attachments' const imageFiles = app.vault.getFiles().filter(file => file.extension !== 'md' && file.parent.path === pathToImageFolder) dv.list(dv.array(imageFiles) .sort(() => 0.5 - Math.random()) .limit(amountOfImages) .map(file => dv.func.embed(dv.fileLink(file.path))))","title":"Basic"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/","tags":["dv/TABLE","dv/FROM","dv/FLATTEN","dv/groupby","dv/WHERE","dv/meta","dv/contains","dv/round"],"text":"Showcase the various possible usages of the FLATTEN data command Example FLATTEN Queries \u00b6 Basic \u00b6 Effect of FLATTEN FLATTEN is the opposite of GROUP BY . Instead of putting multiple notes into one row, it (potentionally) splits up one note into multiple rows . If your result contains seven notes and you use FLATTEN on a multi value field , you'll get 7 * sum of values in flattened field results. Documentation Query without FLATTEN TABLE genres FROM \"10 Example Data/books\" Query with FLATTEN TABLE genres FROM \"10 Example Data/books\" FLATTEN genres FLATTEN is a data command FLATTEN needs to be used in combination with a Query Type . You can use FLATTEN multiple times. Variants \u00b6 FLATTEN multiple fields \u00b6 You'll get files * sum of values first field * sum of values second field * ... results TABLE genres, booktopics FROM \"10 Example Data/books\" FLATTEN genres FLATTEN booktopics Group by a flattened field \u00b6 A popular use case for FLATTEN is to use a multi value field for grouping . Without flattening the multi value field first, the result is somewhat unexpected. Without flattening TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY genres Grouping after flattening TABLE rows.file.link FROM \"10 Example Data/books\" FLATTEN genres GROUP BY genres Order matters! Please mind that the order is important - a flattened field is only available after you wrote the FLATTEN command. One big exception : The Query Type command is always the last command to be executed - despite standing at the very top! That means all flattened fields are available as fields for your Query Type . If you first group, then FLATTEN, you won't get the desired result! TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY genres FLATTEN genres Use FLATTEN to perform other operations on your values \u00b6 Use function that cannot operate on lists To use functions that do not take an lists (a multi value) as an argument, you need to FLATTEN this value first. This is also true for functions that act differently on single values, i.e. contains Use a function that only takes single values as arguments TABLE L.text FROM \"10 Example Data/dailys/2022-07-22\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\" Use a function that operates differently on single values TABLE L.text FROM \"10 Example Data/dailys/2022-07-22\" FLATTEN file.lists AS L WHERE contains(L.text, \"nul\") Use FLATTEN to declare a new field \u00b6 Flattening single values FLATTEN splits up multi value fields into single values, but it can also be performed on values that are already single value. Doing this, the number of your result rows won't change - so it wont FLATTEN in the traditional sense - but you're able to name the flattened field and use it in your query (after the FLATTEN command and in your Query Type). This can be handy when you performing lengthy operations on fields and want to \"save\" the result of that instead of typing it over and over again. TABLE pagesRead, totalPages, progress FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) + \"%\" AS progress You can then do additional operations on your new, temporary field, too. TABLE pagesRead, totalPages, progress AS \"%\" FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) AS progress WHERE progress < 50 Use FLATTEN on a multi-value field but calculate a single value \u00b6 Special case of declaring a new field There is one special case FLATTEN can act a bit unintuitive. When you TABLE rows.file.link, rows.genreCount FROM \"10 Example Data/books\" FLATTEN length(genres) AS genreCount GROUP BY genres Flattening a field multiple times \u00b6 You can FLATTEN a field multiple times to change the value after other operations. TABLE pagesRead, totalPages, percentage FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) AS progress WHERE progress < 50 FLATTEN progress + \"%\" AS percentage About flattening nested fields \u00b6 FLATTEN on objects has no effect FLATTEN works only correctly on lists or single values. A nested field, like you see in the frontmatter of this file, is a list, but valueWithSubValues is an object - and one element in the list you're flattening. Therefore, it'll appear as one row. TABLE nestedField WHERE file = this.file FLATTEN nestedField The same is true for pure objects, they cannot be flattened. This FLATTEN has no effect . TABLE wellbeing FROM \"10 Example Data/dailys/2022-01-05\" FLATTEN wellbeing More Examples Do you want to see more examples how FLATTEN can be used? Head over to Queries by Data Command#FLATTEN to see all queries in this vault that use FLATTEN .","title":"Example FLATTEN Queries"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#example-flatten-queries","text":"","title":"Example FLATTEN Queries"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#basic","text":"Effect of FLATTEN FLATTEN is the opposite of GROUP BY . Instead of putting multiple notes into one row, it (potentionally) splits up one note into multiple rows . If your result contains seven notes and you use FLATTEN on a multi value field , you'll get 7 * sum of values in flattened field results. Documentation Query without FLATTEN TABLE genres FROM \"10 Example Data/books\" Query with FLATTEN TABLE genres FROM \"10 Example Data/books\" FLATTEN genres FLATTEN is a data command FLATTEN needs to be used in combination with a Query Type . You can use FLATTEN multiple times.","title":"Basic"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#flatten-multiple-fields","text":"You'll get files * sum of values first field * sum of values second field * ... results TABLE genres, booktopics FROM \"10 Example Data/books\" FLATTEN genres FLATTEN booktopics","title":"FLATTEN multiple fields"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#group-by-a-flattened-field","text":"A popular use case for FLATTEN is to use a multi value field for grouping . Without flattening the multi value field first, the result is somewhat unexpected. Without flattening TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY genres Grouping after flattening TABLE rows.file.link FROM \"10 Example Data/books\" FLATTEN genres GROUP BY genres Order matters! Please mind that the order is important - a flattened field is only available after you wrote the FLATTEN command. One big exception : The Query Type command is always the last command to be executed - despite standing at the very top! That means all flattened fields are available as fields for your Query Type . If you first group, then FLATTEN, you won't get the desired result! TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY genres FLATTEN genres","title":"Group by a flattened field"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#use-flatten-to-perform-other-operations-on-your-values","text":"Use function that cannot operate on lists To use functions that do not take an lists (a multi value) as an argument, you need to FLATTEN this value first. This is also true for functions that act differently on single values, i.e. contains Use a function that only takes single values as arguments TABLE L.text FROM \"10 Example Data/dailys/2022-07-22\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\" Use a function that operates differently on single values TABLE L.text FROM \"10 Example Data/dailys/2022-07-22\" FLATTEN file.lists AS L WHERE contains(L.text, \"nul\")","title":"Use FLATTEN to perform other operations on your values"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#use-flatten-to-declare-a-new-field","text":"Flattening single values FLATTEN splits up multi value fields into single values, but it can also be performed on values that are already single value. Doing this, the number of your result rows won't change - so it wont FLATTEN in the traditional sense - but you're able to name the flattened field and use it in your query (after the FLATTEN command and in your Query Type). This can be handy when you performing lengthy operations on fields and want to \"save\" the result of that instead of typing it over and over again. TABLE pagesRead, totalPages, progress FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) + \"%\" AS progress You can then do additional operations on your new, temporary field, too. TABLE pagesRead, totalPages, progress AS \"%\" FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) AS progress WHERE progress < 50","title":"Use FLATTEN to declare a new field"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#use-flatten-on-a-multi-value-field-but-calculate-a-single-value","text":"Special case of declaring a new field There is one special case FLATTEN can act a bit unintuitive. When you TABLE rows.file.link, rows.genreCount FROM \"10 Example Data/books\" FLATTEN length(genres) AS genreCount GROUP BY genres","title":"Use FLATTEN on a multi-value field but calculate a single value"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#flattening-a-field-multiple-times","text":"You can FLATTEN a field multiple times to change the value after other operations. TABLE pagesRead, totalPages, percentage FROM \"10 Example Data/books\" FLATTEN round((pagesRead / totalPages) * 100) AS progress WHERE progress < 50 FLATTEN progress + \"%\" AS percentage","title":"Flattening a field multiple times"},{"location":"20%20Dataview%20Queries/Example%20FLATTEN%20Queries/#about-flattening-nested-fields","text":"FLATTEN on objects has no effect FLATTEN works only correctly on lists or single values. A nested field, like you see in the frontmatter of this file, is a list, but valueWithSubValues is an object - and one element in the list you're flattening. Therefore, it'll appear as one row. TABLE nestedField WHERE file = this.file FLATTEN nestedField The same is true for pure objects, they cannot be flattened. This FLATTEN has no effect . TABLE wellbeing FROM \"10 Example Data/dailys/2022-01-05\" FLATTEN wellbeing More Examples Do you want to see more examples how FLATTEN can be used? Head over to Queries by Data Command#FLATTEN to see all queries in this vault that use FLATTEN .","title":"About flattening nested fields"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/","tags":["dv/LIST","dv/FROM","dv/groupby","dv/TABLE","dv/FLATTEN","dv/choice","dv/date","dv/WHERE","dv/round","dv/length"],"text":"Showcase the various possible usages of the GROUP BY data command Example GROUP BY Queries \u00b6 Basic \u00b6 Effect of GROUP BY Initially, a dataview results yields the pages you receive from your FROM and WHERE arguments as results - one \"row\", one result item, per note. When a GROUP BY is applied to a Query, you bundle up all pages after the field you're grouping by . This has two implications: First, after a GROUP BY , you have as many results as the field you grouped by has values. Secondly, the result pages are not your \"first level\" anymore, but the group is. When listing out a grouped query, you will not receive the files anymore, but the groups. Documentation LIST FROM \"10 Example Data/books\" GROUP BY author Working with grouped pages A grouped result list is made up of result items that look like this: Key : Value of the field you used in GROUP BY rows : All pages that match Key Before grouping, every note was a result item and file.link was the Key . After grouping, your file informations are bundled up under the group value as key under the field rows . That means you need to use rows as a prefix when listing informations. TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY author Variants \u00b6 When pages match multiple groups \u00b6 Duplication of entries If a page matches multiple groups, dataview will duplicate the page for you to put it in every matching group. Therefor, pages can show up multiple times in a grouped result list. Why do we need to use FLATTEN here first? In order to get decent groups, we need to FLATTEN the multi value field genres first. Read more about that in Example FLATTEN Queries#Group by a flattened field TABLE rows.file.link FROM \"10 Example Data/books\" FLATTEN genres GROUP BY genres Use a calculation as a group \u00b6 [!info] It's also possible to use a calculation as a group, not only a plain field. LIST rows.file.link FROM \"10 Example Data/assignments\" GROUP BY choice(due < date(today), \"Overdue\", \"Still has time\") In addition, you can name this calculation to reference it further in your query. TABLE WITHOUT ID progress + \"%\" AS \"% read\", rows.file.link FROM \"10 Example Data/books\" GROUP BY round((pagesRead/totalPages) * 100) as progress WHERE progress > 50 AND progress < 100 Group by literals to trim down your result to exactly one result \u00b6 [!info] Beside calculations and fields, you can use a [literal](https://blacksmithgu.github.io/obsidian-dataview/query/literals/) - a fixed value - as a group. This will always result into **one group** and can be useful in certain scenarios, i.e. if you want to calculate a sum or average of your data. The literal itself is used as the group name, but doesn't matter otherwise. You can use it to declare a senseful prefix or omit it completely by using `WITHOUT ID`. LIST length(rows) FROM \"10 Example Data/books\" GROUP BY \"Total Books in Obsidian\" More Examples Do you want to see more examples how GROUP BY can be used? Head over to Queries by Data Command#GROUPBY to see all queries in this vault that use GROUP BY .","title":"Example GROUP BY Queries"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#example-group-by-queries","text":"","title":"Example GROUP BY Queries"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#basic","text":"Effect of GROUP BY Initially, a dataview results yields the pages you receive from your FROM and WHERE arguments as results - one \"row\", one result item, per note. When a GROUP BY is applied to a Query, you bundle up all pages after the field you're grouping by . This has two implications: First, after a GROUP BY , you have as many results as the field you grouped by has values. Secondly, the result pages are not your \"first level\" anymore, but the group is. When listing out a grouped query, you will not receive the files anymore, but the groups. Documentation LIST FROM \"10 Example Data/books\" GROUP BY author Working with grouped pages A grouped result list is made up of result items that look like this: Key : Value of the field you used in GROUP BY rows : All pages that match Key Before grouping, every note was a result item and file.link was the Key . After grouping, your file informations are bundled up under the group value as key under the field rows . That means you need to use rows as a prefix when listing informations. TABLE rows.file.link FROM \"10 Example Data/books\" GROUP BY author","title":"Basic"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#when-pages-match-multiple-groups","text":"Duplication of entries If a page matches multiple groups, dataview will duplicate the page for you to put it in every matching group. Therefor, pages can show up multiple times in a grouped result list. Why do we need to use FLATTEN here first? In order to get decent groups, we need to FLATTEN the multi value field genres first. Read more about that in Example FLATTEN Queries#Group by a flattened field TABLE rows.file.link FROM \"10 Example Data/books\" FLATTEN genres GROUP BY genres","title":"When pages match multiple groups"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#use-a-calculation-as-a-group","text":"[!info] It's also possible to use a calculation as a group, not only a plain field. LIST rows.file.link FROM \"10 Example Data/assignments\" GROUP BY choice(due < date(today), \"Overdue\", \"Still has time\") In addition, you can name this calculation to reference it further in your query. TABLE WITHOUT ID progress + \"%\" AS \"% read\", rows.file.link FROM \"10 Example Data/books\" GROUP BY round((pagesRead/totalPages) * 100) as progress WHERE progress > 50 AND progress < 100","title":"Use a calculation as a group"},{"location":"20%20Dataview%20Queries/Example%20GROUP%20BY%20Queries/#group-by-literals-to-trim-down-your-result-to-exactly-one-result","text":"[!info] Beside calculations and fields, you can use a [literal](https://blacksmithgu.github.io/obsidian-dataview/query/literals/) - a fixed value - as a group. This will always result into **one group** and can be useful in certain scenarios, i.e. if you want to calculate a sum or average of your data. The literal itself is used as the group name, but doesn't matter otherwise. You can use it to declare a senseful prefix or omit it completely by using `WITHOUT ID`. LIST length(rows) FROM \"10 Example Data/books\" GROUP BY \"Total Books in Obsidian\" More Examples Do you want to see more examples how GROUP BY can be used? Head over to Queries by Data Command#GROUPBY to see all queries in this vault that use GROUP BY .","title":"Group by literals to trim down your result to exactly one result"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/","text":"Overview of handling various types of frontmatter fields, including tricks and traps. Working with Frontmatter \u00b6 This page is a work in progress. Navigation #Numbers | #Strings | #Links | #Dates | #Arrays | #Objects Numbers & Logic \u00b6 TABLE WITHOUT ID EmptyValue, Bool, Numeric, StringNumeric FROM \"\" WHERE file.name = this.file.name Strings \u00b6 Basic \u00b6 TABLE WITHOUT ID StringWithQuotes as \"String in Quotes\", StringNoQuotes as \"String no Quotes\", StringEscapting as \"String Escaping\", StringHTML as \"String with HTML\" FROM \"\" WHERE file.name = this.file.name Multiline \u00b6 TABLE WITHOUT ID StringMultiline, StringMultiWithBreaks FROM \"\" WHERE file.name = this.file.name Tips for Working with Strings Traps for Working with Strings Links \u00b6 TABLE WITHOUT ID Link, Link.file.cday FROM \"\" WHERE file.name = this.file.name Dates \u00b6 TABLE WITHOUT ID Date, DateTime, Duration, Date + Duration as \"Date + Duration\", dateformat(Date, \"yyyy-MM\") as \"Formatted Date\" FROM \"\" WHERE file.name = this.file.name Arrays \u00b6 TABLE WITHOUT ID FlatArray, BulletArray FROM \"\" WHERE file.name = this.file.name If field is an array (like in your case), then contains is looking for an element that matches exactly. So if you had field:: [[abc]], [[def]], a then it would match. If field is a string (an array of characters)... it would still be looking for an element it's just that in that case elements are individual characters. A simple way around it would be to do =contains(join(this.field), \"a\") which turns the array into a string, and then does a character search for any a's. Objects \u00b6 Basics \u00b6 TABLE WITHOUT ID KeyedObject, NestedObject FROM \"\" WHERE file.name = this.file.name Looking inside \u00b6 TABLE WITHOUT ID KeyedObject.name, NestedObject[0].color, \"<div style='background-color:#\" + NestedObject[0].color + \";'> </div>\" as \"HTML Color\" FROM \"\" WHERE file.name = this.file.name Flattening objects \u00b6 TABLE WITHOUT ID NObjects.name, NObjects.color, \"<div style='background-color:#\" + NObjects.color + \";'> </div>\" as \"HTML Color\" FROM \"\" WHERE file.name = this.file.name FLATTEN NestedObject as NObjects","title":"Frontmatter Overview"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#working-with-frontmatter","text":"This page is a work in progress. Navigation #Numbers | #Strings | #Links | #Dates | #Arrays | #Objects","title":"Working with Frontmatter"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#numbers-logic","text":"TABLE WITHOUT ID EmptyValue, Bool, Numeric, StringNumeric FROM \"\" WHERE file.name = this.file.name","title":"Numbers &amp; Logic"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#strings","text":"","title":"Strings"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#basic","text":"TABLE WITHOUT ID StringWithQuotes as \"String in Quotes\", StringNoQuotes as \"String no Quotes\", StringEscapting as \"String Escaping\", StringHTML as \"String with HTML\" FROM \"\" WHERE file.name = this.file.name","title":"Basic"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#multiline","text":"TABLE WITHOUT ID StringMultiline, StringMultiWithBreaks FROM \"\" WHERE file.name = this.file.name Tips for Working with Strings Traps for Working with Strings","title":"Multiline"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#links","text":"TABLE WITHOUT ID Link, Link.file.cday FROM \"\" WHERE file.name = this.file.name","title":"Links"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#dates","text":"TABLE WITHOUT ID Date, DateTime, Duration, Date + Duration as \"Date + Duration\", dateformat(Date, \"yyyy-MM\") as \"Formatted Date\" FROM \"\" WHERE file.name = this.file.name","title":"Dates"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#arrays","text":"TABLE WITHOUT ID FlatArray, BulletArray FROM \"\" WHERE file.name = this.file.name If field is an array (like in your case), then contains is looking for an element that matches exactly. So if you had field:: [[abc]], [[def]], a then it would match. If field is a string (an array of characters)... it would still be looking for an element it's just that in that case elements are individual characters. A simple way around it would be to do =contains(join(this.field), \"a\") which turns the array into a string, and then does a character search for any a's.","title":"Arrays"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#objects","text":"","title":"Objects"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#basics","text":"TABLE WITHOUT ID KeyedObject, NestedObject FROM \"\" WHERE file.name = this.file.name","title":"Basics"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#looking-inside","text":"TABLE WITHOUT ID KeyedObject.name, NestedObject[0].color, \"<div style='background-color:#\" + NestedObject[0].color + \";'> </div>\" as \"HTML Color\" FROM \"\" WHERE file.name = this.file.name","title":"Looking inside"},{"location":"20%20Dataview%20Queries/Frontmatter%20Overview/#flattening-objects","text":"TABLE WITHOUT ID NObjects.name, NObjects.color, \"<div style='background-color:#\" + NObjects.color + \";'> </div>\" as \"HTML Color\" FROM \"\" WHERE file.name = this.file.name FLATTEN NestedObject as NObjects","title":"Flattening objects"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/","tags":["dv/list","dv/from","dv/where","dv/sort","dv/limit"],"text":"Fetches the file that has the highest day that is lower than the current files day in order to get the previous day Get a link to the previous daily (not necessarily yesterday) \u00b6 Basic \u00b6 LIST FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC LIMIT 1 Variants \u00b6 As javascript inline statement \u00b6 $= dv.pages('\"10 Example Data/dailys\"').where(p => p.file.day && p.file.day < dv.current().file.day).sort(p => p.file.day, \"desc\").file.link.limit(1) Show a custom prefix before the link \u00b6 LIST WITHOUT ID t FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC FLATTEN \"Previous day: \" + file.link AS t LIMIT 1 Get a link to the next day with a daily note \u00b6 LIST WITHOUT ID t FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day > this.file.day SORT file.day ASC FLATTEN \"Next day: \" + file.link AS t LIMIT 1","title":"Get a link to the previous daily (not necessarily yesterday)"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#get-a-link-to-the-previous-daily-not-necessarily-yesterday","text":"","title":"Get a link to the previous daily (not necessarily yesterday)"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#basic","text":"LIST FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC LIMIT 1","title":"Basic"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#as-javascript-inline-statement","text":"$= dv.pages('\"10 Example Data/dailys\"').where(p => p.file.day && p.file.day < dv.current().file.day).sort(p => p.file.day, \"desc\").file.link.limit(1)","title":"As javascript inline statement"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#show-a-custom-prefix-before-the-link","text":"LIST WITHOUT ID t FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC FLATTEN \"Previous day: \" + file.link AS t LIMIT 1","title":"Show a custom prefix before the link"},{"location":"20%20Dataview%20Queries/Get%20a%20link%20to%20the%20previous%20daily%20%28not%20necessarily%20yesterday%29/#get-a-link-to-the-next-day-with-a-daily-note","text":"LIST WITHOUT ID t FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day > this.file.day SORT file.day ASC FLATTEN \"Next day: \" + file.link AS t LIMIT 1","title":"Get a link to the next day with a daily note"},{"location":"20%20Dataview%20Queries/Get%20latest%20open%20tasks/","tags":["dv/task","dv/from","dv/where","dv/sort","dv/limit"],"text":"Get the latest, not completed tasks Get latest open tasks \u00b6 Difference between status and completed A task only counts as completed if its status is equals to \"x\". If you use custom task statuses, i.e. \"-\", a task will appear checked but is not completed. Basic \u00b6 TASK FROM \"10 Example Data/dailys\" WHERE !completed SORT file.day DESC LIMIT 10 Variants \u00b6 If using custom statuses for TASKS, it's maybe better to check for status = \" \" instead of !completed , depending on your use case TASK FROM \"10 Example Data/dailys\" WHERE status = \" \" SORT file.day DESC LIMIT 10","title":"Get latest open tasks"},{"location":"20%20Dataview%20Queries/Get%20latest%20open%20tasks/#get-latest-open-tasks","text":"Difference between status and completed A task only counts as completed if its status is equals to \"x\". If you use custom task statuses, i.e. \"-\", a task will appear checked but is not completed.","title":"Get latest open tasks"},{"location":"20%20Dataview%20Queries/Get%20latest%20open%20tasks/#basic","text":"TASK FROM \"10 Example Data/dailys\" WHERE !completed SORT file.day DESC LIMIT 10","title":"Basic"},{"location":"20%20Dataview%20Queries/Get%20latest%20open%20tasks/#variants","text":"If using custom statuses for TASKS, it's maybe better to check for status = \" \" instead of !completed , depending on your use case TASK FROM \"10 Example Data/dailys\" WHERE status = \" \" SORT file.day DESC LIMIT 10","title":"Variants"},{"location":"20%20Dataview%20Queries/Group%20duplicated%20meta%20data%20fields%20after%20their%20order%20in%20file/","tags":["dv/dataviewjs","dvjs/pages","dvjs/where","dvjs/sort","dvjs/table"],"text":"Group meta data fields after their order in a file (useful if you have multiples in the same file) Group duplicated meta data fields after their order in file \u00b6 Basic \u00b6 const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.bought).sort(p => p.file.name) const groupedValues = []; for (let page of pages) { const length = Array.isArray(page.bought) ? page.bought.length : 1; for (let i = 0; i < length; i++) { groupedValues.push([ page.file.link, getValue(page, \"bought\", i), getValue(page, \"paid\", i) ]) } } dv.table([\"Page\", \"Bought\", \"Paid\"], groupedValues) function getValue(page, key, i) { return page[key] && Array.isArray(page[key]) ? page[key][i] : page[key]; }","title":"Group duplicated meta data fields after their order in file"},{"location":"20%20Dataview%20Queries/Group%20duplicated%20meta%20data%20fields%20after%20their%20order%20in%20file/#group-duplicated-meta-data-fields-after-their-order-in-file","text":"","title":"Group duplicated meta data fields after their order in file"},{"location":"20%20Dataview%20Queries/Group%20duplicated%20meta%20data%20fields%20after%20their%20order%20in%20file/#basic","text":"const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.bought).sort(p => p.file.name) const groupedValues = []; for (let page of pages) { const length = Array.isArray(page.bought) ? page.bought.length : 1; for (let i = 0; i < length; i++) { groupedValues.push([ page.file.link, getValue(page, \"bought\", i), getValue(page, \"paid\", i) ]) } } dv.table([\"Page\", \"Bought\", \"Paid\"], groupedValues) function getValue(page, key, i) { return page[key] && Array.isArray(page[key]) ? page[key][i] : page[key]; }","title":"Basic"},{"location":"20%20Dataview%20Queries/Group%20files%20by%20meta%20data/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/choice"],"text":"Display Files grouped after metadata where one felt discomfort Group files by meta data \u00b6 Basic \u00b6 TABLE rows.file.link, rows.wellbeing.pain-type FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain Variants \u00b6 Add better readable table headers TABLE WITHOUT ID row.key AS \"Pain\", rows.file.link AS \"Dailys\", rows.wellbeing.pain-type AS \"Type of Pain\" FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain Replace pain numbers with textual information TABLE WITHOUT ID choice(row.key = 0, \"None\", choice(row.key = 1, \"Little\", choice(row.key = 2, \"Middle\", choice(row.key = 3, \"High\", row.key)))) AS \"Pain\", rows.file.link AS \"Dailys\", rows.wellbeing.pain-type AS \"Type of Pain\" FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain","title":"Group files by meta data"},{"location":"20%20Dataview%20Queries/Group%20files%20by%20meta%20data/#group-files-by-meta-data","text":"","title":"Group files by meta data"},{"location":"20%20Dataview%20Queries/Group%20files%20by%20meta%20data/#basic","text":"TABLE rows.file.link, rows.wellbeing.pain-type FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain","title":"Basic"},{"location":"20%20Dataview%20Queries/Group%20files%20by%20meta%20data/#variants","text":"Add better readable table headers TABLE WITHOUT ID row.key AS \"Pain\", rows.file.link AS \"Dailys\", rows.wellbeing.pain-type AS \"Type of Pain\" FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain Replace pain numbers with textual information TABLE WITHOUT ID choice(row.key = 0, \"None\", choice(row.key = 1, \"Little\", choice(row.key = 2, \"Middle\", choice(row.key = 3, \"High\", row.key)))) AS \"Pain\", rows.file.link AS \"Dailys\", rows.wellbeing.pain-type AS \"Type of Pain\" FROM #daily WHERE wellbeing.mood-notes = \"discomfort\" GROUP BY wellbeing.pain","title":"Variants"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/","tags":["dv/list","dv/from","dv/where","dv/groupby","dv/flatten","dv/join"],"text":"Group a list of files according to their metadata Grouped list of files by their metadata \u00b6 Tip After using a GROUP BY statement, results will be inside an object that looks like: - {key: groupName; rows: ArrayOfDataColumns} This means to refer to things in your TABLE/LIST after grouping, you should either use key , or rows.fieldName to access them. Basic \u00b6 List of files grouped by creation date: LIST rows.file.link FROM \"10 Example Data/books\" GROUP BY file.cday Variants \u00b6 Join grouped values into a string rather than a list \u00b6 LIST join(rows.file.link, \" | \") FROM \"10 Example Data/books\" GROUP BY file.cday Create a custom field using Flatten \u00b6 After grouping, it's usually only possible to display a single set of value under each group heading. In order to display something more complex, FLATTEN can be used to create a custom value that remains available after the GROUP BY . LIST rows.customValue FROM \"10 Example Data/books\" FLATTEN file.link + \" (\" + author + \")\" AS customValue GROUP BY \"**\" + file.cday + \"**\"","title":"Group list of files by metadata"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/#grouped-list-of-files-by-their-metadata","text":"Tip After using a GROUP BY statement, results will be inside an object that looks like: - {key: groupName; rows: ArrayOfDataColumns} This means to refer to things in your TABLE/LIST after grouping, you should either use key , or rows.fieldName to access them.","title":"Grouped list of files by their metadata"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/#basic","text":"List of files grouped by creation date: LIST rows.file.link FROM \"10 Example Data/books\" GROUP BY file.cday","title":"Basic"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/#join-grouped-values-into-a-string-rather-than-a-list","text":"LIST join(rows.file.link, \" | \") FROM \"10 Example Data/books\" GROUP BY file.cday","title":"Join grouped values into a string rather than a list"},{"location":"20%20Dataview%20Queries/Group%20list%20of%20files%20by%20metadata/#create-a-custom-field-using-flatten","text":"After grouping, it's usually only possible to display a single set of value under each group heading. In order to display something more complex, FLATTEN can be used to create a custom value that remains available after the GROUP BY . LIST rows.customValue FROM \"10 Example Data/books\" FLATTEN file.link + \" (\" + author + \")\" AS customValue GROUP BY \"**\" + file.cday + \"**\"","title":"Create a custom field using Flatten"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/","tags":["dv/list","dv/from"],"text":"Customize the output of a LIST query to fit your needs and to display more than one additional meta data value How to create custom outputs in queries \u00b6 String concatenation You can create custom outputs with something called string concatenation . Basically, that means that you are adding strings - texts - and meta data together to one output, just like numbers. How you do this looks always the same, for example: \"Hello! This is file \" + file.name The part in \"\" is a text, where you can type anything you want. Then, with a + , you can add to this text a meta data value, so it gets \"summed up\" and displayed as one value. You can add as many texts and variables as you want. See the examples below! Basic \u00b6 LIST \"from \" + author FROM #type/books With more elements LIST \"from \" + author + \" (Progress: \" + pagesRead + \"/\" + totalPages + \" pages)\" FROM #type/books Variants \u00b6 Add formatting \u00b6 LIST WITHOUT ID \"$\" + price + \" / **\" + file.name + \"** / \" + genre + \" / _\" + publisher + \"_\" FROM \"10 Example Data/games\" Usage in tables \u00b6 TABLE \"Call under: \" + contacts.phone AS \"Phone\" from \"10 Example Data/people\" Add HTML formatting \u00b6 TABLE contacts.phone + \"<br>\" + contacts.mail AS \"Contacts\", \"<span style='color:red'>\" + relationship + \"</span>\" AS \"Relationship\" from \"10 Example Data/people\" WHERE relationship","title":"How to create custom outputs in queries"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#how-to-create-custom-outputs-in-queries","text":"String concatenation You can create custom outputs with something called string concatenation . Basically, that means that you are adding strings - texts - and meta data together to one output, just like numbers. How you do this looks always the same, for example: \"Hello! This is file \" + file.name The part in \"\" is a text, where you can type anything you want. Then, with a + , you can add to this text a meta data value, so it gets \"summed up\" and displayed as one value. You can add as many texts and variables as you want. See the examples below!","title":"How to create custom outputs in queries"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#basic","text":"LIST \"from \" + author FROM #type/books With more elements LIST \"from \" + author + \" (Progress: \" + pagesRead + \"/\" + totalPages + \" pages)\" FROM #type/books","title":"Basic"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#add-formatting","text":"LIST WITHOUT ID \"$\" + price + \" / **\" + file.name + \"** / \" + genre + \" / _\" + publisher + \"_\" FROM \"10 Example Data/games\"","title":"Add formatting"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#usage-in-tables","text":"TABLE \"Call under: \" + contacts.phone AS \"Phone\" from \"10 Example Data/people\"","title":"Usage in tables"},{"location":"20%20Dataview%20Queries/How%20to%20create%20custom%20outputs%20in%20queries/#add-html-formatting","text":"TABLE contacts.phone + \"<br>\" + contacts.mail AS \"Contacts\", \"<span style='color:red'>\" + relationship + \"</span>\" AS \"Relationship\" from \"10 Example Data/people\" WHERE relationship","title":"Add HTML formatting"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/","tags":["dv/TABLE","dv/FROM","dv/split","dv/join","dv/choice","dv/length","dv/list"],"text":"Limit not only result pages, but also their meta data values to a certain maximum Contributed by via Discord Limit meta data to a maximal amount \u00b6 Basic \u00b6 LIMIT data command If you want to limit your set of result pages , you can use LIMIT for this. See the documentation . This page concentrates on the question of how to limit meta data fields, i.e. outlinks, you get back for a page result. Need a unused character For the following code to work, you need to declare a UTF-8 character that is not used in your meta data value. Otherwise, you'll end up with broken data. TABLE split(join(file.outlinks, \"\ufffd\"),\"\ufffd\",3) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\" Variants \u00b6 Only join and split if length is greater 3 \u00b6 This way you won't end up with empty bullet points in files with no outlinks TABLE choice(length(file.outlinks) <= 3, file.outlinks, split(join(file.outlinks, \"\ufffd\"),\"\ufffd\",3)) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\" Do not rely on a unused character \u00b6 For the method above to work, you need to settle down on a character that is absolutely not in use for the value you want to limit. Alternatively, you can use the following approach - this is safer, but gets more cumbersome if you want a high limit. TABLE choice(length(file.outlinks) <= 3, file.outlinks, list(file.outlinks[0], file.outlinks[1], file.outlinks[2])) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\" LIMIT 5","title":"Limit meta data to a maximal amount"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/#limit-meta-data-to-a-maximal-amount","text":"","title":"Limit meta data to a maximal amount"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/#basic","text":"LIMIT data command If you want to limit your set of result pages , you can use LIMIT for this. See the documentation . This page concentrates on the question of how to limit meta data fields, i.e. outlinks, you get back for a page result. Need a unused character For the following code to work, you need to declare a UTF-8 character that is not used in your meta data value. Otherwise, you'll end up with broken data. TABLE split(join(file.outlinks, \"\ufffd\"),\"\ufffd\",3) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/#only-join-and-split-if-length-is-greater-3","text":"This way you won't end up with empty bullet points in files with no outlinks TABLE choice(length(file.outlinks) <= 3, file.outlinks, split(join(file.outlinks, \"\ufffd\"),\"\ufffd\",3)) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\"","title":"Only join and split if length is greater 3"},{"location":"20%20Dataview%20Queries/Limit%20meta%20data%20to%20a%20maximal%20amount/#do-not-rely-on-a-unused-character","text":"For the method above to work, you need to settle down on a character that is absolutely not in use for the value you want to limit. Alternatively, you can use the following approach - this is safer, but gets more cumbersome if you want a high limit. TABLE choice(length(file.outlinks) <= 3, file.outlinks, list(file.outlinks[0], file.outlinks[1], file.outlinks[2])) As \"Outlinks (first 3)\" FROM \"30 Dataview Resources\" LIMIT 5","title":"Do not rely on a unused character"},{"location":"20%20Dataview%20Queries/List%20all%20files%20with%20missing%20category%20tag%20or%20empty%20meta%20data%20field/","tags":["dv/contains","dv/list","dv/from","dv/where","dv/length"],"text":"Find files that are missing required meta data, like a category tag or a meta data field that should have a value List all files with missing category tag \u00b6 Basic \u00b6 Look for missing category tags LIST FROM \"10 Example Data/books\" WHERE !contains(file.tags, \"#type/\") Look for empty, but required meta data LIST FROM \"10 Example Data/books\" WHERE !author Variants \u00b6 Check for empty meta data fields that are lists \u00b6 Use case This is handy when you prefill your yaml frontmatter, i.e. via a template, with something like genres: - `genres` is _not_ empty in this case and won't be found via `WHERE !genres` LIST FROM \"10 Example Data/books\" WHERE !genres OR (length(genres) = 1 AND contains(genres, null))","title":"List all files with missing category tag or empty meta data field"},{"location":"20%20Dataview%20Queries/List%20all%20files%20with%20missing%20category%20tag%20or%20empty%20meta%20data%20field/#list-all-files-with-missing-category-tag","text":"","title":"List all files with missing category tag"},{"location":"20%20Dataview%20Queries/List%20all%20files%20with%20missing%20category%20tag%20or%20empty%20meta%20data%20field/#basic","text":"Look for missing category tags LIST FROM \"10 Example Data/books\" WHERE !contains(file.tags, \"#type/\") Look for empty, but required meta data LIST FROM \"10 Example Data/books\" WHERE !author","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20files%20with%20missing%20category%20tag%20or%20empty%20meta%20data%20field/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20all%20files%20with%20missing%20category%20tag%20or%20empty%20meta%20data%20field/#check-for-empty-meta-data-fields-that-are-lists","text":"Use case This is handy when you prefill your yaml frontmatter, i.e. via a template, with something like genres: - `genres` is _not_ empty in this case and won't be found via `WHERE !genres` LIST FROM \"10 Example Data/books\" WHERE !genres OR (length(genres) = 1 AND contains(genres, null))","title":"Check for empty meta data fields that are lists"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20containing%20a%20certain%20tag/","tags":["dv/list","dv/from","dv/where","dv/flatten","dv/contains"],"text":"List all bullet points that contain a certain tag List all list items containing a certain tag \u00b6 Basic \u00b6 LIST WITHOUT ID L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\")","title":"List all list items containing a certain tag"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20containing%20a%20certain%20tag/#list-all-list-items-containing-a-certain-tag","text":"","title":"List all list items containing a certain tag"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20containing%20a%20certain%20tag/#basic","text":"LIST WITHOUT ID L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\")","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/","tags":["dv/list","dv/from","dv/where","dv/groupby","dv/flatten","dv/icontains"],"text":"List all bullet points that contain a specific word List all list items with a certain word \u00b6 Basic \u00b6 List all bullet points that contain the word \"ipsum\" LIST L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") Variants \u00b6 list without file link \u00b6 LIST WITHOUT ID L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") list - grouping by file \u00b6 LIST rows.L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") GROUP BY file.link","title":"List all list items with a certain word"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/#list-all-list-items-with-a-certain-word","text":"","title":"List all list items with a certain word"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/#basic","text":"List all bullet points that contain the word \"ipsum\" LIST L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\")","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/#list-without-file-link","text":"LIST WITHOUT ID L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\")","title":"list without file link"},{"location":"20%20Dataview%20Queries/List%20all%20list%20items%20with%20a%20certain%20word/#list-grouping-by-file","text":"LIST rows.L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") GROUP BY file.link","title":"list - grouping by file"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/","tags":["dv/dataviewjs","dvjs/pages","dvjs/list","dvjs/table","dvjs/array"],"text":"List all available meta data keys in your vault, to i.e. check which ones are duplicated or unused. List all meta data available in your vault \u00b6 Basic \u00b6 Keys in lower case and without spaces Keys are listed in lower case here. Due to the fact that dataview saves a \"sanitized\" meta data key thats all lower-case, keys containing capitalized letters would be duplicated. So TotalPages will show up as totalpages . The same counts for keys that contains spaces: The sanitized version uses dashes instead, so go to sleep will show up as go-to-sleep const metadata = []; dv.pages().forEach(page => { Object.keys(page).forEach(key => { key = key.toLowerCase().replaceAll(\" \", \"-\") if (key === 'file' || metadata.indexOf(key) >= 0) return; metadata.push(key) }) }) dv.list(metadata.sort()) Variants \u00b6 Rendering a table with all meta data fields and the files they are contained in \u00b6 Memory intensive calculation Depending on the size of your vault and meta data usage, this query can cause your vault to freeze or crash. If you have a lot of data, better use the next variant that only shows up to 5 containing pages and is less straining on your computer. Add dataviewjs to code block This query is disabled by default, otherwise opening up this page would take quite some time. If you want to see the result - or use the query in your own vault, be sure to add a dataviewjs right on the first three backticks to enable it. const metadataMap = {}; dv.pages().forEach(page => { Object.keys(page).forEach(metadata => { metadata = metadata.toLowerCase().replaceAll(\" \", \"-\") if (metadata === 'file') return; if (!metadataMap[metadata]) { metadataMap[metadata] = [] } if (!metadataMap[metadata].some(l => l.path === page.file.link.path)) { metadataMap[metadata].push(page.file.link); } }) }) dv.table([\"meta data\", \"pages\"], Object.keys(metadataMap).map(key => [key, metadataMap[key]])) Rendering a table with all meta data fields and the first 5 files they are contained in \u00b6 Memory intensive calculation While this query is easier on your memory than the one listing all pages, it's still quite hungry. If the query does not render, try to reduce pagelimit to a smaller number. const pagelimit = 5; const metadataMap = {}; dv.pages().forEach(page => { Object.keys(page).forEach(metadata => { if (metadata === 'file') return; metadata = metadata.toLowerCase().replaceAll(\" \", \"-\") if (!metadataMap[metadata]) { metadataMap[metadata] = [] } if (!metadataMap[metadata].some(l => l.path === page.file.link.path)) { metadataMap[metadata].push(page.file.link); } }) }) dv.table([\"meta data\", \"page count\", `pages (first ${pagelimit})`], Object.keys(metadataMap).sort().map(key => [key, metadataMap[key].length, dv.array(metadataMap[key]).limit(pagelimit)]))","title":"List all meta data available in your vault"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/#list-all-meta-data-available-in-your-vault","text":"","title":"List all meta data available in your vault"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/#basic","text":"Keys in lower case and without spaces Keys are listed in lower case here. Due to the fact that dataview saves a \"sanitized\" meta data key thats all lower-case, keys containing capitalized letters would be duplicated. So TotalPages will show up as totalpages . The same counts for keys that contains spaces: The sanitized version uses dashes instead, so go to sleep will show up as go-to-sleep const metadata = []; dv.pages().forEach(page => { Object.keys(page).forEach(key => { key = key.toLowerCase().replaceAll(\" \", \"-\") if (key === 'file' || metadata.indexOf(key) >= 0) return; metadata.push(key) }) }) dv.list(metadata.sort())","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/#rendering-a-table-with-all-meta-data-fields-and-the-files-they-are-contained-in","text":"Memory intensive calculation Depending on the size of your vault and meta data usage, this query can cause your vault to freeze or crash. If you have a lot of data, better use the next variant that only shows up to 5 containing pages and is less straining on your computer. Add dataviewjs to code block This query is disabled by default, otherwise opening up this page would take quite some time. If you want to see the result - or use the query in your own vault, be sure to add a dataviewjs right on the first three backticks to enable it. const metadataMap = {}; dv.pages().forEach(page => { Object.keys(page).forEach(metadata => { metadata = metadata.toLowerCase().replaceAll(\" \", \"-\") if (metadata === 'file') return; if (!metadataMap[metadata]) { metadataMap[metadata] = [] } if (!metadataMap[metadata].some(l => l.path === page.file.link.path)) { metadataMap[metadata].push(page.file.link); } }) }) dv.table([\"meta data\", \"pages\"], Object.keys(metadataMap).map(key => [key, metadataMap[key]]))","title":"Rendering a table with all meta data fields and the files they are contained in"},{"location":"20%20Dataview%20Queries/List%20all%20meta%20data%20available%20in%20your%20vault/#rendering-a-table-with-all-meta-data-fields-and-the-first-5-files-they-are-contained-in","text":"Memory intensive calculation While this query is easier on your memory than the one listing all pages, it's still quite hungry. If the query does not render, try to reduce pagelimit to a smaller number. const pagelimit = 5; const metadataMap = {}; dv.pages().forEach(page => { Object.keys(page).forEach(metadata => { if (metadata === 'file') return; metadata = metadata.toLowerCase().replaceAll(\" \", \"-\") if (!metadataMap[metadata]) { metadataMap[metadata] = [] } if (!metadataMap[metadata].some(l => l.path === page.file.link.path)) { metadataMap[metadata].push(page.file.link); } }) }) dv.table([\"meta data\", \"page count\", `pages (first ${pagelimit})`], Object.keys(metadataMap).sort().map(key => [key, metadataMap[key].length, dv.array(metadataMap[key]).limit(pagelimit)]))","title":"Rendering a table with all meta data fields and the first 5 files they are contained in"},{"location":"20%20Dataview%20Queries/List%20all%20not%20referenced%20attachments/","tags":["dv/dataviewjs","dvjs/pages","dvjs/filter","dvjs/list","dvjs/fileLink","dvjs/array","dvjs/map"],"text":"List all attachments that are not linked anywhere List all not referenced attachments \u00b6 Basic \u00b6 const allNonMdFiles = app.vault.getFiles().filter(file => file.extension !== 'md') const allNonMdOutlinks = dv.pages().file.outlinks.path.filter(link => !link.endsWith('.md')) const notReferenced = allNonMdFiles.filter(file => !allNonMdOutlinks.includes(file.path)); dv.list(dv.array(notReferenced).map(link => dv.fileLink(link.path))) Variants \u00b6 Be able to specify file endings to ignore and show a callout if no result is found // add all extensions you want to ignore to the array, i.e. [\"md\", \"js\", \"css\"] const allNonMdFiles = app.vault.getFiles().filter(file => ![\"md\"].includes(file.extension)) const allNonMdOutlinks = dv.pages().file.outlinks.path.filter(link => !link.endsWith('.md')) const notReferenced = allNonMdFiles.filter(file => !allNonMdOutlinks.includes(file.path)); if (!notReferenced.length) { dv.span(`> [!done] All good! No unused attachments found :) `) } dv.list(dv.array(notReferenced).map(link => dv.fileLink(link.path)))","title":"List all not referenced attachments"},{"location":"20%20Dataview%20Queries/List%20all%20not%20referenced%20attachments/#list-all-not-referenced-attachments","text":"","title":"List all not referenced attachments"},{"location":"20%20Dataview%20Queries/List%20all%20not%20referenced%20attachments/#basic","text":"const allNonMdFiles = app.vault.getFiles().filter(file => file.extension !== 'md') const allNonMdOutlinks = dv.pages().file.outlinks.path.filter(link => !link.endsWith('.md')) const notReferenced = allNonMdFiles.filter(file => !allNonMdOutlinks.includes(file.path)); dv.list(dv.array(notReferenced).map(link => dv.fileLink(link.path)))","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20not%20referenced%20attachments/#variants","text":"Be able to specify file endings to ignore and show a callout if no result is found // add all extensions you want to ignore to the array, i.e. [\"md\", \"js\", \"css\"] const allNonMdFiles = app.vault.getFiles().filter(file => ![\"md\"].includes(file.extension)) const allNonMdOutlinks = dv.pages().file.outlinks.path.filter(link => !link.endsWith('.md')) const notReferenced = allNonMdFiles.filter(file => !allNonMdOutlinks.includes(file.path)); if (!notReferenced.length) { dv.span(`> [!done] All good! No unused attachments found :) `) } dv.list(dv.array(notReferenced).map(link => dv.fileLink(link.path)))","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20all%20open%20projects%20with%20a%20emoji%20age%20indicator/","tags":["dv/table","dv/from","dv/where","dv/date","dvjs/where","dvjs/pages","dvjs/mutate","dvjs/table","dv/dataviewjs"],"text":"Shows a table with all open project and a emoji score how long these projects are already open List all open projects with a emoji age indicator \u00b6 Basic \u00b6 TABLE \"\ud83d\ude21\" * (date(now) - date(started)).weeks AS \"Score\" FROM \"10 Example Data/projects\" WHERE status != \"finished\" Variants \u00b6 Use different emojis for certain timespans \u00b6 const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p.status !== undefined && p.status != \"finished\") .mutate(p => { p.age = p.started && p.started instanceof dv.luxon.DateTime ? dv.luxon.Duration.fromMillis(Date.now() - p.started.toMillis()) : null p.emojiAgeScore = getEmojiScore(p) }) dv.table([\"Score\", \"Project\", \"Started\", \"Age\"], projects.map(p => [p.emojiAgeScore, p.file.link, p.started, p.age ? p.age.toFormat(\"y'y' M'm' w'w'\") : 'N/A'])) function getEmojiScore(p) { if (!p.age || !(p.age instanceof dv.luxon.Duration)) { return \"\" } const age = p.age.shiftTo('months').toObject() let score = \"\"; score += addEmojis(\"\ud83d\udc7f\", age.months / 6) score += addEmojis(\"\ud83d\ude21\", (age.months % 6) / 3) score += addEmojis(\"\ud83d\ude12\", (age.months % 6 % 3)) return score; } function addEmojis(emoji, max) { let emojis = \"\"; for (let i = 1; i < Math.floor(max); i++) emojis += emoji; return emojis; }","title":"List all open projects with a emoji age indicator"},{"location":"20%20Dataview%20Queries/List%20all%20open%20projects%20with%20a%20emoji%20age%20indicator/#list-all-open-projects-with-a-emoji-age-indicator","text":"","title":"List all open projects with a emoji age indicator"},{"location":"20%20Dataview%20Queries/List%20all%20open%20projects%20with%20a%20emoji%20age%20indicator/#basic","text":"TABLE \"\ud83d\ude21\" * (date(now) - date(started)).weeks AS \"Score\" FROM \"10 Example Data/projects\" WHERE status != \"finished\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20open%20projects%20with%20a%20emoji%20age%20indicator/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20all%20open%20projects%20with%20a%20emoji%20age%20indicator/#use-different-emojis-for-certain-timespans","text":"const projects = dv.pages('\"10 Example Data/projects\"') .where(p => p.status !== undefined && p.status != \"finished\") .mutate(p => { p.age = p.started && p.started instanceof dv.luxon.DateTime ? dv.luxon.Duration.fromMillis(Date.now() - p.started.toMillis()) : null p.emojiAgeScore = getEmojiScore(p) }) dv.table([\"Score\", \"Project\", \"Started\", \"Age\"], projects.map(p => [p.emojiAgeScore, p.file.link, p.started, p.age ? p.age.toFormat(\"y'y' M'm' w'w'\") : 'N/A'])) function getEmojiScore(p) { if (!p.age || !(p.age instanceof dv.luxon.Duration)) { return \"\" } const age = p.age.shiftTo('months').toObject() let score = \"\"; score += addEmojis(\"\ud83d\udc7f\", age.months / 6) score += addEmojis(\"\ud83d\ude21\", (age.months % 6) / 3) score += addEmojis(\"\ud83d\ude12\", (age.months % 6 % 3)) return score; } function addEmojis(emoji, max) { let emojis = \"\"; for (let i = 1; i < Math.floor(max); i++) emojis += emoji; return emojis; }","title":"Use different emojis for certain timespans"},{"location":"20%20Dataview%20Queries/List%20all%20tasks%20with%20a%20custom%20status/","tags":["dv/task","dv/from","dv/where","dv/sort","dv/limit","dv/groupby"],"text":"List all tasks that have a custom status (i.e. >) List all tasks with a custom status \u00b6 Basic \u00b6 TASK FROM \"10 Example Data/dailys\" WHERE status = \">\" Variants \u00b6 Show only the most recent 5 todos grouped after their file day The first SORT ( SORT file.day DESC ) sorts the TASKS you're getting so you have the most recent at top. The second SORT ( rows.file.day DESC ) sorts your groups to have Feb 5 at the top instead of Jan 30 - try removing it! TASK FROM \"10 Example Data/dailys\" WHERE status = \">\" SORT file.day DESC LIMIT 5 GROUP BY file.day SORT rows.file.day DESC","title":"List all tasks with a custom status"},{"location":"20%20Dataview%20Queries/List%20all%20tasks%20with%20a%20custom%20status/#list-all-tasks-with-a-custom-status","text":"","title":"List all tasks with a custom status"},{"location":"20%20Dataview%20Queries/List%20all%20tasks%20with%20a%20custom%20status/#basic","text":"TASK FROM \"10 Example Data/dailys\" WHERE status = \">\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20all%20tasks%20with%20a%20custom%20status/#variants","text":"Show only the most recent 5 todos grouped after their file day The first SORT ( SORT file.day DESC ) sorts the TASKS you're getting so you have the most recent at top. The second SORT ( rows.file.day DESC ) sorts your groups to have Feb 5 at the top instead of Jan 30 - try removing it! TASK FROM \"10 Example Data/dailys\" WHERE status = \">\" SORT file.day DESC LIMIT 5 GROUP BY file.day SORT rows.file.day DESC","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20bullet%20points%20from%20dailies%20of%20a%20specific%20date%20without%20year/","tags":["dv/LIST","dv/WHERE","dv/dateformat"],"text":"List all bullet points from a certain date while ignoring the year, i.e. for \"today last year\" retrospectives List bullet points from dailys of a specific date without year \u00b6 Basic \u00b6 LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\" Variants \u00b6 Description of Variant A - what does it differently? What do we achieve with that? \u00b6 Usage in dailies When used in a daily and your dailies are named in format YYYY-MM-DD , the part AND file.day.year != this.file.day.year will filter out the bullet points of the daily currently open. In the case of this example file it doesnt do anything, though. See 2022-02-17 for a working example. LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\" AND file.day.year != this.file.day.year","title":"List bullet points from dailies of a specific date without year"},{"location":"20%20Dataview%20Queries/List%20bullet%20points%20from%20dailies%20of%20a%20specific%20date%20without%20year/#list-bullet-points-from-dailys-of-a-specific-date-without-year","text":"","title":"List bullet points from dailys of a specific date without year"},{"location":"20%20Dataview%20Queries/List%20bullet%20points%20from%20dailies%20of%20a%20specific%20date%20without%20year/#basic","text":"LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20bullet%20points%20from%20dailies%20of%20a%20specific%20date%20without%20year/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20bullet%20points%20from%20dailies%20of%20a%20specific%20date%20without%20year/#description-of-variant-a-what-does-it-differently-what-do-we-achieve-with-that","text":"Usage in dailies When used in a daily and your dailies are named in format YYYY-MM-DD , the part AND file.day.year != this.file.day.year will filter out the bullet points of the daily currently open. In the case of this example file it doesnt do anything, though. See 2022-02-17 for a working example. LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\" AND file.day.year != this.file.day.year","title":"Description of Variant A - what does it differently? What do we achieve with that?"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/","tags":["dv/table","dv/from","dv/join","dv/min","dv/flatten","dv/groupby","dv/sort","dv/date","dv/limit","dv/contains"],"text":"List files a contact page is linked to as a contact log for this person Contributed by mnvwvnm via Discord List contacts with a person \u00b6 Basic \u00b6 Use on a contact page If you want to use this snippet on the contact page of the person directly, you can replace FROM [[person]] with FROM [](<#>) . See AB1908 as an example. If you want to look at all files, everywhere, skip the additional \"AND something\" in FROM. TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) AND \"10 Example Data/dailys\" Variants \u00b6 Show days since last contact \u00b6 TABLE WITHOUT ID file.link AS \"Contact notes\", file.day + \": **\" + T + \" days**\" AS \"Last contacts\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc Only show the most recent contact \u00b6 TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1 List contacts to a person without a person page \u00b6 If the person is a link to a nonexisting page: TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM [[Paul]] AND \"10 Example Data/dailys\" ... or if the person is a textual metadata field: TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM \"10 Example Data/dailys\" WHERE contains(person, \"Christa\")","title":"List contacts with a person"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#list-contacts-with-a-person","text":"","title":"List contacts with a person"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#basic","text":"Use on a contact page If you want to use this snippet on the contact page of the person directly, you can replace FROM [[person]] with FROM [](<#>) . See AB1908 as an example. If you want to look at all files, everywhere, skip the additional \"AND something\" in FROM. TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) AND \"10 Example Data/dailys\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#show-days-since-last-contact","text":"TABLE WITHOUT ID file.link AS \"Contact notes\", file.day + \": **\" + T + \" days**\" AS \"Last contacts\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc","title":"Show days since last contact"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#only-show-the-most-recent-contact","text":"TABLE WITHOUT ID file.link AS \"Contact note\", file.day + \": **\" + T + \" days**\" AS \"Last contact\" FROM [AB1908](<../10 Example Data/people/AB1908.md>) FLATTEN (date(today) - file.day).days AS T SORT file.day desc LIMIT 1","title":"Only show the most recent contact"},{"location":"20%20Dataview%20Queries/List%20contacts%20with%20a%20person/#list-contacts-to-a-person-without-a-person-page","text":"If the person is a link to a nonexisting page: TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM [[Paul]] AND \"10 Example Data/dailys\" ... or if the person is a textual metadata field: TABLE WITHOUT ID file.link AS \"Contact note\", day AS \"Contact date\" FROM \"10 Example Data/dailys\" WHERE contains(person, \"Christa\")","title":"List contacts to a person without a person page"},{"location":"20%20Dataview%20Queries/List%20files%20or%20metadata%20starting%20with%20a%20certain%20letter/","tags":["dv/list","dv/from","dv/where"],"text":"List filenames or files with metadata values that start with a specific character List files or metadata starting with a certain letter \u00b6 Basic \u00b6 For filenames: LIST FROM \"10 Example Data\" WHERE file.name[0] = \"A\" For metadata fields: LIST FROM \"10 Example Data\" WHERE author[0] = \"B\"","title":"List files or metadata starting with a certain letter"},{"location":"20%20Dataview%20Queries/List%20files%20or%20metadata%20starting%20with%20a%20certain%20letter/#list-files-or-metadata-starting-with-a-certain-letter","text":"","title":"List files or metadata starting with a certain letter"},{"location":"20%20Dataview%20Queries/List%20files%20or%20metadata%20starting%20with%20a%20certain%20letter/#basic","text":"For filenames: LIST FROM \"10 Example Data\" WHERE file.name[0] = \"A\" For metadata fields: LIST FROM \"10 Example Data\" WHERE author[0] = \"B\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20most%20recent%20meta%20data%20value%20that%20contains%20a%20certain%20phrase/","tags":["dv/list","dv/from","dv/where","dv/sort","dv/limit","dv/inline","dvjs/pages","dvjs/where","dvjs/sort","dvjs/limit","dvjs/flatMap","dvjs/array","dvjs/last","dvjs/span"],"text":"List the most recent contact with a certain person, or the most recent day you baked banana cake, or made a certain type of sports, for example. Contributed via Discord List most recent meta data value that contains a certain phrase \u00b6 Basic \u00b6 LIST met FROM \"10 Example Data/dailys\" WHERE contains(met, \"Sophie\") SORT file.name DESC LIMIT 1 Variants \u00b6 As an javascript inline field \u00b6 Usage A inline query can be i.e. used as a field for the Kanban Board Plugin $=const notes = dv.pages('\"10 Example Data/dailys\"').where(p => p.met).where(p => String(p.met).includes(\"Sophie\")).sort((p) => p.file.name, 'desc').limit(1); if (notes.length) { const content = notes.flatMap(m => dv.array(m.met)).where(m => m.includes(\"Sophie\")).last(); dv.span(notes[0].file.link + \": \" + content); } When editing this, it can be helpful to put it into a regular dataviewjs block while editing for better readability: const notes = dv.pages('\"10 Example Data/dailys\"') .where(p => p.met) .where(p => String(p.met) .includes(\"Sophie\")) .sort((p) => p.file.name, 'desc') .limit(1); if (notes.length) { const content = notes .flatMap(m => dv.array(m.met)).where(m => m.includes(\"Sophie\")) .last(); dv.span(notes[0].file.link + \": \" + content); }","title":"List most recent meta data value that contains a certain phrase"},{"location":"20%20Dataview%20Queries/List%20most%20recent%20meta%20data%20value%20that%20contains%20a%20certain%20phrase/#list-most-recent-meta-data-value-that-contains-a-certain-phrase","text":"","title":"List most recent meta data value that contains a certain phrase"},{"location":"20%20Dataview%20Queries/List%20most%20recent%20meta%20data%20value%20that%20contains%20a%20certain%20phrase/#basic","text":"LIST met FROM \"10 Example Data/dailys\" WHERE contains(met, \"Sophie\") SORT file.name DESC LIMIT 1","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20most%20recent%20meta%20data%20value%20that%20contains%20a%20certain%20phrase/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20most%20recent%20meta%20data%20value%20that%20contains%20a%20certain%20phrase/#as-an-javascript-inline-field","text":"Usage A inline query can be i.e. used as a field for the Kanban Board Plugin $=const notes = dv.pages('\"10 Example Data/dailys\"').where(p => p.met).where(p => String(p.met).includes(\"Sophie\")).sort((p) => p.file.name, 'desc').limit(1); if (notes.length) { const content = notes.flatMap(m => dv.array(m.met)).where(m => m.includes(\"Sophie\")).last(); dv.span(notes[0].file.link + \": \" + content); } When editing this, it can be helpful to put it into a regular dataviewjs block while editing for better readability: const notes = dv.pages('\"10 Example Data/dailys\"') .where(p => p.met) .where(p => String(p.met) .includes(\"Sophie\")) .sort((p) => p.file.name, 'desc') .limit(1); if (notes.length) { const content = notes .flatMap(m => dv.array(m.met)).where(m => m.includes(\"Sophie\")) .last(); dv.span(notes[0].file.link + \": \" + content); }","title":"As an javascript inline field"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/","tags":["dv/dataviewjs","dv/table","dv/from","dv/flatten","dv/where","dv/groupby","dvjs/flatMap","dvjs/sort","dvjs/list","dvjs/table"],"text":"shows all unresolved links (links to non existing pages), optionally with the files containing them Basic query contributed via Discord and Discord List non existing links \u00b6 Basic \u00b6 As DQL : TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"10 Example Data\" FLATTEN file.outlinks as outlinks WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks As dataviewjs: (for a more similar result like the DQL solution, see variant \"List the files the unresolved link is contained in\") const res = Object.values(app.metadataCache.unresolvedLinks) .flatMap(unresolved => Object.keys(unresolved)) .sort(); const resSet = new Set(res).values(); dv.list(resSet); Variants \u00b6 List the files the unresolved link is contained in \u00b6 See Basic -> DQL for a pure DQL version of this result const unresolvedLinksMap = app.metadataCache.unresolvedLinks const res = {} for (let page in unresolvedLinksMap) { const unresolved = Object.keys(unresolvedLinksMap[page]); if (unresolved.length === 0) continue; for (let link of unresolved) { if (!res[link]) res[link] = {link, usages: []} res[link].usages.push(dv.fileLink(page)) } } dv.table([\"Unresolved Link\", \"Contained in\"], Object.values(res).map(l => [dv.fileLink(l.link), l.usages])); Sort the results by count of references \u00b6 This version sorts the unresolved links by the count on how much they appear in other files. It also shows a direct file link to create the file and condenses the references for easier viewing. const unresolvedLinksMap = app.metadataCache.unresolvedLinks const res = {} for (let page in unresolvedLinksMap) { const unresolved = Object.keys(unresolvedLinksMap[page]); if (unresolved.length === 0) { continue; } for (let link of unresolved) { if (!res[link]) { res[link] = {link, usages: []} } res[link].usages.push(dv.fileLink(page)) } } const rows = Object.values(res) .map(l => [dv.fileLink(l.link), l.usages.join(' \u00b7 '), l.usages.length]) .sort((a, b) => a[2] > b[2] ? -1 : 1) dv.table( [\"Unresolved Link\", \"Contained in\", \"Count\"], rows ); List only unresolved links from a specific folder meeting specific criteria \u00b6 As DQL \u00b6 TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"10 Example Data\" FLATTEN file.outlinks as outlinks WHERE startswith(meta(outlinks).path, \"B\") AND length(meta(outlinks).path) > 3 WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks As DataviewJS \u00b6 Limitation when filtering unresolved links in DataviewJS The second filter only works limited. When a file contains two unresolved links, i.e. \"Fernando\" and \"Bob\" and you're filtering after \"Bob\", you'll still end up with \"Fernando\" in the result, too - because they are both referenced from the same file and Bob's availability will keep the file and all its unresolved links in the filtered set. In order to fix that, it'd be necessary to filter out the unresolvedLinks array and map it back to the object that'll be processed. let result = {}; function process(referingFile, unresolvedLinks) { Object.keys(unresolvedLinks).forEach(function (link) { link = dv.fileLink(link); if (!result[link]) result[link] = []; result[link].push(dv.fileLink(referingFile)); }); } Object.entries(dv.app.metadataCache.unresolvedLinks) .filter(([referingFile]) => { return referingFile.startsWith(\"10 Example Data/dailys\") }) .filter(([_, unresolvedLinks]) => { return Object.keys(unresolvedLinks) .filter(link => link.startsWith(\"B\") && link.length > 3) .length }) .forEach(([referingFile, unresolvedLink]) => process(referingFile, unresolvedLink)); dv.table( [\"Non existing notes\", \"Linked from\"], Object.entries(result).map(([unresolvedLink, referingFiles]) => [unresolvedLink, referingFiles.join(\" \u2022 \")]) ); List unresolved links, sorted by name, excluding certain folders and notes \u00b6 As DataviewJS \u00b6 let result = {}; function process(referingFile, unresolvedLinks) { Object.keys(unresolvedLinks).forEach(function (link) { link = dv.fileLink(link); if (!result[link]) result[link] = []; result[link].push(dv.fileLink(referingFile)); }); } Object.entries(dv.app.metadataCache.unresolvedLinks) .filter(([referingFile]) => { return !referingFile.startsWith(\"00 Meta\") && !referingFile.startsWith(\"30 Dataview Resources/31 Query Overviews/Use Case Overview\") }) .forEach(([referingFile, unresolvedLink]) => process(referingFile, unresolvedLink)); const rows = Object.entries(result) .map(([unresolvedLink, referingFiles]) => [unresolvedLink, referingFiles]) .sort((a, b) => a[0] > b[0] ? 1 : -1) dv.table( [\"Unresolved Link\", \"Contained in\"], rows );","title":"List non existing, linked pages"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#list-non-existing-links","text":"","title":"List non existing links"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#basic","text":"As DQL : TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"10 Example Data\" FLATTEN file.outlinks as outlinks WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks As dataviewjs: (for a more similar result like the DQL solution, see variant \"List the files the unresolved link is contained in\") const res = Object.values(app.metadataCache.unresolvedLinks) .flatMap(unresolved => Object.keys(unresolved)) .sort(); const resSet = new Set(res).values(); dv.list(resSet);","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#list-the-files-the-unresolved-link-is-contained-in","text":"See Basic -> DQL for a pure DQL version of this result const unresolvedLinksMap = app.metadataCache.unresolvedLinks const res = {} for (let page in unresolvedLinksMap) { const unresolved = Object.keys(unresolvedLinksMap[page]); if (unresolved.length === 0) continue; for (let link of unresolved) { if (!res[link]) res[link] = {link, usages: []} res[link].usages.push(dv.fileLink(page)) } } dv.table([\"Unresolved Link\", \"Contained in\"], Object.values(res).map(l => [dv.fileLink(l.link), l.usages]));","title":"List the files the unresolved link is contained in"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#sort-the-results-by-count-of-references","text":"This version sorts the unresolved links by the count on how much they appear in other files. It also shows a direct file link to create the file and condenses the references for easier viewing. const unresolvedLinksMap = app.metadataCache.unresolvedLinks const res = {} for (let page in unresolvedLinksMap) { const unresolved = Object.keys(unresolvedLinksMap[page]); if (unresolved.length === 0) { continue; } for (let link of unresolved) { if (!res[link]) { res[link] = {link, usages: []} } res[link].usages.push(dv.fileLink(page)) } } const rows = Object.values(res) .map(l => [dv.fileLink(l.link), l.usages.join(' \u00b7 '), l.usages.length]) .sort((a, b) => a[2] > b[2] ? -1 : 1) dv.table( [\"Unresolved Link\", \"Contained in\", \"Count\"], rows );","title":"Sort the results by count of references"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#list-only-unresolved-links-from-a-specific-folder-meeting-specific-criteria","text":"","title":"List only unresolved links from a specific folder meeting specific criteria"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#as-dql","text":"TABLE WITHOUT ID key AS \"unresolved link\", rows.file.link AS \"referencing file\" FROM \"10 Example Data\" FLATTEN file.outlinks as outlinks WHERE startswith(meta(outlinks).path, \"B\") AND length(meta(outlinks).path) > 3 WHERE !(outlinks.file) AND !(contains(meta(outlinks).path, \"/\")) GROUP BY outlinks","title":"As DQL"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#as-dataviewjs","text":"Limitation when filtering unresolved links in DataviewJS The second filter only works limited. When a file contains two unresolved links, i.e. \"Fernando\" and \"Bob\" and you're filtering after \"Bob\", you'll still end up with \"Fernando\" in the result, too - because they are both referenced from the same file and Bob's availability will keep the file and all its unresolved links in the filtered set. In order to fix that, it'd be necessary to filter out the unresolvedLinks array and map it back to the object that'll be processed. let result = {}; function process(referingFile, unresolvedLinks) { Object.keys(unresolvedLinks).forEach(function (link) { link = dv.fileLink(link); if (!result[link]) result[link] = []; result[link].push(dv.fileLink(referingFile)); }); } Object.entries(dv.app.metadataCache.unresolvedLinks) .filter(([referingFile]) => { return referingFile.startsWith(\"10 Example Data/dailys\") }) .filter(([_, unresolvedLinks]) => { return Object.keys(unresolvedLinks) .filter(link => link.startsWith(\"B\") && link.length > 3) .length }) .forEach(([referingFile, unresolvedLink]) => process(referingFile, unresolvedLink)); dv.table( [\"Non existing notes\", \"Linked from\"], Object.entries(result).map(([unresolvedLink, referingFiles]) => [unresolvedLink, referingFiles.join(\" \u2022 \")]) );","title":"As DataviewJS"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#list-unresolved-links-sorted-by-name-excluding-certain-folders-and-notes","text":"","title":"List unresolved links, sorted by name, excluding certain folders and notes"},{"location":"20%20Dataview%20Queries/List%20non%20existing%2C%20linked%20pages/#as-dataviewjs_1","text":"let result = {}; function process(referingFile, unresolvedLinks) { Object.keys(unresolvedLinks).forEach(function (link) { link = dv.fileLink(link); if (!result[link]) result[link] = []; result[link].push(dv.fileLink(referingFile)); }); } Object.entries(dv.app.metadataCache.unresolvedLinks) .filter(([referingFile]) => { return !referingFile.startsWith(\"00 Meta\") && !referingFile.startsWith(\"30 Dataview Resources/31 Query Overviews/Use Case Overview\") }) .forEach(([referingFile, unresolvedLink]) => process(referingFile, unresolvedLink)); const rows = Object.entries(result) .map(([unresolvedLink, referingFiles]) => [unresolvedLink, referingFiles]) .sort((a, b) => a[0] > b[0] ? 1 : -1) dv.table( [\"Unresolved Link\", \"Contained in\"], rows );","title":"As DataviewJS"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/","tags":["dv/table","dv/from","dv/where","dv/flatten","dv/contains","dv/groupby","dv/length","dv/sort"],"text":"List pages that have the same value in a field than the current one, i.e. to find recipes that share ingredients Contributed via Discord List pages that share a meta data value with the current page \u00b6 Basic \u00b6 If you have a single value : LIST FROM \"10 Example Data/food\" WHERE recipe-type = this.recipe-type If you have a multi value field (list) : TABLE ings AS \"shared ingredient\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name Variants \u00b6 Show file only once as result \u00b6 TABLE rows.ings AS \"shared ingredient\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY file.link Group by ingredient instead of file/recipe \u00b6 TABLE WITHOUT ID ings AS \"shared ingredient\", rows.file.link AS \"recipes\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY ings Calculate count of meta data value matches \u00b6 TABLE WITHOUT ID ings AS \"shared ingredient\", count AS \"recipe count\", rows.file.link AS \"recipes\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY ings FLATTEN length(rows.file.link) as count","title":"List pages that share a meta data value with the current page"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#list-pages-that-share-a-meta-data-value-with-the-current-page","text":"","title":"List pages that share a meta data value with the current page"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#basic","text":"If you have a single value : LIST FROM \"10 Example Data/food\" WHERE recipe-type = this.recipe-type If you have a multi value field (list) : TABLE ings AS \"shared ingredient\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#show-file-only-once-as-result","text":"TABLE rows.ings AS \"shared ingredient\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY file.link","title":"Show file only once as result"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#group-by-ingredient-instead-of-filerecipe","text":"TABLE WITHOUT ID ings AS \"shared ingredient\", rows.file.link AS \"recipes\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY ings","title":"Group by ingredient instead of file/recipe"},{"location":"20%20Dataview%20Queries/List%20pages%20that%20share%20a%20meta%20data%20value%20with%20the%20current%20page/#calculate-count-of-meta-data-value-matches","text":"TABLE WITHOUT ID ings AS \"shared ingredient\", count AS \"recipe count\", rows.file.link AS \"recipes\" FROM \"10 Example Data/food\" WHERE ingredients FLATTEN ingredients as ings WHERE contains(this.ingredients, ings) AND file.name != this.file.name GROUP BY ings FLATTEN length(rows.file.link) as count","title":"Calculate count of meta data value matches"},{"location":"20%20Dataview%20Queries/List%20pages%20with%20due%20date%20and%20color%20those%20overdue/","tags":["dv/TABLE","dv/SORT","dv/choice","dv/date"],"text":"List all your assignments and highlight those that are overdue by coloring them in red List pages with due date and color those overdue \u00b6 Basic \u00b6 TABLE choice(due < date(today), \"<span style='color: red;'>\" + due + \"</span>\", due) AS \"Due\" from \"10 Example Data/assignments\" SORT due asc Variants \u00b6 Add an additional emoji in front of the link \u00b6 Useful when you display more meta data or sort after another property. TABLE WITHOUT ID choice(due < date(today), \"\ud83d\uded1 \" + file.link, \" \u26ab \" + file.link) AS \"Assignment\", received, class, choice(due < date(today), \"<span style='color: red;'>\" + due + \"</span>\", due) AS \"Due\" from \"10 Example Data/assignments\" SORT class asc","title":"List pages with due date and color those overdue"},{"location":"20%20Dataview%20Queries/List%20pages%20with%20due%20date%20and%20color%20those%20overdue/#list-pages-with-due-date-and-color-those-overdue","text":"","title":"List pages with due date and color those overdue"},{"location":"20%20Dataview%20Queries/List%20pages%20with%20due%20date%20and%20color%20those%20overdue/#basic","text":"TABLE choice(due < date(today), \"<span style='color: red;'>\" + due + \"</span>\", due) AS \"Due\" from \"10 Example Data/assignments\" SORT due asc","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20pages%20with%20due%20date%20and%20color%20those%20overdue/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20pages%20with%20due%20date%20and%20color%20those%20overdue/#add-an-additional-emoji-in-front-of-the-link","text":"Useful when you display more meta data or sort after another property. TABLE WITHOUT ID choice(due < date(today), \"\ud83d\uded1 \" + file.link, \" \u26ab \" + file.link) AS \"Assignment\", received, class, choice(due < date(today), \"<span style='color: red;'>\" + due + \"</span>\", due) AS \"Due\" from \"10 Example Data/assignments\" SORT class asc","title":"Add an additional emoji in front of the link"},{"location":"20%20Dataview%20Queries/List%20tasks%20that%20are%20due%20today%20or%20a%20specific%20day/","tags":["dv/TASK","dv/WHERE","dv/date","dv/contains"],"text":"List all tasks that have a duedate (a meta data) set and are due to a specific date or before List tasks that are due today or a specific day \u00b6 Basic \u00b6 Usage in daily notes When used in a daily note thats named in format YYYY-MM-DD , you can replace the specific date information ( date(\"2022-11-30\") ) with this.file.day TASK WHERE !completed AND duedate AND duedate <= date(\"2022-11-30\") AND contains(text, \"due\") Variants \u00b6 Show tasks that are due today or earlier \u00b6 TASK WHERE !completed AND duedate AND duedate <= date(today) AND contains(text, \"due\")","title":"List tasks that are due today or a specific day"},{"location":"20%20Dataview%20Queries/List%20tasks%20that%20are%20due%20today%20or%20a%20specific%20day/#list-tasks-that-are-due-today-or-a-specific-day","text":"","title":"List tasks that are due today or a specific day"},{"location":"20%20Dataview%20Queries/List%20tasks%20that%20are%20due%20today%20or%20a%20specific%20day/#basic","text":"Usage in daily notes When used in a daily note thats named in format YYYY-MM-DD , you can replace the specific date information ( date(\"2022-11-30\") ) with this.file.day TASK WHERE !completed AND duedate AND duedate <= date(\"2022-11-30\") AND contains(text, \"due\")","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20tasks%20that%20are%20due%20today%20or%20a%20specific%20day/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20tasks%20that%20are%20due%20today%20or%20a%20specific%20day/#show-tasks-that-are-due-today-or-earlier","text":"TASK WHERE !completed AND duedate AND duedate <= date(today) AND contains(text, \"due\")","title":"Show tasks that are due today or earlier"},{"location":"20%20Dataview%20Queries/List%20tasks%20under%20a%20heading/","tags":["dv/TASK","dv/FROM","dv/meta","dv/WHERE","dv/date"],"text":"Lists tasks under a heading. Useful if you have i.e. a \"Urgent\" heading in project files List tasks under a heading \u00b6 Basic \u00b6 TASK FROM \"10 Example Data/projects\" WHERE meta(section).subpath = \"Urgent\" Variants \u00b6 List tasks from a certain daily \u00b6 TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\" TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\"","title":"List tasks under a heading"},{"location":"20%20Dataview%20Queries/List%20tasks%20under%20a%20heading/#list-tasks-under-a-heading","text":"","title":"List tasks under a heading"},{"location":"20%20Dataview%20Queries/List%20tasks%20under%20a%20heading/#basic","text":"TASK FROM \"10 Example Data/projects\" WHERE meta(section).subpath = \"Urgent\"","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20tasks%20under%20a%20heading/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20tasks%20under%20a%20heading/#list-tasks-from-a-certain-daily","text":"TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\" TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\"","title":"List tasks from a certain daily"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/","tags":["dv/table","dv/max","dv/from","dv/where","dv/flatten","dv/groupby","dv/sort","dv/min","dv/choice"],"text":"Show all persons in your vault and when you had last contact with them Contributed by mnvwvnm - Thanks! List the last contact with every person \u00b6 Basic \u00b6 TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.day) AS \"Last contact\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC Variants \u00b6 Calculate elapsed days since last contact \u00b6 TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.link) AS \"Last contact\", min(rows.elapsedDays) + \" days\" AS \"Elapsed days\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN (date(today) - file.day).days AS elapsedDays FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC Show a graphical representation how long the last contact has passed \u00b6 TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.link) AS \"Last contact\", min(rows.elapsedDays) + \" days\" AS \"Elapsed days\", choice(min(rows.elapsedDays)<30, \"\ud83d\udfe2\", choice(min(rows.elapsedDays)<60, \"\ud83d\udfe1\", choice(min(rows.elapsedDays)<90, \"\ud83d\udfe0\", \"\u260e\ufe0f\"))) AS \"Return contact\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN (date(today) - file.day).days AS elapsedDays FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC","title":"List the last contact with every person"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/#list-the-last-contact-with-every-person","text":"","title":"List the last contact with every person"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/#basic","text":"TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.day) AS \"Last contact\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC","title":"Basic"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/#calculate-elapsed-days-since-last-contact","text":"TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.link) AS \"Last contact\", min(rows.elapsedDays) + \" days\" AS \"Elapsed days\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN (date(today) - file.day).days AS elapsedDays FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC","title":"Calculate elapsed days since last contact"},{"location":"20%20Dataview%20Queries/List%20the%20last%20contact%20with%20every%20person/#show-a-graphical-representation-how-long-the-last-contact-has-passed","text":"TABLE WITHOUT ID contactedPerson AS \"Person\", max(rows.file.link) AS \"Last contact\", min(rows.elapsedDays) + \" days\" AS \"Elapsed days\", choice(min(rows.elapsedDays)<30, \"\ud83d\udfe2\", choice(min(rows.elapsedDays)<60, \"\ud83d\udfe1\", choice(min(rows.elapsedDays)<90, \"\ud83d\udfe0\", \"\u260e\ufe0f\"))) AS \"Return contact\" FROM \"10 Example Data/dailys\" WHERE person FLATTEN (date(today) - file.day).days AS elapsedDays FLATTEN person AS contactedPerson GROUP BY contactedPerson SORT max(rows.file.day) DESC","title":"Show a graphical representation how long the last contact has passed"},{"location":"20%20Dataview%20Queries/Make%20a%20holiday%20planning%20with%20a%20bullet%20point%20list%20and%20the%20calendar%20view/","tags":["dv/calendar","dv/where","dv/flatten","dv/list","dv/sort"],"text":"Render a event-overview calendar when i.e. planning holidays Make a holiday planning with a bullet point list and the calendar view \u00b6 Basic \u00b6 Limitations The calendar is only for a rough overview and cannot display your events. The dot hover will always show you the whole page, instead of the concrete event happening. Some cool event [when:: 2022-08-14] Some cool event [when:: 2022-08-15] Some cool event happening later [when:: 2022-08-19] Some cool event happening later [when:: 2022-08-22] Some cool event [when:: 2022-08-18] Some cool event [when:: 2022-08-19] Some cool event [when:: 2022-08-19] Some cool event [when:: 2022-08-19] Second thing happening on 22th [when:: 2022-08-22] CALENDAR L.when FROM \"20 Dataview Queries/Make a holiday planning with a bullet point list and the calendar view\" FLATTEN file.lists AS L WHERE L.when It could be helpful to render a chronologically sorted List in addition: LIST WITHOUT ID L.text FROM \"20 Dataview Queries/Make a holiday planning with a bullet point list and the calendar view\" FLATTEN file.lists AS L WHERE L.when SORT L.when","title":"Make a holiday planning with a bullet point list and the calendar view"},{"location":"20%20Dataview%20Queries/Make%20a%20holiday%20planning%20with%20a%20bullet%20point%20list%20and%20the%20calendar%20view/#make-a-holiday-planning-with-a-bullet-point-list-and-the-calendar-view","text":"","title":"Make a holiday planning with a bullet point list and the calendar view"},{"location":"20%20Dataview%20Queries/Make%20a%20holiday%20planning%20with%20a%20bullet%20point%20list%20and%20the%20calendar%20view/#basic","text":"Limitations The calendar is only for a rough overview and cannot display your events. The dot hover will always show you the whole page, instead of the concrete event happening. Some cool event [when:: 2022-08-14] Some cool event [when:: 2022-08-15] Some cool event happening later [when:: 2022-08-19] Some cool event happening later [when:: 2022-08-22] Some cool event [when:: 2022-08-18] Some cool event [when:: 2022-08-19] Some cool event [when:: 2022-08-19] Some cool event [when:: 2022-08-19] Second thing happening on 22th [when:: 2022-08-22] CALENDAR L.when FROM \"20 Dataview Queries/Make a holiday planning with a bullet point list and the calendar view\" FLATTEN file.lists AS L WHERE L.when It could be helpful to render a chronologically sorted List in addition: LIST WITHOUT ID L.text FROM \"20 Dataview Queries/Make a holiday planning with a bullet point list and the calendar view\" FLATTEN file.lists AS L WHERE L.when SORT L.when","title":"Basic"},{"location":"20%20Dataview%20Queries/Mark%20all%20days%20in%20a%20calendar%20where%20you%20spent%20a%20certain%20amount%20of%20money/","tags":["dv/table","dv/from","dv/flatten","dv/where","dv/round","dv/sum","dv/map","dv/number","dv/regexreplace"],"text":"Marks all days in a calendar where you spent more than a money limit (i.e. 75) Mark all days in a calendar where you spent a certain amount of money \u00b6 Basic \u00b6 CALENDAR file.mtime FROM \"20 Dataview Queries\" FLATTEN round(sum(paid)) as SUM WHERE paid and SUM > 75 bought:: Nike shoes paid:: 99 bought:: Delicious Cake paid:: 7 Variants \u00b6 When using expenses in form of \"99 $\" \u00b6 ^8d9d50 [!info] You'll need to go back to Januray/Februrary 2022 to see the data CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN round(sum(map(paid, (x) => number(regexreplace(x, \" ?\\$\", \"\"))))) as SUM WHERE paid and SUM > 75 [!tip] When you try to write complex calendar queries, write a TABLE query first to make sure your query returns the results you're expecting. TABLE paid, SUM FROM \"10 Example Data/dailys\" FLATTEN round(sum(map(paid, (x) => number(regexreplace(x, \"\\$\", \"\"))))) as SUM WHERE paid and SUM > 75","title":"Mark all days in a calendar where you spent a certain amount of money"},{"location":"20%20Dataview%20Queries/Mark%20all%20days%20in%20a%20calendar%20where%20you%20spent%20a%20certain%20amount%20of%20money/#mark-all-days-in-a-calendar-where-you-spent-a-certain-amount-of-money","text":"","title":"Mark all days in a calendar where you spent a certain amount of money"},{"location":"20%20Dataview%20Queries/Mark%20all%20days%20in%20a%20calendar%20where%20you%20spent%20a%20certain%20amount%20of%20money/#basic","text":"CALENDAR file.mtime FROM \"20 Dataview Queries\" FLATTEN round(sum(paid)) as SUM WHERE paid and SUM > 75 bought:: Nike shoes paid:: 99 bought:: Delicious Cake paid:: 7","title":"Basic"},{"location":"20%20Dataview%20Queries/Mark%20all%20days%20in%20a%20calendar%20where%20you%20spent%20a%20certain%20amount%20of%20money/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Mark%20all%20days%20in%20a%20calendar%20where%20you%20spent%20a%20certain%20amount%20of%20money/#when-using-expenses-in-form-of-99","text":"^8d9d50 [!info] You'll need to go back to Januray/Februrary 2022 to see the data CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN round(sum(map(paid, (x) => number(regexreplace(x, \" ?\\$\", \"\"))))) as SUM WHERE paid and SUM > 75 [!tip] When you try to write complex calendar queries, write a TABLE query first to make sure your query returns the results you're expecting. TABLE paid, SUM FROM \"10 Example Data/dailys\" FLATTEN round(sum(map(paid, (x) => number(regexreplace(x, \"\\$\", \"\"))))) as SUM WHERE paid and SUM > 75","title":"When using expenses in form of \"99 $\""},{"location":"20%20Dataview%20Queries/Mark%20days%20that%20have%20unfinished%20todos/","tags":["dv/calendar","dv/from","dv/flatten","dv/where","dv/all","dv/map","dv/any"],"text":"Show a calender that marks all days with uncompleted tasks Mark days that have unfinished todos \u00b6 [!info] You'll need to go back to Januray/Februrary 2022 to see the data. Basic \u00b6 CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN all(map(file.tasks, (x) => x.completed)) AS \"allCompleted\" WHERE !allCompleted [!tip] When you try to write complex calendar queries, write a TABLE query first to make sure your query returns the results you're expecting. TABLE file.day, allCompleted FROM \"10 Example Data/dailys\" FLATTEN all(map(file.tasks, (x) => x.completed)) AS \"allCompleted\" WHERE allCompleted Variants \u00b6 If you use custom task status and want to see all without a status \u00b6 CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN any(map(file.tasks, (x) => x.status = \" \")) AS \"anyEmpty\" WHERE anyEmpty","title":"Mark days that have unfinished todos"},{"location":"20%20Dataview%20Queries/Mark%20days%20that%20have%20unfinished%20todos/#mark-days-that-have-unfinished-todos","text":"[!info] You'll need to go back to Januray/Februrary 2022 to see the data.","title":"Mark days that have unfinished todos"},{"location":"20%20Dataview%20Queries/Mark%20days%20that%20have%20unfinished%20todos/#basic","text":"CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN all(map(file.tasks, (x) => x.completed)) AS \"allCompleted\" WHERE !allCompleted [!tip] When you try to write complex calendar queries, write a TABLE query first to make sure your query returns the results you're expecting. TABLE file.day, allCompleted FROM \"10 Example Data/dailys\" FLATTEN all(map(file.tasks, (x) => x.completed)) AS \"allCompleted\" WHERE allCompleted","title":"Basic"},{"location":"20%20Dataview%20Queries/Mark%20days%20that%20have%20unfinished%20todos/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Mark%20days%20that%20have%20unfinished%20todos/#if-you-use-custom-task-status-and-want-to-see-all-without-a-status","text":"CALENDAR file.day FROM \"10 Example Data/dailys\" FLATTEN any(map(file.tasks, (x) => x.status = \" \")) AS \"anyEmpty\" WHERE anyEmpty","title":"If you use custom task status and want to see all without a status"},{"location":"20%20Dataview%20Queries/Multivalue%20YAML%20Frontmatter%20Field/","tags":["dv/table","dv/from","dv/where"],"text":"Display values from a multivalue YAML frontmatter field Multivalue YAML Frontmatter Field \u00b6 Basic \u00b6 TABLE wellbeing.mood, wellbeing.mood-notes FROM \"10 Example Data/dailys\" WHERE wellbeing.health > 2 Variants \u00b6 Add better readable table headers TABLE wellbeing.mood AS \"Mood\", wellbeing.mood-notes AS \"Mood Notes\" FROM \"10 Example Data/dailys\" WHERE wellbeing.health > 2","title":"Multivalue YAML Frontmatter Field"},{"location":"20%20Dataview%20Queries/Multivalue%20YAML%20Frontmatter%20Field/#multivalue-yaml-frontmatter-field","text":"","title":"Multivalue YAML Frontmatter Field"},{"location":"20%20Dataview%20Queries/Multivalue%20YAML%20Frontmatter%20Field/#basic","text":"TABLE wellbeing.mood, wellbeing.mood-notes FROM \"10 Example Data/dailys\" WHERE wellbeing.health > 2","title":"Basic"},{"location":"20%20Dataview%20Queries/Multivalue%20YAML%20Frontmatter%20Field/#variants","text":"Add better readable table headers TABLE wellbeing.mood AS \"Mood\", wellbeing.mood-notes AS \"Mood Notes\" FROM \"10 Example Data/dailys\" WHERE wellbeing.health > 2","title":"Variants"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/sort","dv/sum","dvjs/tryQuery"],"text":"Plot the results of a Category-Series structured DQL query (with an artibrary number of Series columns) on a line or bar chart. Plot a Category-Series dataset \u00b6 Warning - Extra plugin required This visualisation requires the Obsidian Charts plugin to implement the integration between Dataview and Charts.js . To minimise the need for additional plugins when browsing the example vault, images have been included alongside the JS code. Help - Query Structure For this type of chart, the query should return at least two columns (but unlimied additional columns are supported). The first column should represent the *X-Category* labels for the chart, and each subsequent column should represent a different data *Series*. The column name is used as the *Series* name on the chart. Basic \u00b6 Wellbeing chart by day (from daily notes) \u00b6 DQL Query Results \u00b6 TABLE WITHOUT ID file.name as \"Date\", wellbeing.mood as \"Mood\", wellbeing.health as \"Health\", wellbeing.pain as \"Pain\" FROM \"10 Example Data/dailys\" WHERE date(file.name).year = 2022 SORT file.name LIMIT 5 Chart Results \u00b6 DataviewJS \u00b6 ``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'line'; //bar or line let xAxis = \"xAxis: {type:'time', time: {unit: 'day'}}\"; //{type:'category'}\"; let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = true; //auto lables, or use list below var labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ file.name as \"Date\", \\ wellbeing.mood as \"Mood\", \\ wellbeing.health as \"Health\", \\ wellbeing.pain as \"Pain\" \\ FROM \"10 Example Data/dailys\" \\ WHERE date(file.name).year = 2022 \\ SORT file.name' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[0]); var allSeries = DQL.headers.slice(1); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < allSeries.length; i++) { let seriesName = allSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; var dataPoints = []; if (!autoLabels) { //map each datapoint to a label in the fixed array dataPoints = labels.map(l => { let labelIndex = allLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return allRows[labelIndex][i+1] } }) } else { //dataPoints already align with labels dataPoints = allRows.map(r => r[i+1]); } //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\"\"); if (showTable) { dv.table(DQL.headers, DQL.values) } ## Variants ### Average Wellbeing chart by day-of-week (from daily notes) #### DQL Query Results ``` dataview TABLE round(sum(MoodValues)/length(MoodValues), 1) AS Mood, round(sum(HealthValues)/length(HealthValues), 1) AS Health, round(sum(PainValues)/length(PainValues), 1) AS Pain FROM \"10 Example Data/dailys\" GROUP BY dateformat(date(file.name), \"ccc\") as \"DayOfWeek\" FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues FLATTEN list(filter(rows.wellbeing.health, (x) => x)) as HealthValues FLATTEN list(filter(rows.wellbeing.pain, (x) => x)) as PainValues SORT date(rows[0].file.name).weekday Tip - Calculating Averages DQL does not (currently) have an avg() function, however sum()/length() can be used. Tip - Using FLATTEN to Clean-up Input Data Its possible that individual daily notes will have some, but not all, of the three values above. In these cases sum(...) will return an error and the entire group will be omitted from results. Additionally, length(...) will count the rows even when no data is present. To sanitise the data before calculating the average, `FLATTEN` can be used to filter out any missing data and create new sanitised arrays to perform statistics on. This process could technically be done directly in the `TABLE` statement itself; however the query becomes much harder to read. The approach used here is: `FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues` Which effectively reads (from the inside out), as: take all the (unsanitised) values collected for mood, filter them to only give values that 'exist', put them back into a new list, and name that list MoodValues. The `TABLE` statement is then free to perform clean statistics on the new MoodValues list. Handling missing data before statistic functions isn't necessary in cases where you are sure the data will exist; or that no 'undefined' data will make it to the `sum()`, `min()`, `max()`, or `length()` functions. Chart Results \u00b6 DataviewJS \u00b6 ``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}}\"; let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = false; //auto lables, or use list below var labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE \\ round(sum(MoodValues)/length(MoodValues), 1) AS Mood, \\ round(sum(HealthValues)/length(HealthValues), 1) AS Health, \\ round(sum(PainValues)/length(PainValues), 1) AS Pain \\ FROM \"10 Example Data/dailys\" \\ GROUP BY dateformat(date(file.name), \"ccc\") as \"DayOfWeek\" \\ FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues \\ FLATTEN list(filter(rows.wellbeing.health, (x) => x)) as HealthValues \\ FLATTEN list(filter(rows.wellbeing.pain, (x) => x)) as PainValues \\ SORT date(rows[0].file.name).weekday' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[0]); var allSeries = DQL.headers.slice(1); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < allSeries.length; i++) { let seriesName = allSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; var dataPoints = []; if (!autoLabels) { //map each datapoint to a label in the fixed array dataPoints = labels.map(l => { let labelIndex = allLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return allRows[labelIndex][i+1] } }) } else { //dataPoints already align with labels dataPoints = allRows.map(r => r[i+1]); } //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\"\"); if (showTable) { dv.table(DQL.headers, DQL.values) } ```","title":"Plot a Category Series DQL query"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#plot-a-category-series-dataset","text":"Warning - Extra plugin required This visualisation requires the Obsidian Charts plugin to implement the integration between Dataview and Charts.js . To minimise the need for additional plugins when browsing the example vault, images have been included alongside the JS code. Help - Query Structure For this type of chart, the query should return at least two columns (but unlimied additional columns are supported). The first column should represent the *X-Category* labels for the chart, and each subsequent column should represent a different data *Series*. The column name is used as the *Series* name on the chart.","title":"Plot a Category-Series dataset"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#basic","text":"","title":"Basic"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#wellbeing-chart-by-day-from-daily-notes","text":"","title":"Wellbeing chart by day (from daily notes)"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#dql-query-results","text":"TABLE WITHOUT ID file.name as \"Date\", wellbeing.mood as \"Mood\", wellbeing.health as \"Health\", wellbeing.pain as \"Pain\" FROM \"10 Example Data/dailys\" WHERE date(file.name).year = 2022 SORT file.name LIMIT 5","title":"DQL Query Results"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#chart-results","text":"","title":"Chart Results"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#dataviewjs","text":"``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'line'; //bar or line let xAxis = \"xAxis: {type:'time', time: {unit: 'day'}}\"; //{type:'category'}\"; let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = true; //auto lables, or use list below var labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ file.name as \"Date\", \\ wellbeing.mood as \"Mood\", \\ wellbeing.health as \"Health\", \\ wellbeing.pain as \"Pain\" \\ FROM \"10 Example Data/dailys\" \\ WHERE date(file.name).year = 2022 \\ SORT file.name' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[0]); var allSeries = DQL.headers.slice(1); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < allSeries.length; i++) { let seriesName = allSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; var dataPoints = []; if (!autoLabels) { //map each datapoint to a label in the fixed array dataPoints = labels.map(l => { let labelIndex = allLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return allRows[labelIndex][i+1] } }) } else { //dataPoints already align with labels dataPoints = allRows.map(r => r[i+1]); } //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\"\"); if (showTable) { dv.table(DQL.headers, DQL.values) } ## Variants ### Average Wellbeing chart by day-of-week (from daily notes) #### DQL Query Results ``` dataview TABLE round(sum(MoodValues)/length(MoodValues), 1) AS Mood, round(sum(HealthValues)/length(HealthValues), 1) AS Health, round(sum(PainValues)/length(PainValues), 1) AS Pain FROM \"10 Example Data/dailys\" GROUP BY dateformat(date(file.name), \"ccc\") as \"DayOfWeek\" FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues FLATTEN list(filter(rows.wellbeing.health, (x) => x)) as HealthValues FLATTEN list(filter(rows.wellbeing.pain, (x) => x)) as PainValues SORT date(rows[0].file.name).weekday Tip - Calculating Averages DQL does not (currently) have an avg() function, however sum()/length() can be used. Tip - Using FLATTEN to Clean-up Input Data Its possible that individual daily notes will have some, but not all, of the three values above. In these cases sum(...) will return an error and the entire group will be omitted from results. Additionally, length(...) will count the rows even when no data is present. To sanitise the data before calculating the average, `FLATTEN` can be used to filter out any missing data and create new sanitised arrays to perform statistics on. This process could technically be done directly in the `TABLE` statement itself; however the query becomes much harder to read. The approach used here is: `FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues` Which effectively reads (from the inside out), as: take all the (unsanitised) values collected for mood, filter them to only give values that 'exist', put them back into a new list, and name that list MoodValues. The `TABLE` statement is then free to perform clean statistics on the new MoodValues list. Handling missing data before statistic functions isn't necessary in cases where you are sure the data will exist; or that no 'undefined' data will make it to the `sum()`, `min()`, `max()`, or `length()` functions.","title":"DataviewJS"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#chart-results_1","text":"","title":"Chart Results"},{"location":"20%20Dataview%20Queries/Plot%20a%20Category-Series%20DQL%20query/#dataviewjs_1","text":"``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}}\"; let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = false; //auto lables, or use list below var labels = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE \\ round(sum(MoodValues)/length(MoodValues), 1) AS Mood, \\ round(sum(HealthValues)/length(HealthValues), 1) AS Health, \\ round(sum(PainValues)/length(PainValues), 1) AS Pain \\ FROM \"10 Example Data/dailys\" \\ GROUP BY dateformat(date(file.name), \"ccc\") as \"DayOfWeek\" \\ FLATTEN list(filter(rows.wellbeing.mood, (x) => x)) as MoodValues \\ FLATTEN list(filter(rows.wellbeing.health, (x) => x)) as HealthValues \\ FLATTEN list(filter(rows.wellbeing.pain, (x) => x)) as PainValues \\ SORT date(rows[0].file.name).weekday' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[0]); var allSeries = DQL.headers.slice(1); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < allSeries.length; i++) { let seriesName = allSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; var dataPoints = []; if (!autoLabels) { //map each datapoint to a label in the fixed array dataPoints = labels.map(l => { let labelIndex = allLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return allRows[labelIndex][i+1] } }) } else { //dataPoints already align with labels dataPoints = allRows.map(r => r[i+1]); } //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\"\"); if (showTable) { dv.table(DQL.headers, DQL.values) } ```","title":"DataviewJS"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/sort"],"text":"Plot the results of a Series-Category-Value structured DQL query on a line or bar chart. Plot a Series-Category-Value dataset \u00b6 Warning - Extra plugin required This visualisation requires the Obsidian Charts plugin to implement the integration between Dataview and Charts.js . To minimise the need for additional plugins when browsing the example vault, images have been included alongside the JS code. Help - Query Structure For this type of chart, the query should return three columns representing the Series Name , X-Category , and Y-Value . To produce a table like this, often the best approach is to `GROUP BY` the first and second field in a combined way - then split these back into two columns in the TABLE statement itself. This can be done in several ways, but often it is easiest to call on `rows[0]` for these values. After a `GROUP BY` operation, `rows[0]` will represent the first result inside each group. For Series and Category values (column 1 and 2), we know that all rows in the group will have the same values - so refering directly to the first one is ok. This approach is used in the Basic example below, where data is grouped by Year-Month (to count how many projects are started each month), then this is plit into a Year and Month column for processing onto the chart. Basic \u00b6 Projects started by month and year \u00b6 DQL Query Results \u00b6 TABLE WITHOUT ID dateformat(rows[0].started, \"yyyy\") AS Year, dateformat(rows[0].started, \"MMM\") AS \"Month\", length(rows) as \"Projects\" FROM \"10 Example Data/projects\" GROUP BY dateformat(date(started), \"yyyy-MM\") AS YearMonth SORT YearMonth desc LIMIT 5 Chart Result \u00b6 DataviewJS \u00b6 ``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}} let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = false; //auto lables, or use list below var labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ dateformat(rows[0].started, \"yyyy\") AS Year, \\ dateformat(rows[0].started, \"MMM\") AS \"Month\", \\ length(rows) as \"Projects\" \\ FROM \"10 Example Data/projects\" \\ GROUP BY dateformat(date(started), \"yyyy-MM\") AS YearMonth \\ SORT YearMonth desc' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[1]); var distinctSeries = dv.array(allRows).map(r => r[0]).distinct(); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < distinctSeries.length; i++) { let seriesName = distinctSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; //get just the labels and values for this series let thisSeriesRows = allRows.filter(r => r[0] == distinctSeries[i]); let thisSeriesLabels = thisSeriesRows.map(r => r[1]); let thisSeriesValues = thisSeriesRows.map(r => r[2]); //for each label, find corresponding value from this series let dataPoints = labels.map(l => { let labelIndex = thisSeriesLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return thisSeriesValues[labelIndex] } }); //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\" \"); if (showTable) { dv.table(DQL.headers, DQL.values) } ## Variants ### 1. Project status by quarter #### DQL Query Results ``` dataview TABLE WITHOUT ID rows[0].status as \"Status\", dateformat(date(rows[0].started), \"yyyy-Qq\") as \"Quarter\", length(rows) as \"Projects\" FROM \"10 Example Data/projects\" GROUP BY status + \" \" + dateformat(date(started), \"yyyy-Qq\") LIMIT 5 Chart Result \u00b6 DataviewJS \u00b6 ``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}} let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = true; //auto lables, or use list below var labels = [\"2021-Q1\", \"2021-Q2\", \"2021-Q3\", \"2021-Q4\", \"2022-Q1\", \"2022-Q2\", \"2022-Q3\"]; //only matter if above is false var colors = [['#4bc0c0'],['#9966ff'],['#ff9f40'],['#ff6384'],['#36a2eb'],['#ffce56']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ rows[0].status as \"Status\", \\ dateformat(date(rows[0].started), \"yyyy-Qq\") as \"Quarter\", \\ length(rows) as \"Projects\" \\ FROM \"10 Example Data/projects\" \\ GROUP BY status + \" \" + dateformat(date(started), \"yyyy-Qq\")' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = dv.array(allRows).map(r => r[1]).distinct(); var distinctSeries = dv.array(allRows).map(r => r[0]).distinct(); //extract labels automatically if required if (autoLabels) { labels = allLabels.array(); } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < distinctSeries.length; i++) { let seriesName = distinctSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; //get just the labels and values for this series let thisSeriesRows = allRows.filter(r => r[0] == distinctSeries[i]); let thisSeriesLabels = thisSeriesRows.map(r => r[1]); let thisSeriesValues = thisSeriesRows.map(r => r[2]); //for each label, find corresponding value from this series let dataPoints = labels.map(l => { let labelIndex = thisSeriesLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return thisSeriesValues[labelIndex] } }); //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //graph the datasets using standard chart.js syntax xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\" \"); if (showTable) { dv.table(DQL.headers, DQL.values) } ```","title":"Plot a Series Category Value DQL Query"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#plot-a-series-category-value-dataset","text":"Warning - Extra plugin required This visualisation requires the Obsidian Charts plugin to implement the integration between Dataview and Charts.js . To minimise the need for additional plugins when browsing the example vault, images have been included alongside the JS code. Help - Query Structure For this type of chart, the query should return three columns representing the Series Name , X-Category , and Y-Value . To produce a table like this, often the best approach is to `GROUP BY` the first and second field in a combined way - then split these back into two columns in the TABLE statement itself. This can be done in several ways, but often it is easiest to call on `rows[0]` for these values. After a `GROUP BY` operation, `rows[0]` will represent the first result inside each group. For Series and Category values (column 1 and 2), we know that all rows in the group will have the same values - so refering directly to the first one is ok. This approach is used in the Basic example below, where data is grouped by Year-Month (to count how many projects are started each month), then this is plit into a Year and Month column for processing onto the chart.","title":"Plot a Series-Category-Value dataset"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#basic","text":"","title":"Basic"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#projects-started-by-month-and-year","text":"","title":"Projects started by month and year"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#dql-query-results","text":"TABLE WITHOUT ID dateformat(rows[0].started, \"yyyy\") AS Year, dateformat(rows[0].started, \"MMM\") AS \"Month\", length(rows) as \"Projects\" FROM \"10 Example Data/projects\" GROUP BY dateformat(date(started), \"yyyy-MM\") AS YearMonth SORT YearMonth desc LIMIT 5","title":"DQL Query Results"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#chart-result","text":"","title":"Chart Result"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#dataviewjs","text":"``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}} let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = false; //auto lables, or use list below var labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]; //only matter if above is false var colors = [['#ff6384'],['#36a2eb'],['#ffce56'],['#4bc0c0'],['#9966ff'],['#ff9f40']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ dateformat(rows[0].started, \"yyyy\") AS Year, \\ dateformat(rows[0].started, \"MMM\") AS \"Month\", \\ length(rows) as \"Projects\" \\ FROM \"10 Example Data/projects\" \\ GROUP BY dateformat(date(started), \"yyyy-MM\") AS YearMonth \\ SORT YearMonth desc' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = allRows.map(r => r[1]); var distinctSeries = dv.array(allRows).map(r => r[0]).distinct(); //extract labels automatically if required if (autoLabels) { labels = allLabels; } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < distinctSeries.length; i++) { let seriesName = distinctSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; //get just the labels and values for this series let thisSeriesRows = allRows.filter(r => r[0] == distinctSeries[i]); let thisSeriesLabels = thisSeriesRows.map(r => r[1]); let thisSeriesValues = thisSeriesRows.map(r => r[2]); //for each label, find corresponding value from this series let dataPoints = labels.map(l => { let labelIndex = thisSeriesLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return thisSeriesValues[labelIndex] } }); //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //Make the xAxis category based, if we are using a fixed array of labels xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); //graph the datasets using standard chart.js syntax const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\" \"); if (showTable) { dv.table(DQL.headers, DQL.values) } ## Variants ### 1. Project status by quarter #### DQL Query Results ``` dataview TABLE WITHOUT ID rows[0].status as \"Status\", dateformat(date(rows[0].started), \"yyyy-Qq\") as \"Quarter\", length(rows) as \"Projects\" FROM \"10 Example Data/projects\" GROUP BY status + \" \" + dateformat(date(started), \"yyyy-Qq\") LIMIT 5","title":"DataviewJS"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#chart-result_1","text":"","title":"Chart Result"},{"location":"20%20Dataview%20Queries/Plot%20a%20Series-Category-Value%20DQL%20Query/#dataviewjs_1","text":"``` //dataviewjs // ----- // BASIC SETTINGS // ----- let showTable = false; //show table below chart or not let chartType = 'bar'; //bar or line let xAxis = \"xAxis: {type:'category'}\"; //{type:'time', time: {unit: 'day'}} let yAxis = \"yAxis: {suggestedMin: 0, ticks: {stepSize: 1}\"; let autoLabels = true; //auto lables, or use list below var labels = [\"2021-Q1\", \"2021-Q2\", \"2021-Q3\", \"2021-Q4\", \"2022-Q1\", \"2022-Q2\", \"2022-Q3\"]; //only matter if above is false var colors = [['#4bc0c0'],['#9966ff'],['#ff9f40'],['#ff6384'],['#36a2eb'],['#ffce56']]; // Unique colours for up to 6 series; then repeats let sDQL = '\\ TABLE WITHOUT ID \\ rows[0].status as \"Status\", \\ dateformat(date(rows[0].started), \"yyyy-Qq\") as \"Quarter\", \\ length(rows) as \"Projects\" \\ FROM \"10 Example Data/projects\" \\ GROUP BY status + \" \" + dateformat(date(started), \"yyyy-Qq\")' // ----- // BELOW HERE IS LARGELY AUTOMATIC // ----- let DQL = await dv.tryQuery(sDQL); //extract necessary data columns from above results var allRows = DQL.values; var allLabels = dv.array(allRows).map(r => r[1]).distinct(); var distinctSeries = dv.array(allRows).map(r => r[0]).distinct(); //extract labels automatically if required if (autoLabels) { labels = allLabels.array(); } //cylce through each series to produce a dataset var datasets = []; for (let i = 0; i < distinctSeries.length; i++) { let seriesName = distinctSeries[i]; let backCol = colors[i%colors.length]; let bordCol = colors[i%colors.length]; let bWidth = 1; //get just the labels and values for this series let thisSeriesRows = allRows.filter(r => r[0] == distinctSeries[i]); let thisSeriesLabels = thisSeriesRows.map(r => r[1]); let thisSeriesValues = thisSeriesRows.map(r => r[2]); //for each label, find corresponding value from this series let dataPoints = labels.map(l => { let labelIndex = thisSeriesLabels.indexOf(l); if (labelIndex < 0) { return 0 } else { return thisSeriesValues[labelIndex] } }); //create a dataset to graph let chartDataset = {label: seriesName, data: dataPoints, backgroundColor: backCol, borderColor: bordCol, borderWidth: bWidth}; datasets.push(chartDataset); } //graph the datasets using standard chart.js syntax xAxis = (autoLabels ? xAxis : \"xAxis: {type:'category'}\"); const chartData = { type: chartType, data: { labels: labels, datasets: datasets }, options: { scales: { xAxis, yAxis } } } window.renderChart(chartData, this.container); dv.span(\" \"); if (showTable) { dv.table(DQL.headers, DQL.values) } ```","title":"DataviewJS"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/","tags":["dv/TABLE","dv/FROM","dv/FLATTEN","dv/groupby","dv/split","dv/length","dv/WHERE","dv/link","dv/filter","dv/dataviewjs","dvjs/pages","dvjs/array","dvjs/table"],"text":"Query a folder structure with the help of meta files and display the per ID interconnected information in a table Contributed by mnvwvnm and dbarenholz#2331 Query meta files to construct information out of a folder structure \u00b6 Basic \u00b6 If language info is redundant saved in the meta file TABLE rows.lang, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id If language info should be extracted from path Vulnerable to changes of folder structure Extracting the language from the folder path requires to know the exact position of the language folder - in our case, it's the third layer (First: 10 Example Data, Second: Folder Structure and Meta Files). If this is to change, the query won't show the correct result anymore. TABLE rows.Language AS Language, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title FLATTEN split(file.folder, \"/\")[2] AS Language GROUP BY id Variants \u00b6 Add link to meta file while keeping ID information \u00b6 TABLE WITHOUT ID link, rows.lang, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id FLATTEN link(rows.file[0].path, id) AS link Beautify language information out of meta file \u00b6 TABLE rows.Language AS Language, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title FLATTEN ((x) => { EN: \"English\", FR: \"French\", DE: \"German\" }[x])(lang) AS Language GROUP BY id Use languages as columns \u00b6 TABLE WITHOUT ID filter(rows, (r) => r.lang = \"FR\").Title AS French, filter(rows, (r) => r.lang = \"EN\").Title AS English, filter(rows, (r) => r.lang = \"DE\").Title AS German FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id Javascript solution that automatically adds new languages when available in folder structure \u00b6 Vulnerable to changes of folder structure Extracting the language from the folder path requires to know the exact position of the language folder - in our case, it's the third layer (First: 10 Example Data, Second: Folder Structure and Meta Files). If this is to change, the query won't show the correct result anymore. // Grab the folder // If you type it manually it should be a string: \"folder\" const folder = \"10 Example Data/Folder Structure and Meta Files\" // Grab all pages from the desired folder const allPages = dv.pages(`\"${folder}\"`) // Get all languages from there into a set, and then as array. // This will work for _any_ number of languages let languages = new Set() allPages.forEach((p) => { const lang = p.file.folder.split(\"/\")[2] if (lang) { languages.add(lang) } }) languages = dv.array(Array.from(languages)) // TODO: Define your language mapping here! // The code uses the folder names for displaying, but I need to be able to match // What's in the meta file to the folder name. const langMap = { 'EN': \"English\", 'DE': \"German\", 'FR': \"French\" } // The headers of the table are the different languages const headers = languages // Keep data array with following information /** [ { id: book-id, titles: [ { lang: language-code, title: book-title } ] } ] **/ let data = [] allPages.forEach((p) => { // Grab the title, language, and ID const title = p.file.folder.split(\"/\")[p.file.folder.split(\"/\").length - 1] const lang = p.lang const id = p.id // Add everything to \"data\" in a smart way if (lang && id && title) { const IDs = data.map(e => e.id) if (IDs.contains(id)) { console.log(`Data has id: ${id} at index: ${IDs.indexOf(id)}`) const toAdd = {lang: lang, title: title} data[IDs.indexOf(id)].titles.push(toAdd) } else { console.log(`Data has no ID: ${id}; creating new entry`) const newEntry = { id: id, titles: [ { lang: lang, title: title } ] } data.push(newEntry) } } }) // Create table elements from the data we saved above const elems = data // Get to the titles .map( (dataEntry) => { return dataEntry.titles }) .map( (titleEntry) => { // Build a single table row let items = [] // Loop through all titles & langs // making sure that entries are in the correct column titleEntry.forEach((title) => { languages.forEach((lang) => { if (lang == langMap[title.lang]) { // The title should be placed in the row at this position items.push(title.title) } }) }) return items }) // Make the actual table dv.table(headers, elems)","title":"Query meta files to construct information out of a folder structure"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#query-meta-files-to-construct-information-out-of-a-folder-structure","text":"","title":"Query meta files to construct information out of a folder structure"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#basic","text":"If language info is redundant saved in the meta file TABLE rows.lang, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id If language info should be extracted from path Vulnerable to changes of folder structure Extracting the language from the folder path requires to know the exact position of the language folder - in our case, it's the third layer (First: 10 Example Data, Second: Folder Structure and Meta Files). If this is to change, the query won't show the correct result anymore. TABLE rows.Language AS Language, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title FLATTEN split(file.folder, \"/\")[2] AS Language GROUP BY id","title":"Basic"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#add-link-to-meta-file-while-keeping-id-information","text":"TABLE WITHOUT ID link, rows.lang, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id FLATTEN link(rows.file[0].path, id) AS link","title":"Add link to meta file while keeping ID information"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#beautify-language-information-out-of-meta-file","text":"TABLE rows.Language AS Language, rows.Title AS Title FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title FLATTEN ((x) => { EN: \"English\", FR: \"French\", DE: \"German\" }[x])(lang) AS Language GROUP BY id","title":"Beautify language information out of meta file"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#use-languages-as-columns","text":"TABLE WITHOUT ID filter(rows, (r) => r.lang = \"FR\").Title AS French, filter(rows, (r) => r.lang = \"EN\").Title AS English, filter(rows, (r) => r.lang = \"DE\").Title AS German FROM \"10 Example Data/Folder Structure and Meta Files\" WHERE file.name = \"meta\" FLATTEN split(file.folder, \"/\")[length(split(file.folder, \"/\")) - 1] AS Title GROUP BY id","title":"Use languages as columns"},{"location":"20%20Dataview%20Queries/Query%20meta%20files%20to%20construct%20information%20out%20of%20a%20folder%20structure/#javascript-solution-that-automatically-adds-new-languages-when-available-in-folder-structure","text":"Vulnerable to changes of folder structure Extracting the language from the folder path requires to know the exact position of the language folder - in our case, it's the third layer (First: 10 Example Data, Second: Folder Structure and Meta Files). If this is to change, the query won't show the correct result anymore. // Grab the folder // If you type it manually it should be a string: \"folder\" const folder = \"10 Example Data/Folder Structure and Meta Files\" // Grab all pages from the desired folder const allPages = dv.pages(`\"${folder}\"`) // Get all languages from there into a set, and then as array. // This will work for _any_ number of languages let languages = new Set() allPages.forEach((p) => { const lang = p.file.folder.split(\"/\")[2] if (lang) { languages.add(lang) } }) languages = dv.array(Array.from(languages)) // TODO: Define your language mapping here! // The code uses the folder names for displaying, but I need to be able to match // What's in the meta file to the folder name. const langMap = { 'EN': \"English\", 'DE': \"German\", 'FR': \"French\" } // The headers of the table are the different languages const headers = languages // Keep data array with following information /** [ { id: book-id, titles: [ { lang: language-code, title: book-title } ] } ] **/ let data = [] allPages.forEach((p) => { // Grab the title, language, and ID const title = p.file.folder.split(\"/\")[p.file.folder.split(\"/\").length - 1] const lang = p.lang const id = p.id // Add everything to \"data\" in a smart way if (lang && id && title) { const IDs = data.map(e => e.id) if (IDs.contains(id)) { console.log(`Data has id: ${id} at index: ${IDs.indexOf(id)}`) const toAdd = {lang: lang, title: title} data[IDs.indexOf(id)].titles.push(toAdd) } else { console.log(`Data has no ID: ${id}; creating new entry`) const newEntry = { id: id, titles: [ { lang: lang, title: title } ] } data.push(newEntry) } } }) // Create table elements from the data we saved above const elems = data // Get to the titles .map( (dataEntry) => { return dataEntry.titles }) .map( (titleEntry) => { // Build a single table row let items = [] // Loop through all titles & langs // making sure that entries are in the correct column titleEntry.forEach((title) => { languages.forEach((lang) => { if (lang == langMap[title.lang]) { // The title should be placed in the row at this position items.push(title.title) } }) }) return items }) // Make the actual table dv.table(headers, elems)","title":"Javascript solution that automatically adds new languages when available in folder structure"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/","tags":["dv/list","dv/link","dv/regexreplace","dv/from"],"text":"Remove a suffix or prefix from a filename delimited with certain characters Remove a suffix from listed file names \u00b6 Basic \u00b6 [!hint] If you have another character or character sequence that is delimiting your suffix, you need to exchange the `--` of the regular expressions . Here a few examples: If your delimiter is \"\\_\\_\" use `regexreplace(file.name, \"__.*$\", \"\")` If your delimiter is \"{\" use `regexreplace(file.name, \"{.*$\", \"\")` If your delimiter is \"--!\" use `regexreplace(file.name, \"--\\!.*$\", \"\")` LIST WITHOUT ID link(file.link, regexreplace(file.name, \"--.*$\", \"\")) FROM \"10 Example Data/prefixes and suffixes\" Variants \u00b6 Replace a prefix instead \u00b6 Adjusted examples (see callout above): \"^.*__\" , \"^.*{\" , \"^.*--\\!\" LIST WITHOUT ID link(file.link, regexreplace(file.name, \"^.*_\", \"\")) FROM \"10 Example Data/prefixes and suffixes\" Replace prefix and suffix \u00b6 LIST WITHOUT ID link(file.link, regexreplace(regexreplace(file.name, \"^.*_\", \"\"), \"--.*$\", \"\")) FROM \"10 Example Data/prefixes and suffixes\"","title":"Remove a suffix from listed file names"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/#remove-a-suffix-from-listed-file-names","text":"","title":"Remove a suffix from listed file names"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/#basic","text":"[!hint] If you have another character or character sequence that is delimiting your suffix, you need to exchange the `--` of the regular expressions . Here a few examples: If your delimiter is \"\\_\\_\" use `regexreplace(file.name, \"__.*$\", \"\")` If your delimiter is \"{\" use `regexreplace(file.name, \"{.*$\", \"\")` If your delimiter is \"--!\" use `regexreplace(file.name, \"--\\!.*$\", \"\")` LIST WITHOUT ID link(file.link, regexreplace(file.name, \"--.*$\", \"\")) FROM \"10 Example Data/prefixes and suffixes\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/#replace-a-prefix-instead","text":"Adjusted examples (see callout above): \"^.*__\" , \"^.*{\" , \"^.*--\\!\" LIST WITHOUT ID link(file.link, regexreplace(file.name, \"^.*_\", \"\")) FROM \"10 Example Data/prefixes and suffixes\"","title":"Replace a prefix instead"},{"location":"20%20Dataview%20Queries/Remove%20a%20suffix%20from%20listed%20file%20names/#replace-prefix-and-suffix","text":"LIST WITHOUT ID link(file.link, regexreplace(regexreplace(file.name, \"^.*_\", \"\"), \"--.*$\", \"\")) FROM \"10 Example Data/prefixes and suffixes\"","title":"Replace prefix and suffix"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/","tags":["dv/inline","dv/dataviewjs","dv/table","dv/round","dv/from","dv/where","dvjs/current"],"text":"Renders a progress bar for a percentage i.e. done tasks in file Render a progress bar \u00b6 pagesRead:: 42 totalPages:: 130 Basic \u00b6 $= const value = Math.round((dv.current().pagesRead / dv.current().totalPages) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" Variants \u00b6 Calculate progress of task completion for current file \u00b6 [x] Task1 [x] Task2 [ ] Task3 $= const value = Math.round(((dv.current().file.tasks.where(t => t.completed).length) / (dv.current().file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\" Rendering progress bar directly in tables or list \u00b6 This does not need a extra meta data field on the source files. TABLE pagesRead, totalPages, \"<progress value='\" + round(100*pagesRead/totalPages) + \"' max='100'></progress> \" + round(100*pagesRead/totalPages) + \"%\" AS Progress FROM \"10 Example Data/books\" Rendering custom styled progress bar directly in tables or list \u00b6 Thanks to Jillard and mnvwvnm! TABLE pagesRead, totalPages, \"<div style='border-style:solid; border-width:1px; border-color:#AAAAAA; display:flex;'>\" + \"<div align='center' style='padding:5px; min-width:10px; background-color:\" + choice(percent < 50, \"#d5763f\", \"#a8c373\") + \"; width:\" + percent + \"%; color:black'>\" + choice(percent < 30, \" </div><div style='padding:5px;'>\", \"\") + percent + \"%</div></div>\" AS Progress FROM \"10 Example Data/books\" FLATTEN round(100*pagesRead/totalPages) as percent Rendering a progress bar that is stored inside a field on the source file \u00b6 Also useable in tables, if put in an inline query on the source file. [!attention] For this to work, you need **avoid** using `dv.current()` in the source files. Using `dv.current()`, you would always see the progress of the _current_ file. Instead, give the explicit file, i.e. `dv.page(\"2022-01-03\")` - have a look at the example data! TABLE task-completion FROM \"10 Example Data/dailys\" WHERE task-completion LIST task-completion FROM \"10 Example Data/dailys\" WHERE task-completion Render a progress bar with additional textual information \u00b6 Thanks to Dovos! **Over the complete vault for all tasks that contains \"priority::\" $= const valToSearch= \"priority::\"; const value = Math.round(((dv.pages().file.tasks.where(t => t.completed).where(t => t.text.includes(valToSearch)).length) / (dv.pages().file.tasks).where(t => t.text.includes(valToSearch)).length) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \"<span style='font-size:smaller;color:var(--text-muted)'> \" + value + \"% &nbsp;| &nbsp;\" + (dv.pages().file.tasks.where(t => t.text.includes(valToSearch)).length - dv.pages().file.tasks.where(t => t.completed).where(t => t.text.includes(valToSearch)).length) + \" left</span>\" All tasks of a specific file $= const tasks = dv.page(\"10 Example Data/projects/project_9\").file.tasks; const value = Math.round(tasks.where(t => t.completed).length / tasks.length * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \"<span style='font-size:smaller;color:var(--text-muted)'> \" + value + \"% &nbsp;| &nbsp;\" + (tasks.length - tasks.where(t => t.completed).length) + \" left</span>\"","title":"Render a progress bar"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#render-a-progress-bar","text":"pagesRead:: 42 totalPages:: 130","title":"Render a progress bar"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#basic","text":"$= const value = Math.round((dv.current().pagesRead / dv.current().totalPages) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#calculate-progress-of-task-completion-for-current-file","text":"[x] Task1 [x] Task2 [ ] Task3 $= const value = Math.round(((dv.current().file.tasks.where(t => t.completed).length) / (dv.current().file.tasks).length || 0) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \" \" + value + \"%\"","title":"Calculate progress of task completion for current file"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#rendering-progress-bar-directly-in-tables-or-list","text":"This does not need a extra meta data field on the source files. TABLE pagesRead, totalPages, \"<progress value='\" + round(100*pagesRead/totalPages) + \"' max='100'></progress> \" + round(100*pagesRead/totalPages) + \"%\" AS Progress FROM \"10 Example Data/books\"","title":"Rendering progress bar directly in tables or list"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#rendering-custom-styled-progress-bar-directly-in-tables-or-list","text":"Thanks to Jillard and mnvwvnm! TABLE pagesRead, totalPages, \"<div style='border-style:solid; border-width:1px; border-color:#AAAAAA; display:flex;'>\" + \"<div align='center' style='padding:5px; min-width:10px; background-color:\" + choice(percent < 50, \"#d5763f\", \"#a8c373\") + \"; width:\" + percent + \"%; color:black'>\" + choice(percent < 30, \" </div><div style='padding:5px;'>\", \"\") + percent + \"%</div></div>\" AS Progress FROM \"10 Example Data/books\" FLATTEN round(100*pagesRead/totalPages) as percent","title":"Rendering custom styled progress bar directly in tables or list"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#rendering-a-progress-bar-that-is-stored-inside-a-field-on-the-source-file","text":"Also useable in tables, if put in an inline query on the source file. [!attention] For this to work, you need **avoid** using `dv.current()` in the source files. Using `dv.current()`, you would always see the progress of the _current_ file. Instead, give the explicit file, i.e. `dv.page(\"2022-01-03\")` - have a look at the example data! TABLE task-completion FROM \"10 Example Data/dailys\" WHERE task-completion LIST task-completion FROM \"10 Example Data/dailys\" WHERE task-completion","title":"Rendering a progress bar that is stored inside a field on the source file"},{"location":"20%20Dataview%20Queries/Render%20a%20progress%20bar/#render-a-progress-bar-with-additional-textual-information","text":"Thanks to Dovos! **Over the complete vault for all tasks that contains \"priority::\" $= const valToSearch= \"priority::\"; const value = Math.round(((dv.pages().file.tasks.where(t => t.completed).where(t => t.text.includes(valToSearch)).length) / (dv.pages().file.tasks).where(t => t.text.includes(valToSearch)).length) * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \"<span style='font-size:smaller;color:var(--text-muted)'> \" + value + \"% &nbsp;| &nbsp;\" + (dv.pages().file.tasks.where(t => t.text.includes(valToSearch)).length - dv.pages().file.tasks.where(t => t.completed).where(t => t.text.includes(valToSearch)).length) + \" left</span>\" All tasks of a specific file $= const tasks = dv.page(\"10 Example Data/projects/project_9\").file.tasks; const value = Math.round(tasks.where(t => t.completed).length / tasks.length * 100); \"<progress value='\" + value + \"' max='100'></progress>\" + \"<span style='font-size:smaller;color:var(--text-muted)'> \" + value + \"% &nbsp;| &nbsp;\" + (tasks.length - tasks.where(t => t.completed).length) + \" left</span>\"","title":"Render a progress bar with additional textual information"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/","tags":["dv/dataviewjs","dvjs/pages","dvjs/luxon","dvjs/el","dvjs/duration","dvjs/view"],"text":"Render a year overview and color every day that matches your search criteria Render a year overview for your data \u00b6 Basic \u00b6 Track activities in your dailies, i.e. if you have prayed. const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.praying === \"yes\"); const year = 2022; const color = \"green\"; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Create calendar data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } // == Fill calendar == while (date.year == year) { const value = values.find(p => p.day && p.day.equals(date.startOf('day'))); const col = value ? color : emptyColor; calendar[date.month].push(getDayEl(date, col)) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` } Variants \u00b6 Use a meta data field with a date instead of file.day \u00b6 See on one glimpse the start and finish dates of your projects. const values = dv.pages('\"10 Example Data/projects\"').where(p => p.started); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push(getDayEl(date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` } function determineColor(date) { const started = values.find(p => p.started?.startOf('day').equals(date.startOf('day'))); const finished = values.find(p => p.finished?.startOf('day').equals(date.startOf('day'))); let color = emptyColor; if (started && finished) { color = '#9959ff'; } else if (started) { color = '#ff5976' } else if (finished) { color = 'green' } return color; } Add information on hover \u00b6 Hover over a dot and wait a moment to see which project started or finished. const values = dv.pages('\"10 Example Data/projects\"').where(p => p.started); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push(getDayEl(date, determineColor(date), createTooltip())) date = addOneDay(date); function createTooltip() { let tooltip = \"\"; const vals = values.filter(p => checkDateEq(p.started, date) || checkDateEq(p.finished, date)) for (let val of vals) { tooltip += `${val.file.name} ` } return tooltip; } } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color, hoverInfo) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${hoverInfo}\"></span>` } function checkDateEq(date1, date2) { if (!date1 || !date2) return false return date1.startOf('day').equals(date2.startOf('day')) } function determineColor(date) { const started = values.find(p => p.started?.startOf('day').equals(date.startOf('day'))); const finished = values.find(p => p.finished?.startOf('day').equals(date.startOf('day'))); let color = emptyColor; if (started && finished) { color = '#9959ff'; } else if (started) { color = '#ff5976' } else if (finished) { color = 'green' } return color; } Use a intensity to display different values \u00b6 const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push( getDayEl( date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` } function determineColor(date) { console.log(values.find(p => !p.day)) const page = values.find(p => p.file.day.startOf('day').equals(date.startOf('day'))); if (!page) return emptyColor; let opacity = (page.wellbeing.mood / 4) ; return `rgba(177, 200, 51, ${opacity})`; } Use as a view file for reusability \u00b6 Simple case - input pages to display, the year to render and an \"active\" color await dv.view(\"00 Meta/dataview_views/year_overview\", { pages: dv.pages('\"10 Example Data/dailys\"').where(p => p.praying === \"yes\"), year: 2022, color: \"green\" }) Complex case - Provide functions to determine color and tooltip. Both function will be called with the date to fill as argument and need to give back a string. const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); await dv.view(\"00 Meta/dataview_views/year_overview\", { pages: pages, year: 2022, color: determineColor, tooltipFn: generateTooltip }) function determineColor(date) { const page = pages.find(p => p.day && p.day.startOf('day').equals(date.startOf('day'))); if (!page) return \"rgba(9, 99, 199, 0.15)\"; let opacity = (page.wellbeing.mood / 4) ; return `rgba(177, 200, 51, ${opacity})`; } function generateTooltip(date) { const page = pages.find(p => p.day && p.day.startOf('day').equals(date.startOf('day'))); if (!page) return date.toFormat('yyyy-MM-dd'); return `${page.file.name}: ${page.wellbeing?.mood ?? ''}` } Render more than one meta data per day \u00b6 Rendering multiple values The amount of color blocks is determined by the number of colors given back, so all you need to tweak is what determineColor is giving back - and maybe increase the size of the day elements. \ud83d\ude09 If you want to use intensity too, determineColor needs to return something like [`rgba(177, 200, 51, ${(page.wellbeing.mood / 4)})`, `rgba(50, 90, 220, ${(page.wellbeing.health / 4)})`] const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year === year) { calendar[date.month].push( getDayEl( date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, colors) { const sizeOfDays = 14; const sizeOfColors = Math.round(sizeOfDays / colors.length) let dayEl = `<span style=\"width:${sizeOfDays}px;height:${sizeOfDays}px;display:inline-flex;flex-direction:column\" title=\"${date.toFormat('yyyy-MM-dd')}\">` for (let color of colors) { dayEl += `<span style=\"width:${sizeOfDays}px;height:${sizeOfColors}px;background-color:${color};display:inline-flex;\"></span>` } dayEl += \"</span>\" return dayEl; } function determineColor(date) { const page = values.find(p => p.file.day.startOf('day').equals(date.startOf('day'))); if (!page) return [emptyColor, emptyColor]; return [ page.beingthankful ? \"#be83eb\" : emptyColor, page.praying ? \"#6c79b5\" : emptyColor ] }","title":"Render a year overview for your data"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#render-a-year-overview-for-your-data","text":"","title":"Render a year overview for your data"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#basic","text":"Track activities in your dailies, i.e. if you have prayed. const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.praying === \"yes\"); const year = 2022; const color = \"green\"; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Create calendar data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } // == Fill calendar == while (date.year == year) { const value = values.find(p => p.day && p.day.equals(date.startOf('day'))); const col = value ? color : emptyColor; calendar[date.month].push(getDayEl(date, col)) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` }","title":"Basic"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#use-a-meta-data-field-with-a-date-instead-of-fileday","text":"See on one glimpse the start and finish dates of your projects. const values = dv.pages('\"10 Example Data/projects\"').where(p => p.started); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push(getDayEl(date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` } function determineColor(date) { const started = values.find(p => p.started?.startOf('day').equals(date.startOf('day'))); const finished = values.find(p => p.finished?.startOf('day').equals(date.startOf('day'))); let color = emptyColor; if (started && finished) { color = '#9959ff'; } else if (started) { color = '#ff5976' } else if (finished) { color = 'green' } return color; }","title":"Use a meta data field with a date instead of file.day"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#add-information-on-hover","text":"Hover over a dot and wait a moment to see which project started or finished. const values = dv.pages('\"10 Example Data/projects\"').where(p => p.started); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push(getDayEl(date, determineColor(date), createTooltip())) date = addOneDay(date); function createTooltip() { let tooltip = \"\"; const vals = values.filter(p => checkDateEq(p.started, date) || checkDateEq(p.finished, date)) for (let val of vals) { tooltip += `${val.file.name} ` } return tooltip; } } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color, hoverInfo) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${hoverInfo}\"></span>` } function checkDateEq(date1, date2) { if (!date1 || !date2) return false return date1.startOf('day').equals(date2.startOf('day')) } function determineColor(date) { const started = values.find(p => p.started?.startOf('day').equals(date.startOf('day'))); const finished = values.find(p => p.finished?.startOf('day').equals(date.startOf('day'))); let color = emptyColor; if (started && finished) { color = '#9959ff'; } else if (started) { color = '#ff5976' } else if (finished) { color = 'green' } return color; }","title":"Add information on hover"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#use-a-intensity-to-display-different-values","text":"const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year == year) { calendar[date.month].push( getDayEl( date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, color) { const sizeOfDays = \"12px\"; return `<span style=\"width:${sizeOfDays};height:${sizeOfDays};border-radius:2px;background-color:${color};display:inline-block;font-size:4pt;\" title=\"${date.toFormat('yyyy-MM-dd')}\"></span>` } function determineColor(date) { console.log(values.find(p => !p.day)) const page = values.find(p => p.file.day.startOf('day').equals(date.startOf('day'))); if (!page) return emptyColor; let opacity = (page.wellbeing.mood / 4) ; return `rgba(177, 200, 51, ${opacity})`; }","title":"Use a intensity to display different values"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#use-as-a-view-file-for-reusability","text":"Simple case - input pages to display, the year to render and an \"active\" color await dv.view(\"00 Meta/dataview_views/year_overview\", { pages: dv.pages('\"10 Example Data/dailys\"').where(p => p.praying === \"yes\"), year: 2022, color: \"green\" }) Complex case - Provide functions to determine color and tooltip. Both function will be called with the date to fill as argument and need to give back a string. const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); await dv.view(\"00 Meta/dataview_views/year_overview\", { pages: pages, year: 2022, color: determineColor, tooltipFn: generateTooltip }) function determineColor(date) { const page = pages.find(p => p.day && p.day.startOf('day').equals(date.startOf('day'))); if (!page) return \"rgba(9, 99, 199, 0.15)\"; let opacity = (page.wellbeing.mood / 4) ; return `rgba(177, 200, 51, ${opacity})`; } function generateTooltip(date) { const page = pages.find(p => p.day && p.day.startOf('day').equals(date.startOf('day'))); if (!page) return date.toFormat('yyyy-MM-dd'); return `${page.file.name}: ${page.wellbeing?.mood ?? ''}` }","title":"Use as a view file for reusability"},{"location":"20%20Dataview%20Queries/Render%20a%20year%20overview%20for%20your%20data/#render-more-than-one-meta-data-per-day","text":"Rendering multiple values The amount of color blocks is determined by the number of colors given back, so all you need to tweak is what determineColor is giving back - and maybe increase the size of the day elements. \ud83d\ude09 If you want to use intensity too, determineColor needs to return something like [`rgba(177, 200, 51, ${(page.wellbeing.mood / 4)})`, `rgba(50, 90, 220, ${(page.wellbeing.health / 4)})`] const values = dv.pages('\"10 Example Data/dailys\"').where(p => p.wellbeing?.mood); const year = 2022; const emptyColor = \"rgba(255,255,255,0.1)\"; // == Fill data == let date = dv.luxon.DateTime.utc(year) const calendar = []; for(let i = 1; i <= 12; i++) { calendar[i] = [] } while (date.year === year) { calendar[date.month].push( getDayEl( date, determineColor(date))) date = addOneDay(date); } // == Render calendar == calendar.forEach((month, i) => { const monthEl = `<span style='display:inline-block;min-width:30px;font-size:small'>${dv.luxon.DateTime.utc(year, i).toFormat('MMM')}</span>` dv.el(\"div\", monthEl + month.reduce((acc, curr) => `${acc} ${curr}`, \"\")) }) function addOneDay(date) { return dv.luxon.DateTime.fromMillis(date + dv.duration(\"1d\")) } function getDayEl(date, colors) { const sizeOfDays = 14; const sizeOfColors = Math.round(sizeOfDays / colors.length) let dayEl = `<span style=\"width:${sizeOfDays}px;height:${sizeOfDays}px;display:inline-flex;flex-direction:column\" title=\"${date.toFormat('yyyy-MM-dd')}\">` for (let color of colors) { dayEl += `<span style=\"width:${sizeOfDays}px;height:${sizeOfColors}px;background-color:${color};display:inline-flex;\"></span>` } dayEl += \"</span>\" return dayEl; } function determineColor(date) { const page = values.find(p => p.file.day.startOf('day').equals(date.startOf('day'))); if (!page) return [emptyColor, emptyColor]; return [ page.beingthankful ? \"#be83eb\" : emptyColor, page.praying ? \"#6c79b5\" : emptyColor ] }","title":"Render more than one meta data per day"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/","tags":["dv/dataviewjs","dvjs/el","dvjs/pages","dvjs/where","dvjs/header","dvjs/table","dvjs/map","dvjs/container"],"text":"Show tv shows after current status in multiple tables switchable via button Render multiple tables with tab-like buttons \u00b6 Basic \u00b6 const createButton = (name) => { const btn = dv.el('button', name) btn.addEventListener('click', (event) => { event.preventDefault() removeTable() renderTable(name) }) return btn } const buttons = ['Watching', 'Going to watch', 'Watched all', 'Stopped watching'] const renderTable = (name) => { const pages = dv.pages('\"10 Example Data/shows\"').where(page => page.status == name) dv.header(2, name) dv.table( ['Title', 'Rating', 'Runtime', 'Seasons', 'Episodes'], pages.map(page => [page.file.link, page.rating, page.runtime, page.seasons, page.episodes])) } const removeTable = () => { this.container.lastChild.remove() this.container.lastChild.remove() } buttons.forEach(button => createButton(button)) renderTable('Watching') Variants \u00b6 Display amount of watched episodes \u00b6 const createButton = (name) => { const btn = dv.el('button', name) btn.addEventListener('click', (event) => { event.preventDefault() removeTable() renderTable(name) }) return btn } const buttons = ['Watching', 'Going to watch', 'Watched all', 'Stopped watching'] const renderTable = (name) => { const pages = dv.pages('\"10 Example Data/shows\"').where(page => page.status == name) dv.header(2, name) dv.table(['Title', 'Rating', 'Runtime', 'Seasons', 'Ep watched/total'], pages.map(page => { let watchedEp = 0 const totalEp = page.episodes page.file.tasks.values.forEach(el => { if(el.checked) { watchedEp += 1 } }) return [page.file.link, page.rating, page.runtime, page.seasons, `${watchedEp}/${totalEp}`] })) } const removeTable = () => { this.container.lastChild.remove() this.container.lastChild.remove() } buttons.forEach(button => createButton(button)) renderTable('Watching') Render other views/different ones per tab \u00b6 const views = ['Table', 'List', 'Tasks'] const changeView = (viewName) => { removeView() if (viewName == 'Table') { dv.header('2', 'Some table') dv.table(['File', 'Day'], dv.pages('\"10 Example Data/dailys\"').limit(7).map(p => [p.file.link, p.day])) } if (viewName == 'List') { dv.list(dv.pages('\"10 Example Data/dailys\"').limit(7).file.name) } if (viewName == 'Tasks') { dv.taskList(dv.page(\"10 Example Data/projects/project_2\").file.tasks) } } const createButtons = () => { const buttonContainer = dv.el('div', '', {cls: 'tabButtons'}) views.forEach(view => { const button = dv.el('button', view) button.addEventListener('click', (event) => { event.preventDefault() changeView(view) }) buttonContainer.append(button) }) } const removeView = () => { Array.from(this.container.children).forEach(el => { if(!el.classList.contains('tabButtons')) { el.remove() } }) } createButtons()","title":"Render multiple tables with tab like buttons"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/#render-multiple-tables-with-tab-like-buttons","text":"","title":"Render multiple tables with tab-like buttons"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/#basic","text":"const createButton = (name) => { const btn = dv.el('button', name) btn.addEventListener('click', (event) => { event.preventDefault() removeTable() renderTable(name) }) return btn } const buttons = ['Watching', 'Going to watch', 'Watched all', 'Stopped watching'] const renderTable = (name) => { const pages = dv.pages('\"10 Example Data/shows\"').where(page => page.status == name) dv.header(2, name) dv.table( ['Title', 'Rating', 'Runtime', 'Seasons', 'Episodes'], pages.map(page => [page.file.link, page.rating, page.runtime, page.seasons, page.episodes])) } const removeTable = () => { this.container.lastChild.remove() this.container.lastChild.remove() } buttons.forEach(button => createButton(button)) renderTable('Watching')","title":"Basic"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/#display-amount-of-watched-episodes","text":"const createButton = (name) => { const btn = dv.el('button', name) btn.addEventListener('click', (event) => { event.preventDefault() removeTable() renderTable(name) }) return btn } const buttons = ['Watching', 'Going to watch', 'Watched all', 'Stopped watching'] const renderTable = (name) => { const pages = dv.pages('\"10 Example Data/shows\"').where(page => page.status == name) dv.header(2, name) dv.table(['Title', 'Rating', 'Runtime', 'Seasons', 'Ep watched/total'], pages.map(page => { let watchedEp = 0 const totalEp = page.episodes page.file.tasks.values.forEach(el => { if(el.checked) { watchedEp += 1 } }) return [page.file.link, page.rating, page.runtime, page.seasons, `${watchedEp}/${totalEp}`] })) } const removeTable = () => { this.container.lastChild.remove() this.container.lastChild.remove() } buttons.forEach(button => createButton(button)) renderTable('Watching')","title":"Display amount of watched episodes"},{"location":"20%20Dataview%20Queries/Render%20multiple%20tables%20with%20tab-like%20buttons/#render-other-viewsdifferent-ones-per-tab","text":"const views = ['Table', 'List', 'Tasks'] const changeView = (viewName) => { removeView() if (viewName == 'Table') { dv.header('2', 'Some table') dv.table(['File', 'Day'], dv.pages('\"10 Example Data/dailys\"').limit(7).map(p => [p.file.link, p.day])) } if (viewName == 'List') { dv.list(dv.pages('\"10 Example Data/dailys\"').limit(7).file.name) } if (viewName == 'Tasks') { dv.taskList(dv.page(\"10 Example Data/projects/project_2\").file.tasks) } } const createButtons = () => { const buttonContainer = dv.el('div', '', {cls: 'tabButtons'}) views.forEach(view => { const button = dv.el('button', view) button.addEventListener('click', (event) => { event.preventDefault() changeView(view) }) buttonContainer.append(button) }) } const removeView = () => { Array.from(this.container.children).forEach(el => { if(!el.classList.contains('tabButtons')) { el.remove() } }) } createButtons()","title":"Render other views/different ones per tab"},{"location":"20%20Dataview%20Queries/Render%20song%20information%20and%20embed%20a%20video/","tags":["dv/dataviewjs","dvjs/current","dvjs/span"],"text":"This page is a fancy setup for notes you want to make on music videos. It renders song information and embeds a youtube video. Contributed by Daniel. Discord: dbarenholz#2331 Find me here . $=dv.span(dv.current().artist) - $=dv.span(dv.current().title) \u00b6 [!info]- Song Information title:: Never Gonna Give You Up artist:: Rick Astley vocalist:: Rick Astley album:: Whenever You Need Somebody number:: 1 yt:: https://www.youtube.com/embed/watch?v=dQw4w9WgXcQ Basic \u00b6 const me = dv.current() dv.span(`The song *${me.title}*, composed by *${me.artist}* and sung by *${me.vocalist}* is number *${me.number}* of the album *${me.album}*. A video is shown below.`) dv.span(`<iframe width=\"560\" height=\"315\" src=\"${me.yt}?modestbranding=1&hl=en&persist\" title=\"${me.artist} - ${me.title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`)","title":"Render song information and embed a video"},{"location":"20%20Dataview%20Queries/Render%20song%20information%20and%20embed%20a%20video/#dvspandvcurrentartist-dvspandvcurrenttitle","text":"[!info]- Song Information title:: Never Gonna Give You Up artist:: Rick Astley vocalist:: Rick Astley album:: Whenever You Need Somebody number:: 1 yt:: https://www.youtube.com/embed/watch?v=dQw4w9WgXcQ","title":"$=dv.span(dv.current().artist) - $=dv.span(dv.current().title)"},{"location":"20%20Dataview%20Queries/Render%20song%20information%20and%20embed%20a%20video/#basic","text":"const me = dv.current() dv.span(`The song *${me.title}*, composed by *${me.artist}* and sung by *${me.vocalist}* is number *${me.number}* of the album *${me.album}*. A video is shown below.`) dv.span(`<iframe width=\"560\" height=\"315\" src=\"${me.yt}?modestbranding=1&hl=en&persist\" title=\"${me.artist} - ${me.title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`)","title":"Basic"},{"location":"20%20Dataview%20Queries/Search%20for%20words%20in%20your%20files%20content%20across%20your%20vault/","tags":["dv/dataviewjs","dvjs/pages","dvjs/io","dvjs/table"],"text":"Search for a word or combination of words in your notes complete content, not only meta data! Contributed by erazlogo and mnvwvnm Search for words in your files content across your vault \u00b6 Basic \u00b6 Crawling file content of all queried files This query goes beyond the regular boundaries of dataview by crawling the raw file content. That means you can search for words independent of their usage in tags or meta data. Crawling the page content can be a memory intense operation , so it's important to use a path or tag in dv.pages() to avoid iterating over the whole vault. Except your computer can stand that, of course. \ud83d\ude09 const word = \"Queries\" // <-- Type your search between the \"\" // We need to double-escape \\b here so it's correctly fed into RegExp after the concationation (as \"\\b\" and not as \"b\"). const regex = new RegExp(\"\\\\b\" + word + \"\\\\b\", \"gi\") // Query pages and crawl their raw data content const pages = await Promise.all( dv.pages('\"30 Dataview Resources\"') .map(async (page) => { const content = await dv.io.load(page.file.path); // Map pages to a custom object - if you want to have more infos in the // table below, you need to add them here! return { link: page.file.link, count: ( content.match(regex) || []).length }; }) ) // Render the result table dv.table( [\"Note\", `Matches for \"${word}\"`], pages .filter(p => p.count) .sort((a, b) => b.count - a.count) .map(p => [p.link, p.count]) ); Variants \u00b6 Display matching lines and surrounding words for context \u00b6 Increasing number of surrounding words To see more surrounding words, increase the second number in the regular expression in the curly brackets. You can set it i.e. to {0,5} to see up to five surrounding words. const word = \"but\" const regex = new RegExp(\"(\\\\S+\\\\s?){0,2}(\\\\b\"+word+\"\\\\b)(\\\\s\\\\S+){0,2}\", \"gi\") const pages = await Promise.all( dv.pages('\"30 Dataview Resources\"') .map(async (page) => { const content = await dv.io.load(page.file.path); const matches = content.match(regex); return { link: page.file.link, count: ( matches || []).length, matches }; }) ) dv.table( [\"Note\", \"Count\", `Matches for \"${word}\"`], pages .filter(p => p.count) .sort((a, b) => b.count - a.count) .map(p => [p.link, p.count, p.matches]) );","title":"Search for words in your files content across your vault"},{"location":"20%20Dataview%20Queries/Search%20for%20words%20in%20your%20files%20content%20across%20your%20vault/#search-for-words-in-your-files-content-across-your-vault","text":"","title":"Search for words in your files content across your vault"},{"location":"20%20Dataview%20Queries/Search%20for%20words%20in%20your%20files%20content%20across%20your%20vault/#basic","text":"Crawling file content of all queried files This query goes beyond the regular boundaries of dataview by crawling the raw file content. That means you can search for words independent of their usage in tags or meta data. Crawling the page content can be a memory intense operation , so it's important to use a path or tag in dv.pages() to avoid iterating over the whole vault. Except your computer can stand that, of course. \ud83d\ude09 const word = \"Queries\" // <-- Type your search between the \"\" // We need to double-escape \\b here so it's correctly fed into RegExp after the concationation (as \"\\b\" and not as \"b\"). const regex = new RegExp(\"\\\\b\" + word + \"\\\\b\", \"gi\") // Query pages and crawl their raw data content const pages = await Promise.all( dv.pages('\"30 Dataview Resources\"') .map(async (page) => { const content = await dv.io.load(page.file.path); // Map pages to a custom object - if you want to have more infos in the // table below, you need to add them here! return { link: page.file.link, count: ( content.match(regex) || []).length }; }) ) // Render the result table dv.table( [\"Note\", `Matches for \"${word}\"`], pages .filter(p => p.count) .sort((a, b) => b.count - a.count) .map(p => [p.link, p.count]) );","title":"Basic"},{"location":"20%20Dataview%20Queries/Search%20for%20words%20in%20your%20files%20content%20across%20your%20vault/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Search%20for%20words%20in%20your%20files%20content%20across%20your%20vault/#display-matching-lines-and-surrounding-words-for-context","text":"Increasing number of surrounding words To see more surrounding words, increase the second number in the regular expression in the curly brackets. You can set it i.e. to {0,5} to see up to five surrounding words. const word = \"but\" const regex = new RegExp(\"(\\\\S+\\\\s?){0,2}(\\\\b\"+word+\"\\\\b)(\\\\s\\\\S+){0,2}\", \"gi\") const pages = await Promise.all( dv.pages('\"30 Dataview Resources\"') .map(async (page) => { const content = await dv.io.load(page.file.path); const matches = content.match(regex); return { link: page.file.link, count: ( matches || []).length, matches }; }) ) dv.table( [\"Note\", \"Count\", `Matches for \"${word}\"`], pages .filter(p => p.count) .sort((a, b) => b.count - a.count) .map(p => [p.link, p.count, p.matches]) );","title":"Display matching lines and surrounding words for context"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/","tags":["dv/dataviewjs","dvjs/tryQuery","dvjs/table"],"text":"Renders a table that allows overview about all projects that belong to a overarching goal as well as the total progress for this goal calculated from the projects' progress Contributed by mnvwvnm Show a Goals Overview with progress bars for included projects and overall progress \u00b6 Basic \u00b6 const DQL = await dv.tryQuery(` TABLE WITHOUT ID rows.file.link, map(rows, (r) => r.Lt), map(rows, (r) => r.Lc), map(rows, (r) => \"<progress style='width:80px;' value='\" + (r.Lc/r.Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((r.Lc/r.Lt)*100) + \"%</span>\") FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc GROUP BY true `) const globalValues = DQL.values .map(row => [ removeBulletpoints(row[0]), // Project links removeBulletpoints(row[3]), // progress bars \"<progress value='\" + sumUp(row[2])/sumUp(row[1]) * 100 + \"' max='100'></progress><br><span style='font-size:smaller;'>\" + Math.round(sumUp(row[2])/sumUp(row[1]) * 100) + \"% completed</span>\" ]) dv.table([\"Projects\", \"Progress\", \"Goal Progress\"], globalValues); function removeBulletpoints(array) { return array.join(\"<br>\") } function sumUp(val) { return val.reduce((acc, val) => acc + val, 0) } Variants \u00b6 Show overall goal progress as last row \u00b6 const DQL = await dv.tryQuery(`TABLE WITHOUT ID file.link, \"<progress style='width:80px;' value='\" + (Lc/Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((Lc/Lt)*100) + \"%</span>\" FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc`) const hrArray = Array(2).fill('<hr style=\"padding:0; margin:0 -10px; border-top: 1px solid var(--background-modifier-border)\">'); const DQLglobal = await dv.tryQuery(`TABLE WITHOUT ID \"Goal Progress\", \"<progress value='\" + (sum(rows.Lc)/sum(rows.Lt))*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;'>\" + round((sum(rows.Lc)/sum(rows.Lt))*100) + \"%</span>\" FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc GROUP BY true`) DQL.values.push(hrArray) DQL.values.push(DQLglobal.values.flatMap(r => r)) dv.table([\"Projects\", \"Progress\"], DQL.values); Show overview for all goals \u00b6 const DQL = await dv.tryQuery(` TABLE WITHOUT ID G AS Goals, rows.OUT, map(rows, (r) => r.Lt), map(rows, (r) => r.Lc), map(rows, (r) => \"<progress style='width:80px;' value='\" + (r.Lc/r.Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((r.Lc/r.Lt)*100) + \"%</span>\") FROM #goal FLATTEN file.outlinks AS OUT WHERE OUT.file.tasks FLATTEN length(OUT.file.tasks) AS Lt FLATTEN length(filter(OUT.file.tasks, (p) => p.completed)) AS Lc GROUP BY file.link AS G SORT G ASC `) const globalValues = DQL.values .map(row => { console.log(row) return [ row[0], //Goals Link removeBulletpoints(row[1]), // Project links removeBulletpoints(row[4]), // progress bars \"<progress value='\" + sumUp(row[3])/sumUp(row[2]) * 100 + \"' max='100'></progress><br><span style='font-size:smaller;'>\" + Math.round(sumUp(row[3])/sumUp(row[2]) * 100) + \"% completed</span>\" ]}) dv.table([\"Goals\", \"Projects\", \"Progress\", \"Goal Progress\"], globalValues); function removeBulletpoints(array) { return array.join(\"<br>\") } function sumUp(val) { return val.reduce((acc, val) => acc + val, 0) }","title":"Show a Goals Overview with progress bars for included projects and overall progress"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/#show-a-goals-overview-with-progress-bars-for-included-projects-and-overall-progress","text":"","title":"Show a Goals Overview with progress bars for included projects and overall progress"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/#basic","text":"const DQL = await dv.tryQuery(` TABLE WITHOUT ID rows.file.link, map(rows, (r) => r.Lt), map(rows, (r) => r.Lc), map(rows, (r) => \"<progress style='width:80px;' value='\" + (r.Lc/r.Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((r.Lc/r.Lt)*100) + \"%</span>\") FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc GROUP BY true `) const globalValues = DQL.values .map(row => [ removeBulletpoints(row[0]), // Project links removeBulletpoints(row[3]), // progress bars \"<progress value='\" + sumUp(row[2])/sumUp(row[1]) * 100 + \"' max='100'></progress><br><span style='font-size:smaller;'>\" + Math.round(sumUp(row[2])/sumUp(row[1]) * 100) + \"% completed</span>\" ]) dv.table([\"Projects\", \"Progress\", \"Goal Progress\"], globalValues); function removeBulletpoints(array) { return array.join(\"<br>\") } function sumUp(val) { return val.reduce((acc, val) => acc + val, 0) }","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/#show-overall-goal-progress-as-last-row","text":"const DQL = await dv.tryQuery(`TABLE WITHOUT ID file.link, \"<progress style='width:80px;' value='\" + (Lc/Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((Lc/Lt)*100) + \"%</span>\" FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc`) const hrArray = Array(2).fill('<hr style=\"padding:0; margin:0 -10px; border-top: 1px solid var(--background-modifier-border)\">'); const DQLglobal = await dv.tryQuery(`TABLE WITHOUT ID \"Goal Progress\", \"<progress value='\" + (sum(rows.Lc)/sum(rows.Lt))*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;'>\" + round((sum(rows.Lc)/sum(rows.Lt))*100) + \"%</span>\" FROM outgoing([Goal 1](<../10 Example Data/projects/Goal 1.md>)) WHERE file.tasks FLATTEN length(file.tasks) AS Lt FLATTEN length(filter(file.tasks, (p) => p.completed)) AS Lc GROUP BY true`) DQL.values.push(hrArray) DQL.values.push(DQLglobal.values.flatMap(r => r)) dv.table([\"Projects\", \"Progress\"], DQL.values);","title":"Show overall goal progress as last row"},{"location":"20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress/#show-overview-for-all-goals","text":"const DQL = await dv.tryQuery(` TABLE WITHOUT ID G AS Goals, rows.OUT, map(rows, (r) => r.Lt), map(rows, (r) => r.Lc), map(rows, (r) => \"<progress style='width:80px;' value='\" + (r.Lc/r.Lt)*100 + \"' max='100'></progress>\" + \"&nbsp;&nbsp;<span style='font-size:smaller;color:var(--text-muted)'>\" + round((r.Lc/r.Lt)*100) + \"%</span>\") FROM #goal FLATTEN file.outlinks AS OUT WHERE OUT.file.tasks FLATTEN length(OUT.file.tasks) AS Lt FLATTEN length(filter(OUT.file.tasks, (p) => p.completed)) AS Lc GROUP BY file.link AS G SORT G ASC `) const globalValues = DQL.values .map(row => { console.log(row) return [ row[0], //Goals Link removeBulletpoints(row[1]), // Project links removeBulletpoints(row[4]), // progress bars \"<progress value='\" + sumUp(row[3])/sumUp(row[2]) * 100 + \"' max='100'></progress><br><span style='font-size:smaller;'>\" + Math.round(sumUp(row[3])/sumUp(row[2]) * 100) + \"% completed</span>\" ]}) dv.table([\"Goals\", \"Projects\", \"Progress\", \"Goal Progress\"], globalValues); function removeBulletpoints(array) { return array.join(\"<br>\") } function sumUp(val) { return val.reduce((acc, val) => acc + val, 0) }","title":"Show overview for all goals"},{"location":"20%20Dataview%20Queries/Show%20a%20calendar%20with%20all%20days%20you%27ve%20prayed/","tags":["dv/table","dv/from","dv/where"],"text":"Show a calender that marks all days with praying = yes Show a calendar with all days you've prayed \u00b6 Basic \u00b6 [!info] You'll need to go back to Januray/Februrary 2022 to see the data. CALENDAR file.day FROM \"10 Example Data/dailys\" WHERE praying = \"yes\"","title":"Show a calendar with all days you've prayed"},{"location":"20%20Dataview%20Queries/Show%20a%20calendar%20with%20all%20days%20you%27ve%20prayed/#show-a-calendar-with-all-days-youve-prayed","text":"","title":"Show a calendar with all days you've prayed"},{"location":"20%20Dataview%20Queries/Show%20a%20calendar%20with%20all%20days%20you%27ve%20prayed/#basic","text":"[!info] You'll need to go back to Januray/Februrary 2022 to see the data. CALENDAR file.day FROM \"10 Example Data/dailys\" WHERE praying = \"yes\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/","tags":["dv/list","dv/from","dv/where","dv/sort","dv/string","dv/split","dv/dateformat","dv/link","dv/join","dv/table","dv/array","dv/choice","dv/typeof"],"text":"Show a certain value for every day of the week, i.e. a summary of the day, or what nice happened the day Show a meta data value for every day of the week \u00b6 Basic \u00b6 Usage in weekly note If you want to use this query in your weekly note and your weekly is named like gggg-[W]ww , i.e. 2022-W4, replace fake.name with file.name LIST summary FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name Alternative usage Instead of a summary of the day you could note down something nice that happened that day and remind yourself that the week was quite nice in retrospective! Variants \u00b6 Print weekdays instead of file names \u00b6 LIST WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**: \" + summary FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name Print weekdays instead of file names but still link to daily \u00b6 LIST WITHOUT ID \"**\" + link(file.path, dateformat(file.day, \"cccc\")) + \"**: \" + summary FROM \"10 Example Data/dailys\" WHERE string(day.year) = split(this.fake.name, \"-W\")[0] AND string(day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name Print multiple values per day \u00b6 LIST WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**: \" + join(note, \" | \") FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name Print multiple values per day as table \u00b6 TABLE WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**\" AS \"Day\" , note FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name Print multiple values per day as table in unified look \u00b6 TABLE WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**\" AS \"Day\" , choice(typeof(note) = \"array\", note, array(note)) AS \"Notes\" FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name","title":"Show a meta data value for every day of the week"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#show-a-meta-data-value-for-every-day-of-the-week","text":"","title":"Show a meta data value for every day of the week"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#basic","text":"Usage in weekly note If you want to use this query in your weekly note and your weekly is named like gggg-[W]ww , i.e. 2022-W4, replace fake.name with file.name LIST summary FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name Alternative usage Instead of a summary of the day you could note down something nice that happened that day and remind yourself that the week was quite nice in retrospective!","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#print-weekdays-instead-of-file-names","text":"LIST WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**: \" + summary FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name","title":"Print weekdays instead of file names"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#print-weekdays-instead-of-file-names-but-still-link-to-daily","text":"LIST WITHOUT ID \"**\" + link(file.path, dateformat(file.day, \"cccc\")) + \"**: \" + summary FROM \"10 Example Data/dailys\" WHERE string(day.year) = split(this.fake.name, \"-W\")[0] AND string(day.weekyear) = split(this.fake.name, \"-W\")[1] SORT file.name","title":"Print weekdays instead of file names but still link to daily"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#print-multiple-values-per-day","text":"LIST WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**: \" + join(note, \" | \") FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name","title":"Print multiple values per day"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#print-multiple-values-per-day-as-table","text":"TABLE WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**\" AS \"Day\" , note FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name","title":"Print multiple values per day as table"},{"location":"20%20Dataview%20Queries/Show%20a%20meta%20data%20value%20for%20every%20day%20of%20the%20week/#print-multiple-values-per-day-as-table-in-unified-look","text":"TABLE WITHOUT ID \"**\" + dateformat(file.day, \"cccc\") + \"**\" AS \"Day\" , choice(typeof(note) = \"array\", note, array(note)) AS \"Notes\" FROM \"10 Example Data/dailys\" WHERE string(file.day.year) = split(this.fake.name2, \"-W\")[0] AND string(file.day.weekyear) = split(this.fake.name2, \"-W\")[1] SORT file.name","title":"Print multiple values per day as table in unified look"},{"location":"20%20Dataview%20Queries/Show%20a%20sum%20row%20for%20numeric%20values%20and%20durations/","tags":["dv/dataviewjs","dvjs/tryQuery","dvjs/table"],"text":"Show a sum row for numeric values and durations Show a sum row for a numeric table \u00b6 Basic \u00b6 // Paste your DQL for the table here: const query = `TABLE situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Sums\"; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) sum += currentValue } if (!sum) sum = \"\" sums.push(sum); } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values) Variants \u00b6 Be able to calculate Durations and ignore non numeric or duration values // Paste your DQL for the table here: const query = `TABLE praying, training, situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Sums\"; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; const dataType = getDatatypeOfColumn(i, DQL.values) // check if we have a calculateable datatype - if not, skip the column if (![\"number\", \"duration\"].includes(dataType)) { sums.push(\"\") continue; } // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) sum += currentValue } if (!sum) sum = \"\" sums.push(dataType === \"duration\" ? dv.luxon.Duration.fromMillis(sum) : sum); } function getDatatypeOfColumn(columnNo, values) { let i = 0; let datatype; while (i < DQL.values[0].length && (!datatype || datatype === \"null\")) { datatype = dv.func.typeof(DQL.values[i][columnNo]) i++; } return datatype; } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values)","title":"Show a sum row for numeric values and durations"},{"location":"20%20Dataview%20Queries/Show%20a%20sum%20row%20for%20numeric%20values%20and%20durations/#show-a-sum-row-for-a-numeric-table","text":"","title":"Show a sum row for a numeric table"},{"location":"20%20Dataview%20Queries/Show%20a%20sum%20row%20for%20numeric%20values%20and%20durations/#basic","text":"// Paste your DQL for the table here: const query = `TABLE situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Sums\"; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) sum += currentValue } if (!sum) sum = \"\" sums.push(sum); } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values)","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20a%20sum%20row%20for%20numeric%20values%20and%20durations/#variants","text":"Be able to calculate Durations and ignore non numeric or duration values // Paste your DQL for the table here: const query = `TABLE praying, training, situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Sums\"; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; const dataType = getDatatypeOfColumn(i, DQL.values) // check if we have a calculateable datatype - if not, skip the column if (![\"number\", \"duration\"].includes(dataType)) { sums.push(\"\") continue; } // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) sum += currentValue } if (!sum) sum = \"\" sums.push(dataType === \"duration\" ? dv.luxon.Duration.fromMillis(sum) : sum); } function getDatatypeOfColumn(columnNo, values) { let i = 0; let datatype; while (i < DQL.values[0].length && (!datatype || datatype === \"null\")) { datatype = dv.func.typeof(DQL.values[i][columnNo]) i++; } return datatype; } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values)","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20birthdays%20for%20this%20month/","tags":["dv/list","dv/where","dv/from","dv/inline","dvjs/pages","dvjs/where"],"text":"List all persons that have birthday the current month Contributed via Discord Show all birthdays for this month \u00b6 Basic \u00b6 LIST birthday FROM \"10 Example Data/people\" WHERE birthday.month = date(today).month Variants \u00b6 As inline query \u00b6 $=dv.pages('\"10 Example Data/people\"').where(p => p.birthday).where(p => p.birthday.month == dv.date('today').month).file.link","title":"Show all birthdays for this month"},{"location":"20%20Dataview%20Queries/Show%20all%20birthdays%20for%20this%20month/#show-all-birthdays-for-this-month","text":"","title":"Show all birthdays for this month"},{"location":"20%20Dataview%20Queries/Show%20all%20birthdays%20for%20this%20month/#basic","text":"LIST birthday FROM \"10 Example Data/people\" WHERE birthday.month = date(today).month","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20birthdays%20for%20this%20month/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20birthdays%20for%20this%20month/#as-inline-query","text":"$=dv.pages('\"10 Example Data/people\"').where(p => p.birthday).where(p => p.birthday.month == dv.date('today').month).file.link","title":"As inline query"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20containing%20a%20specific%20metadata%20value/","tags":["dv/table","dv/from","dv/where","dv/flatten","dv/contains"],"text":"Show all bullet points that contain a certain metadata value Show all list items containing a specific metadata value \u00b6 Basic \u00b6 All lists with \"Surname\" in the inline field author:: TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.author, \"Surname\")","title":"Show all list items containing a specific metadata value"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20containing%20a%20specific%20metadata%20value/#show-all-list-items-containing-a-specific-metadata-value","text":"","title":"Show all list items containing a specific metadata value"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20containing%20a%20specific%20metadata%20value/#basic","text":"All lists with \"Surname\" in the inline field author:: TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.author, \"Surname\")","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading%20with%20a%20metadata%20field/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/flatten","dv/meta","dv/contains"],"text":"Show all bullet points that are in a specific section and have a certain metadata value Show all list items under a specific heading with a metadata field \u00b6 Basic \u00b6 All lists inside the section \"Topics\" with \"Nickname\" in the inline field author:: TABLE L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Topics\" WHERE contains(L.author, \"Nickname\") Variants \u00b6 grouping by file \u00b6 TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Topics\" WHERE contains(L.author, \"Nickname\") GROUP BY file.link","title":"Show all list items under a specific heading with a metadata field"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading%20with%20a%20metadata%20field/#show-all-list-items-under-a-specific-heading-with-a-metadata-field","text":"","title":"Show all list items under a specific heading with a metadata field"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading%20with%20a%20metadata%20field/#basic","text":"All lists inside the section \"Topics\" with \"Nickname\" in the inline field author:: TABLE L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Topics\" WHERE contains(L.author, \"Nickname\")","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading%20with%20a%20metadata%20field/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading%20with%20a%20metadata%20field/#grouping-by-file","text":"TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Topics\" WHERE contains(L.author, \"Nickname\") GROUP BY file.link","title":"grouping by file"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/flatten","dv/meta","dv/filter"],"text":"List all bullet points under a certain heading Show all list items under a specific heading \u00b6 Basic \u00b6 All lists inside the section \"Research\" TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\" Variants \u00b6 grouping by file \u00b6 TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\" GROUP BY file.link Using flatten/filter instead of group-by \u00b6 TABLE WITHOUT ID \"<nobr>\" + file.link + \"</nobr>\" AS Page, Research FROM \"10 Example Data/dailys\" FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Research\").text) as Research WHERE Research Using flatten to make multiple columns based on different headings \u00b6 TABLE WITHOUT ID \"<nobr>\" + file.link + \"</nobr>\" AS Page, Research, Topics FROM \"10 Example Data/dailys\" FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Research\").text) as Research FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Topics\").text) as Topics WHERE Research OR Topics","title":"Show all list items under a specific heading"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#show-all-list-items-under-a-specific-heading","text":"","title":"Show all list items under a specific heading"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#basic","text":"All lists inside the section \"Research\" TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#grouping-by-file","text":"TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE meta(L.section).subpath = \"Research\" GROUP BY file.link","title":"grouping by file"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#using-flattenfilter-instead-of-group-by","text":"TABLE WITHOUT ID \"<nobr>\" + file.link + \"</nobr>\" AS Page, Research FROM \"10 Example Data/dailys\" FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Research\").text) as Research WHERE Research","title":"Using flatten/filter instead of group-by"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20under%20a%20specific%20heading/#using-flatten-to-make-multiple-columns-based-on-different-headings","text":"TABLE WITHOUT ID \"<nobr>\" + file.link + \"</nobr>\" AS Page, Research, Topics FROM \"10 Example Data/dailys\" FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Research\").text) as Research FLATTEN list(filter(file.lists, (x) => meta(x.section).subpath = \"Topics\").text) as Topics WHERE Research OR Topics","title":"Using flatten to make multiple columns based on different headings"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20with%20a%20certain%20word%20as%20a%20table/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/flatten","dv/icontains"],"text":"Print all Bullet Points that contain a certain word Show all list items with a certain word as a table \u00b6 Basic \u00b6 TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") Variants \u00b6 Group items by file \u00b6 TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") GROUP BY file.link","title":"Show all list items with a certain word as a table"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20with%20a%20certain%20word%20as%20a%20table/#show-all-list-items-with-a-certain-word-as-a-table","text":"","title":"Show all list items with a certain word as a table"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20with%20a%20certain%20word%20as%20a%20table/#basic","text":"TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\")","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20with%20a%20certain%20word%20as%20a%20table/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20list%20items%20with%20a%20certain%20word%20as%20a%20table/#group-items-by-file","text":"TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE icontains(L.text, \"ipsum\") GROUP BY file.link","title":"Group items by file"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/","tags":["dv/dataviewjs","dvjs/pages","dvjs/where","dvjs/container","dvjs/list","dvjs/view"],"text":"Show all images you have in your daily notes for this week in an image grid Show all photos of the week in a grid \u00b6 Basic \u00b6 Additional CSS Snippet required A CSS Snippet is in place to style this query. You'll find it under .obsidian\\snippets\\show-photos-of-the-week-as-grid.css as well as below. Read more about how to use CSS Snippets Usage in a weekly note When you want to use this query in a weekly note and your weekly note is named like \"2022W2\", use this as the first line: const yearAndWeek = dv.current().file.name.split('-W') This will retrieve the year and weeknumber information from your file name and you do not need to adjust this manually. const yearAndWeek = [\"2022\", \"02\"] const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.file.day && p.file.day.year == yearAndWeek[0] && p.file.day.weekNumber == yearAndWeek[1]) dv.container.className += ' imagegrid' dv.list(pages.picoftheday) Used CSS Snippet \u00b6 .imagegrid ul { display: flex; flex-wrap: wrap; flex-direction: row; } .imagegrid ul li { display: flex; flex-direction: column; } .imagegrid ul li::marker { content: \"\"; } /* I wanted to ignore the width on the images and set a fixed one for them. Remove if you want to preserve the width configured on the image link itself. */ .imagegrid ul li img, .markdown-rendered img:not([width]) { max-width: 200px; } Variants \u00b6 Use as view snippet with a library for a nice layout \u00b6 Adjustment of script necessary For demonstration purposes, the variable \"yearAndWeek\" is hardcoded to [\"2022\", \"2\"]. In order to use the script inside your vault, you need to adjust this line as explained inside the script. await dv.view('00 Meta/dataview_views/imagegrid', { current: dv.current(), dailyNotesSearchQuery: '\"10 Example Data/dailys\"', metadatafield: 'picoftheday'})","title":"Show all photos of the week in a grid"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/#show-all-photos-of-the-week-in-a-grid","text":"","title":"Show all photos of the week in a grid"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/#basic","text":"Additional CSS Snippet required A CSS Snippet is in place to style this query. You'll find it under .obsidian\\snippets\\show-photos-of-the-week-as-grid.css as well as below. Read more about how to use CSS Snippets Usage in a weekly note When you want to use this query in a weekly note and your weekly note is named like \"2022W2\", use this as the first line: const yearAndWeek = dv.current().file.name.split('-W') This will retrieve the year and weeknumber information from your file name and you do not need to adjust this manually. const yearAndWeek = [\"2022\", \"02\"] const pages = dv.pages('\"10 Example Data/dailys\"').where(p => p.file.day && p.file.day.year == yearAndWeek[0] && p.file.day.weekNumber == yearAndWeek[1]) dv.container.className += ' imagegrid' dv.list(pages.picoftheday)","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/#used-css-snippet","text":".imagegrid ul { display: flex; flex-wrap: wrap; flex-direction: row; } .imagegrid ul li { display: flex; flex-direction: column; } .imagegrid ul li::marker { content: \"\"; } /* I wanted to ignore the width on the images and set a fixed one for them. Remove if you want to preserve the width configured on the image link itself. */ .imagegrid ul li img, .markdown-rendered img:not([width]) { max-width: 200px; }","title":"Used CSS Snippet"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20all%20photos%20of%20the%20week%20in%20a%20grid/#use-as-view-snippet-with-a-library-for-a-nice-layout","text":"Adjustment of script necessary For demonstration purposes, the variable \"yearAndWeek\" is hardcoded to [\"2022\", \"2\"]. In order to use the script inside your vault, you need to adjust this line as explained inside the script. await dv.view('00 Meta/dataview_views/imagegrid', { current: dv.current(), dailyNotesSearchQuery: '\"10 Example Data/dailys\"', metadatafield: 'picoftheday'})","title":"Use as view snippet with a library for a nice layout"},{"location":"20%20Dataview%20Queries/Show%20an%20average%20row%20on%20tables%20for%20numeric%20values%20or%20durations/","tags":["dv/dataviewjs","dvjs/tryQuery","dvjs/func","dvjs/table"],"text":"Show a average row for numeric values and durations Show an average row on tables for numeric values or durations \u00b6 Basic \u00b6 // Paste your DQL for the table here: const query = `TABLE praying, training, situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Avg\"; // change how many digits you want to see after comma const digitAfterComma = 1; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; let count = 0; const dataType = getDatatypeOfColumn(i, DQL.values) // check if we have a calculateable datatype - if not, skip the column if (![\"number\", \"duration\"].includes(dataType)) { sums.push(\"\") continue; } // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) { sum += currentValue; count++; } } let avg = sum ? (sum / count).toFixed(digitAfterComma) : \"\"; sums.push(dataType === \"duration\" ? dv.luxon.Duration.fromMillis(avg) : avg); } function getDatatypeOfColumn(columnNo, values) { let i = 0; let datatype; while (i < DQL.values[0].length && (!datatype || datatype === \"null\")) { datatype = dv.func.typeof(DQL.values[i][columnNo]) i++; } return datatype; } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values)","title":"Show an average row on tables for numeric values or durations"},{"location":"20%20Dataview%20Queries/Show%20an%20average%20row%20on%20tables%20for%20numeric%20values%20or%20durations/#show-an-average-row-on-tables-for-numeric-values-or-durations","text":"","title":"Show an average row on tables for numeric values or durations"},{"location":"20%20Dataview%20Queries/Show%20an%20average%20row%20on%20tables%20for%20numeric%20values%20or%20durations/#basic","text":"// Paste your DQL for the table here: const query = `TABLE praying, training, situps, steps FROM \"10 Example Data/dailys\" WHERE file.day.month = 2` // change the name of the total row, if you like: const nameOfTotalRow = \"Avg\"; // change how many digits you want to see after comma const digitAfterComma = 1; // you don't need to touch this, normally. // get the data from the query above let DQL = await dv.tryQuery(query); const sums = [nameOfTotalRow]; // for each header (except the first one, which is \"File\")... for (let i = 1; i < DQL.headers.length; i++) { let sum = 0; let count = 0; const dataType = getDatatypeOfColumn(i, DQL.values) // check if we have a calculateable datatype - if not, skip the column if (![\"number\", \"duration\"].includes(dataType)) { sums.push(\"\") continue; } // ... and for each row ... for (let k = 0; k < DQL.values.length; k++) { // get the current cell (row k and column i) and add it to the sum, if set let currentValue = DQL.values[k][i]; if (currentValue) { sum += currentValue; count++; } } let avg = sum ? (sum / count).toFixed(digitAfterComma) : \"\"; sums.push(dataType === \"duration\" ? dv.luxon.Duration.fromMillis(avg) : avg); } function getDatatypeOfColumn(columnNo, values) { let i = 0; let datatype; while (i < DQL.values[0].length && (!datatype || datatype === \"null\")) { datatype = dv.func.typeof(DQL.values[i][columnNo]) i++; } return datatype; } // add a divider line for visual distinction between the query and the sums (thanks, Jillard!), add both to the table data let hrArray = Array(DQL.headers.length).fill('<hr style=\"padding:0; margin:0 -10px;\">'); DQL.values.push(hrArray) DQL.values.push(sums) //print the table dv.table(DQL.headers, DQL.values)","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/","tags":["dv/table","dv/from","dv/flatten","dv/sort","dv/regexreplace"],"text":"Show a bullet point list as a table with their metadata and sections (headers) as columns Show list items as table with their metadata and sections \u00b6 Basic \u00b6 TABLE WITHOUT ID L.text AS \"Food\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before Variants \u00b6 Show the headings they belong to as a column \u00b6 TABLE WITHOUT ID L.text AS \"Food\", meta(L.section).subpath AS \"Type\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before Remove meta data from bullet point text \u00b6 TABLE WITHOUT ID regexreplace(L.text, \"\\[best-before:: [0-9-]+\\]\", \"\") AS \"Food\", meta(L.section).subpath AS \"Type\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before","title":"Show list items as table with their metadata and sections"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/#show-list-items-as-table-with-their-metadata-and-sections","text":"","title":"Show list items as table with their metadata and sections"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/#basic","text":"TABLE WITHOUT ID L.text AS \"Food\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/#show-the-headings-they-belong-to-as-a-column","text":"TABLE WITHOUT ID L.text AS \"Food\", meta(L.section).subpath AS \"Type\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before","title":"Show the headings they belong to as a column"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20as%20table%20with%20their%20metadata%20and%20sections/#remove-meta-data-from-bullet-point-text","text":"TABLE WITHOUT ID regexreplace(L.text, \"\\[best-before:: [0-9-]+\\]\", \"\") AS \"Food\", meta(L.section).subpath AS \"Type\", L.best-before AS \"Best before \u2b07\" FROM \"10 Example Data/food/Food pantry\" FLATTEN file.lists AS L SORT L.best-before","title":"Remove meta data from bullet point text"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20containing%20a%20certain%20tag/","tags":["dv/table","dv/from","dv/where","dv/groupby","dv/flatten","dv/contains"],"text":"Show all bullet points that contain a certain tag Show list items containing a certain tag \u00b6 Basic \u00b6 TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\") Variants \u00b6 grouping by file \u00b6 TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\") GROUP BY file.link","title":"Show list items containing a certain tag"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20containing%20a%20certain%20tag/#show-list-items-containing-a-certain-tag","text":"","title":"Show list items containing a certain tag"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20containing%20a%20certain%20tag/#basic","text":"TABLE L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\")","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20containing%20a%20certain%20tag/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20list%20items%20containing%20a%20certain%20tag/#grouping-by-file","text":"TABLE rows.L.text AS \"My lists\" FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.tags, \"#tag1\") GROUP BY file.link","title":"grouping by file"},{"location":"20%20Dataview%20Queries/Show%20modified%20file%20dates%20in%20a%20calendar%20view/","tags":["dv/calendar"],"text":"Show on which date which files were edited Show modified file dates in a calendar view \u00b6 Basic \u00b6 CALENDAR file.mtime","title":"Show modified file dates in a calendar view"},{"location":"20%20Dataview%20Queries/Show%20modified%20file%20dates%20in%20a%20calendar%20view/#show-modified-file-dates-in-a-calendar-view","text":"","title":"Show modified file dates in a calendar view"},{"location":"20%20Dataview%20Queries/Show%20modified%20file%20dates%20in%20a%20calendar%20view/#basic","text":"CALENDAR file.mtime","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/","tags":["dv/table","dv/date","dv/dateformat","dv/from","dv/where","dv/groupby"],"text":"Shows all projects with a finish date that lies in a specific month or year, optionally with additional metadata Contributed by Jillard via Discord Show projects finished this month \u00b6 Basic \u00b6 Table finished FROM \"10 Example Data/projects\" WHERE dateformat(date(finished), \"yyyy-MM\") = \"2022-07\" Variants \u00b6 Show additional metadata \u00b6 Table project-id, finished, tags FROM \"10 Example Data/projects\" WHERE dateformat(date(finished), \"yyyy-MM\") = \"2022-07\" Show all finished projects grouped by month \u00b6 Table rows.project-id AS \"Project ID\", rows.finished AS \"Finished on\", rows.tags AS \"Tags\" FROM \"10 Example Data/projects\" WHERE finished GROUP BY dateformat(date(finished), \"yyyy-MM\") Show all finished projects grouped by month of a specific year \u00b6 Table rows.file.link AS \"project\", rows.finished AS \"Finished on\" FROM \"10 Example Data/projects\" WHERE finished AND dateformat(date(finished), \"yyyy\") = \"2022\" GROUP BY dateformat(date(finished), \"yyyy-MM\")","title":"Show projects finished in a specific month or year"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#show-projects-finished-this-month","text":"","title":"Show projects finished this month"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#basic","text":"Table finished FROM \"10 Example Data/projects\" WHERE dateformat(date(finished), \"yyyy-MM\") = \"2022-07\"","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#show-additional-metadata","text":"Table project-id, finished, tags FROM \"10 Example Data/projects\" WHERE dateformat(date(finished), \"yyyy-MM\") = \"2022-07\"","title":"Show additional metadata"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#show-all-finished-projects-grouped-by-month","text":"Table rows.project-id AS \"Project ID\", rows.finished AS \"Finished on\", rows.tags AS \"Tags\" FROM \"10 Example Data/projects\" WHERE finished GROUP BY dateformat(date(finished), \"yyyy-MM\")","title":"Show all finished projects grouped by month"},{"location":"20%20Dataview%20Queries/Show%20projects%20finished%20in%20a%20specific%20month%20or%20year/#show-all-finished-projects-grouped-by-month-of-a-specific-year","text":"Table rows.file.link AS \"project\", rows.finished AS \"Finished on\" FROM \"10 Example Data/projects\" WHERE finished AND dateformat(date(finished), \"yyyy\") = \"2022\" GROUP BY dateformat(date(finished), \"yyyy-MM\")","title":"Show all finished projects grouped by month of a specific year"},{"location":"20%20Dataview%20Queries/Show%20two%20meta%20data%20fields%20in%20same%20table%20column/","tags":["dv/table","dv/from","dv/where","dv/flatten","dv/filter"],"text":"Show multiple meta data fields in one table column - useful when you need to take renamed fields into account Show two metadatas in same table column \u00b6 Basic \u00b6 TABLE wake-up, [go-to-sleep, gotosleep] as \"Bed time\", [lunch, dinner] AS \"Meal times\" from \"10 Example Data/dailys\" where date(day).weekyear = 3 Variants \u00b6 In case you only have one valid value per file for this column that is stored in different meta data fields, use filter and flatten: TABLE wake-up, ST AS \"Bed time\", [lunch, dinner] AS \"Meal times\" from \"10 Example Data/dailys\" where date(day).weekyear = 3 FLATTEN filter([gotosleep, go-to-sleep], (x) => x) as ST","title":"Show two meta data fields in same table column"},{"location":"20%20Dataview%20Queries/Show%20two%20meta%20data%20fields%20in%20same%20table%20column/#show-two-metadatas-in-same-table-column","text":"","title":"Show two metadatas in same table column"},{"location":"20%20Dataview%20Queries/Show%20two%20meta%20data%20fields%20in%20same%20table%20column/#basic","text":"TABLE wake-up, [go-to-sleep, gotosleep] as \"Bed time\", [lunch, dinner] AS \"Meal times\" from \"10 Example Data/dailys\" where date(day).weekyear = 3","title":"Basic"},{"location":"20%20Dataview%20Queries/Show%20two%20meta%20data%20fields%20in%20same%20table%20column/#variants","text":"In case you only have one valid value per file for this column that is stored in different meta data fields, use filter and flatten: TABLE wake-up, ST AS \"Bed time\", [lunch, dinner] AS \"Meal times\" from \"10 Example Data/dailys\" where date(day).weekyear = 3 FLATTEN filter([gotosleep, go-to-sleep], (x) => x) as ST","title":"Variants"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/","tags":["dv/table","dv/sort","dv/flatten","dv/where","dv/from","dv/groupby","dv/default","dv/choice"],"text":"Lets you define a custom sorting that is not alphabetical Contributed via Discord Sort a table with a custom sort order \u00b6 Basic \u00b6 TABLE rows.file.link FROM \"10 Example Data/food\" WHERE recipe-type GROUP BY recipe-type SORT choice(recipe-type = \"vegetarian\", \"1\", choice(recipe-type = \"meat\", \"2\",\"3\")) ASC Variants \u00b6 If you have a lot of values to sort \u00b6 Query Explanation Wondering what's happening here? Let's have a look. First, we're calling default(customsort, \"99\") - that means \"If the custom sort doesn't return anything, use 99 as the sort value\" - and since we have less than 99 sort items, it'll put it to the very end (and sort all with the same value alphabetically). The magic happens here: ((x) => something)(G) We're calling ((x) => something)(G) , meaning we define a lambda function and put in G (our flattened Genre) as a parameter. G becomes x inside the function. { \"Drama\":1, \"Crime\":2, \"Horror\": 3, \"Comedy\": 4, \"Thriller\": 5, \"Science-Fiction\": 6 } is an object that maps our genres to a numeric value that's in the end used to define the sorting. This is what puts \"Drama\" first and \"Crime\" second. By calling [x] at the very end, we \"search\" for the genre we pass into the lambda inside the function - returning its numeric value if available or nothing if we did not define it. In case of the latter, we'll get back 99 due to the default on top. With a flattened field \u00b6 TABLE WITHOUT ID key AS \"genre\", rows.file.link AS \"shows\" FROM \"10 Example Data/shows\" FLATTEN Genre as G GROUP BY G SORT default(((x) => { \"Drama\":1, \"Crime\":2, \"Horror\": 3, \"Comedy\": 4, \"Thriller\": 5, \"Science-Fiction\": 6 }[x])(G), \"99\") ASC With no flattened field \u00b6 TABLE Show_status FROM \"10 Example Data/shows\" SORT default(((x) => { \"Running\":1, \"To Be Determined\": 2, \"Ended\": 3 }[x])(show_status), \"99\") ASC","title":"Sort a table with a custom sort order"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#sort-a-table-with-a-custom-sort-order","text":"","title":"Sort a table with a custom sort order"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#basic","text":"TABLE rows.file.link FROM \"10 Example Data/food\" WHERE recipe-type GROUP BY recipe-type SORT choice(recipe-type = \"vegetarian\", \"1\", choice(recipe-type = \"meat\", \"2\",\"3\")) ASC","title":"Basic"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#if-you-have-a-lot-of-values-to-sort","text":"Query Explanation Wondering what's happening here? Let's have a look. First, we're calling default(customsort, \"99\") - that means \"If the custom sort doesn't return anything, use 99 as the sort value\" - and since we have less than 99 sort items, it'll put it to the very end (and sort all with the same value alphabetically). The magic happens here: ((x) => something)(G) We're calling ((x) => something)(G) , meaning we define a lambda function and put in G (our flattened Genre) as a parameter. G becomes x inside the function. { \"Drama\":1, \"Crime\":2, \"Horror\": 3, \"Comedy\": 4, \"Thriller\": 5, \"Science-Fiction\": 6 } is an object that maps our genres to a numeric value that's in the end used to define the sorting. This is what puts \"Drama\" first and \"Crime\" second. By calling [x] at the very end, we \"search\" for the genre we pass into the lambda inside the function - returning its numeric value if available or nothing if we did not define it. In case of the latter, we'll get back 99 due to the default on top.","title":"If you have a lot of values to sort"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#with-a-flattened-field","text":"TABLE WITHOUT ID key AS \"genre\", rows.file.link AS \"shows\" FROM \"10 Example Data/shows\" FLATTEN Genre as G GROUP BY G SORT default(((x) => { \"Drama\":1, \"Crime\":2, \"Horror\": 3, \"Comedy\": 4, \"Thriller\": 5, \"Science-Fiction\": 6 }[x])(G), \"99\") ASC","title":"With a flattened field"},{"location":"20%20Dataview%20Queries/Sort%20a%20table%20with%20a%20custom%20sort%20order/#with-no-flattened-field","text":"TABLE Show_status FROM \"10 Example Data/shows\" SORT default(((x) => { \"Running\":1, \"To Be Determined\": 2, \"Ended\": 3 }[x])(show_status), \"99\") ASC","title":"With no flattened field"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/","tags":["dv/TABLE","dv/FROM","dv/FLATTEN"],"text":"Style columns of your output by i.e. right-align table columns, add bold or italic font style or color text without the need of a css snippet Contributed by mnvwvnm Style dataview table columns \u00b6 Basic \u00b6 TABLE publisher, developer, \"<span style='display:flex; justify-content: right;'>\" + price + \"</span>\" AS Price FROM \"10 Example Data/games\" Other style possibilities For bold, italic, highlighted or strikethrough text, see the first variant. Underscore text : <span style='text-decoration: underline;'> Right alignment : <span style='display:flex; justify-content: right;'> Center alignment : <span style='display:flex; justify-content: center;'> Make text uppercase : <span style='text-transform: uppercase;'> Text color : <span style='color: red;'> Variants \u00b6 Use bold, italic or highlight text styles \u00b6 Available styles You can use every style Obsidian has available this way. TABLE \"_\" + publisher + \"_\" AS Publisher, \"**\" + developer + \"**\" AS Developer, \"==\" + price + \"==\" AS Price FROM \"10 Example Data/games\" Style multiple columns \u00b6 TABLE styleStart + author + styleEnd AS Author, genres, styleStart + totalPages + styleEnd AS \"Total Pages\" FROM \"10 Example Data/books\" FLATTEN \"<span style='display:flex; justify-content: center;'>\" AS styleStart FLATTEN \"</span>\" AS styleEnd Use different styles \u00b6 TABLE greenStyle + author + styleEnd AS Author, genres, rightAlignStyle + totalPages + styleEnd AS \"Total Pages\" FROM \"10 Example Data/books\" FLATTEN \"<span style='color: lightgreen;'>\" AS greenStyle FLATTEN \"<span style='display:flex; justify-content: right;'>\" AS rightAlignStyle FLATTEN \"</span>\" AS styleEnd Style page link \u00b6 TABLE WITHOUT ID styleStart + file.link + styleEnd AS \"Book\", author, totalPages FROM \"10 Example Data/books\" FLATTEN \"<span style='text-transform: uppercase;'>\" AS styleStart FLATTEN \"</span>\" AS styleEnd","title":"Style dataview table columns"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#style-dataview-table-columns","text":"","title":"Style dataview table columns"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#basic","text":"TABLE publisher, developer, \"<span style='display:flex; justify-content: right;'>\" + price + \"</span>\" AS Price FROM \"10 Example Data/games\" Other style possibilities For bold, italic, highlighted or strikethrough text, see the first variant. Underscore text : <span style='text-decoration: underline;'> Right alignment : <span style='display:flex; justify-content: right;'> Center alignment : <span style='display:flex; justify-content: center;'> Make text uppercase : <span style='text-transform: uppercase;'> Text color : <span style='color: red;'>","title":"Basic"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#use-bold-italic-or-highlight-text-styles","text":"Available styles You can use every style Obsidian has available this way. TABLE \"_\" + publisher + \"_\" AS Publisher, \"**\" + developer + \"**\" AS Developer, \"==\" + price + \"==\" AS Price FROM \"10 Example Data/games\"","title":"Use bold, italic or highlight text styles"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#style-multiple-columns","text":"TABLE styleStart + author + styleEnd AS Author, genres, styleStart + totalPages + styleEnd AS \"Total Pages\" FROM \"10 Example Data/books\" FLATTEN \"<span style='display:flex; justify-content: center;'>\" AS styleStart FLATTEN \"</span>\" AS styleEnd","title":"Style multiple columns"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#use-different-styles","text":"TABLE greenStyle + author + styleEnd AS Author, genres, rightAlignStyle + totalPages + styleEnd AS \"Total Pages\" FROM \"10 Example Data/books\" FLATTEN \"<span style='color: lightgreen;'>\" AS greenStyle FLATTEN \"<span style='display:flex; justify-content: right;'>\" AS rightAlignStyle FLATTEN \"</span>\" AS styleEnd","title":"Use different styles"},{"location":"20%20Dataview%20Queries/Style%20dataview%20table%20columns/#style-page-link","text":"TABLE WITHOUT ID styleStart + file.link + styleEnd AS \"Book\", author, totalPages FROM \"10 Example Data/books\" FLATTEN \"<span style='text-transform: uppercase;'>\" AS styleStart FLATTEN \"</span>\" AS styleEnd","title":"Style page link"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/","tags":["dv/TABLE","dv/WHERE","dv/date","dv/replace","dv/FLATTEN","dv/regexreplace"],"text":"Transform textual date informations in your meta data to proper dataview dates to do calculations with them Transform date meta data for calculations \u00b6 Basic \u00b6 ISO format In order to be recognizable by dataviews date function, that again enables us to calculate with dates, the date needs to be in ISO format , in most cases something like 2022-10-08T19:03:22 . If your date is stored in another format, you need to transform it to fit ISO. halfISO:: 2022-09-20 10:30 TABLE halfISO, date(replace(halfISO, \" \", \"T\")) WHERE file = this.file Variants \u00b6 Calculate with dates after transformation \u00b6 halfISO-start:: 2022-09-20 10:30 halfISO-end:: 2022-10-01 15:00 TABLE start, end, end - start AS duration WHERE file = this.file FLATTEN date(replace(halfISO-start, \" \", \"T\")) AS start FLATTEN date(replace(halfISO-end, \" \", \"T\")) AS end Using other formats \u00b6 Keep it as ISO as possible If your date format diverges a lot from the ISO format, transforming it becomes cumbersome and errorprone. For example, the following examples do not work if you have no time or do not use two-digits in the date. To keep yourself from trouble, whenever possible try to keep the ISO format as much as possible. germanformat:: 22.09.2022 11:15 TABLE date(regexreplace(germanformat, \"([0-9]+).([0-9]+).([0-9]+) (.+)\", \"$3-$2-$1T$4\")) AS \"date\" WHERE germanformat americanformat:: 09/25/2022 09:09 AM TABLE date(regexreplace(americanformat, \"([0-9]+)/([0-9]+)/([0-9]+) ([0-9:]+)(.+)\", \"$3-$1-$2T$4\")) AS \"date\" WHERE americanformat","title":"Transform date meta data for calculations"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/#transform-date-meta-data-for-calculations","text":"","title":"Transform date meta data for calculations"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/#basic","text":"ISO format In order to be recognizable by dataviews date function, that again enables us to calculate with dates, the date needs to be in ISO format , in most cases something like 2022-10-08T19:03:22 . If your date is stored in another format, you need to transform it to fit ISO. halfISO:: 2022-09-20 10:30 TABLE halfISO, date(replace(halfISO, \" \", \"T\")) WHERE file = this.file","title":"Basic"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/#calculate-with-dates-after-transformation","text":"halfISO-start:: 2022-09-20 10:30 halfISO-end:: 2022-10-01 15:00 TABLE start, end, end - start AS duration WHERE file = this.file FLATTEN date(replace(halfISO-start, \" \", \"T\")) AS start FLATTEN date(replace(halfISO-end, \" \", \"T\")) AS end","title":"Calculate with dates after transformation"},{"location":"20%20Dataview%20Queries/Transform%20date%20meta%20data%20for%20calculations/#using-other-formats","text":"Keep it as ISO as possible If your date format diverges a lot from the ISO format, transforming it becomes cumbersome and errorprone. For example, the following examples do not work if you have no time or do not use two-digits in the date. To keep yourself from trouble, whenever possible try to keep the ISO format as much as possible. germanformat:: 22.09.2022 11:15 TABLE date(regexreplace(germanformat, \"([0-9]+).([0-9]+).([0-9]+) (.+)\", \"$3-$2-$1T$4\")) AS \"date\" WHERE germanformat americanformat:: 09/25/2022 09:09 AM TABLE date(regexreplace(americanformat, \"([0-9]+)/([0-9]+)/([0-9]+) ([0-9:]+)(.+)\", \"$3-$1-$2T$4\")) AS \"date\" WHERE americanformat","title":"Using other formats"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/","tags":["dv/list","dv/where","dv/flatten","dv/date","dv/regexreplace","dv/table"],"text":"Interpret a link to a daily note (in format YYYY-MM-DD) with a given time as a date Contributed by via Discord Use daily file names as real dates \u00b6 Basic \u00b6 due:: 2022-01-26 LIST due.day WHERE due Variants \u00b6 Take a time into account \u00b6 dueWithTime:: 2022-01-28 10:50 LIST dueDate WHERE dueWithTime FLATTEN date(regexreplace(dueWithTime, \"\\[\\[(.+?)\\]\\] (.+)\", \"$1T$2\")) AS dueDate Ignore trailing text \u00b6 dueWithTrailingText:: 2022-01-30 need to hand in assignment LIST dueDate WHERE dueWithTrailingText FLATTEN date(regexreplace(dueWithTrailingText, \"\\[\\[(.+?)\\]\\].+\", \"$1\")) AS dueDate Ignore trailing text but keep time information \u00b6 dueWithTimeAndTrailingText:: 2022-01-30 09:00 need to hand in assignment LIST dueDate WHERE dueWithTimeAndTrailingText FLATTEN date(regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+).+\", \"$1T$2\")) AS dueDate Split date/time and trailing text into two separate informations \u00b6 TABLE dueDate, subject WHERE dueWithTimeAndTrailingText FLATTEN date(regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+).+\", \"$1T$2\")) AS dueDate FLATTEN regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+)? (.+)\", \"$3\") AS subject","title":"Use daily file names as real dates"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#use-daily-file-names-as-real-dates","text":"","title":"Use daily file names as real dates"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#basic","text":"due:: 2022-01-26 LIST due.day WHERE due","title":"Basic"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#variants","text":"","title":"Variants"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#take-a-time-into-account","text":"dueWithTime:: 2022-01-28 10:50 LIST dueDate WHERE dueWithTime FLATTEN date(regexreplace(dueWithTime, \"\\[\\[(.+?)\\]\\] (.+)\", \"$1T$2\")) AS dueDate","title":"Take a time into account"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#ignore-trailing-text","text":"dueWithTrailingText:: 2022-01-30 need to hand in assignment LIST dueDate WHERE dueWithTrailingText FLATTEN date(regexreplace(dueWithTrailingText, \"\\[\\[(.+?)\\]\\].+\", \"$1\")) AS dueDate","title":"Ignore trailing text"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#ignore-trailing-text-but-keep-time-information","text":"dueWithTimeAndTrailingText:: 2022-01-30 09:00 need to hand in assignment LIST dueDate WHERE dueWithTimeAndTrailingText FLATTEN date(regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+).+\", \"$1T$2\")) AS dueDate","title":"Ignore trailing text but keep time information"},{"location":"20%20Dataview%20Queries/Use%20daily%20file%20names%20as%20real%20dates/#split-datetime-and-trailing-text-into-two-separate-informations","text":"TABLE dueDate, subject WHERE dueWithTimeAndTrailingText FLATTEN date(regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+).+\", \"$1T$2\")) AS dueDate FLATTEN regexreplace(dueWithTimeAndTrailingText, \"\\[\\[(.+?)\\]\\] ?([0-9:]+)? (.+)\", \"$3\") AS subject","title":"Split date/time and trailing text into two separate informations"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Dataview%20Queries%20Overview/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Dataview Queries Overview \u00b6 The Topic Overview has all the topics this vault covers. Additionally, you can browse... Queries by Type Queries by Data Command Queries by DQL function Queries by DVJS function ... or write your own query to find queries! Each query is annotated with \"dv\" tags (dvjs for javascript functions) have a look at the tag pane. You can query them with ease by doing something like TABLE description FROM \"20 Dataview Queries\" AND #dv/flatten AND #dv/list or TABLE description FROM \"20 Dataview Queries\" AND #dvjs/map AND #dvjs/el Go ahead! Put your query for queries right here!","title":"Dataview Queries Overview"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Dataview%20Queries%20Overview/#dataview-queries-overview","text":"The Topic Overview has all the topics this vault covers. Additionally, you can browse... Queries by Type Queries by Data Command Queries by DQL function Queries by DVJS function ... or write your own query to find queries! Each query is annotated with \"dv\" tags (dvjs for javascript functions) have a look at the tag pane. You can query them with ease by doing something like TABLE description FROM \"20 Dataview Queries\" AND #dv/flatten AND #dv/list or TABLE description FROM \"20 Dataview Queries\" AND #dvjs/map AND #dvjs/el Go ahead! Put your query for queries right here!","title":"Dataview Queries Overview"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20DQL%20function/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Queries by DQL function \u00b6 const tagsToDisplay = [\"object\",\"list\",\"date\",\"dur\",\"number\",\"string\",\"link\",\"embed\",\"elink\",\"typeof\",\"round\",\"contains\",\"extract\",\"sort\",\"reverse\",\"length\",\"sum\",\"all\",\"any\",\"none\",\"join\",\"filter\",\"map\",\"regexmatch\",\"regexreplace\",\"replace\",\"lower\",\"upper\",\"split\",\"startswith\",\"endswith\",\"padleft\",\"padright\",\"substring\",\"truncate\",\"default\",\"choice\",\"striptime\",\"localtime\",\"meta\"] for (let tag of tagsToDisplay) { dv.header(2, tag) dv.table([\"File\", \"Description\"], dv.pages('\"20 Dataview Queries\" AND #dv/' + tag).map(p => [p.file.link, p.description])) }","title":"Queries by DQL function"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20DQL%20function/#queries-by-dql-function","text":"const tagsToDisplay = [\"object\",\"list\",\"date\",\"dur\",\"number\",\"string\",\"link\",\"embed\",\"elink\",\"typeof\",\"round\",\"contains\",\"extract\",\"sort\",\"reverse\",\"length\",\"sum\",\"all\",\"any\",\"none\",\"join\",\"filter\",\"map\",\"regexmatch\",\"regexreplace\",\"replace\",\"lower\",\"upper\",\"split\",\"startswith\",\"endswith\",\"padleft\",\"padright\",\"substring\",\"truncate\",\"default\",\"choice\",\"striptime\",\"localtime\",\"meta\"] for (let tag of tagsToDisplay) { dv.header(2, tag) dv.table([\"File\", \"Description\"], dv.pages('\"20 Dataview Queries\" AND #dv/' + tag).map(p => [p.file.link, p.description])) }","title":"Queries by DQL function"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20DVJS%20function/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Queries by DVJS function \u00b6 const tagsToDisplay = [\"current\", \"pages\", \"pagePaths\", \"page\", \"el\", \"header\", \"paragraph\", \"span\", \"execute\", \"executeJs\", \"view\", \"list\", \"taskList\", \"table\", \"markdownTable\", \"markdownList\", \"markdownTaskList\", \"isArray\", \"fileLink\", \"sectionLink\", \"blockLink\", \"date\", \"duration\", \"compare\", \"equal\", \"clone\", \"parse\", \"csv\", \"load\", \"normalize\", \"query\", \"tryQuery\", \"queryMarkdown\", \"tryQueryMarkdown\", \"tryEvaluate\", \"evaluate\",\"length\", \"where\", \"filter\", \"map\", \"flatMap\", \"mutate\", \"limit\", \"slice\", \"concat\", \"indexOf\", \"find\", \"findIndex\", \"includes\", \"join\", \"sort\", \"groupBy\", \"distinct\", \"every\", \"some\", \"none\", \"first\", \"last\", \"to\", \"expand\", \"forEach\", \"array\"] tagsToDisplay.sort() for (let tag of tagsToDisplay) { dv.header(2, tag) dv.table([\"File\", \"Description\"], dv.pages('\"20 Dataview Queries\" AND #dvjs/' + tag).map(p => [p.file.link, p.description])) }","title":"Queries by DVJS function"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20DVJS%20function/#queries-by-dvjs-function","text":"const tagsToDisplay = [\"current\", \"pages\", \"pagePaths\", \"page\", \"el\", \"header\", \"paragraph\", \"span\", \"execute\", \"executeJs\", \"view\", \"list\", \"taskList\", \"table\", \"markdownTable\", \"markdownList\", \"markdownTaskList\", \"isArray\", \"fileLink\", \"sectionLink\", \"blockLink\", \"date\", \"duration\", \"compare\", \"equal\", \"clone\", \"parse\", \"csv\", \"load\", \"normalize\", \"query\", \"tryQuery\", \"queryMarkdown\", \"tryQueryMarkdown\", \"tryEvaluate\", \"evaluate\",\"length\", \"where\", \"filter\", \"map\", \"flatMap\", \"mutate\", \"limit\", \"slice\", \"concat\", \"indexOf\", \"find\", \"findIndex\", \"includes\", \"join\", \"sort\", \"groupBy\", \"distinct\", \"every\", \"some\", \"none\", \"first\", \"last\", \"to\", \"expand\", \"forEach\", \"array\"] tagsToDisplay.sort() for (let tag of tagsToDisplay) { dv.header(2, tag) dv.table([\"File\", \"Description\"], dv.pages('\"20 Dataview Queries\" AND #dvjs/' + tag).map(p => [p.file.link, p.description])) }","title":"Queries by DVJS function"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Queries by Data Command \u00b6 SORT \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/sort LIMIT \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/limit FLATTEN \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/flatten GROUPBY \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/groupby","title":"Queries by Data Command"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/#queries-by-data-command","text":"","title":"Queries by Data Command"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/#sort","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/sort","title":"SORT"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/#limit","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/limit","title":"LIMIT"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/#flatten","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/flatten","title":"FLATTEN"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Data%20Command/#groupby","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/groupby","title":"GROUPBY"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Queries by Type \u00b6 List \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/list Table \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/table Task \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/task Calendar \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/calendar Dataviewjs \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/dataviewjs Inline \u00b6 TABLE description FROM \"20 Dataview Queries\" AND #dv/inline","title":"Queries by Type"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#queries-by-type","text":"","title":"Queries by Type"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#list","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/list","title":"List"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#table","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/table","title":"Table"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#task","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/task","title":"Task"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#calendar","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/calendar","title":"Calendar"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#dataviewjs","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/dataviewjs","title":"Dataviewjs"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Queries%20by%20Type/#inline","text":"TABLE description FROM \"20 Dataview Queries\" AND #dv/inline","title":"Inline"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Topic%20Overview/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Topic Overview \u00b6 Each query has one or more topics , grouping queries with similar goals together. Wonder what's available? Wonder no more! await dv.view(\"00 Meta/dataview_views/tagcloud\", {values: dv.pages('\"20 Dataview Queries\"').where(p => p.topics).topics}) Topic List \u00b6 TABLE WITHOUT ID t as \"Topic\", count, rows.file.link AS \"pages\" FROM \"20 Dataview Queries\" WHERE topics FLATTEN topics AS t GROUP BY t FLATTEN length(rows.file.link) as count SORT count DESC, t ASC Used queries You want these fancy queries for your own data? Find the tag cloud here and the list here .","title":"Topic Overview"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Topic%20Overview/#topic-overview","text":"Each query has one or more topics , grouping queries with similar goals together. Wonder what's available? Wonder no more! await dv.view(\"00 Meta/dataview_views/tagcloud\", {values: dv.pages('\"20 Dataview Queries\"').where(p => p.topics).topics})","title":"Topic Overview"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Topic%20Overview/#topic-list","text":"TABLE WITHOUT ID t as \"Topic\", count, rows.file.link AS \"pages\" FROM \"20 Dataview Queries\" WHERE topics FLATTEN topics AS t GROUP BY t FLATTEN length(rows.file.link) as count SORT count DESC, t ASC Used queries You want these fancy queries for your own data? Find the tag cloud here and the list here .","title":"Topic List"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/","text":"Overviews in Online Version The overview pages are not usable in online view. Please refer to the tagindex . Our Use Cases are Query Overviews that fit for a certain application case, that serve a specific goal and be quite distinct, small or big depending the topic. They should help you if you, for example, search for ways to make your daily notes more useful but don't have a grasp yet what exactly you are searching. We hope the Use Cases aid you to find inspiration and helpful queries that make your note taking better, more fun and more efficient. Newcomers \u00b6 For Newcomers, we have our Learn the Basics Use Case, that points you to the correct places in the documentation and give you basic syntax examples. Contributions welcome! Most Use Cases are not available right now. When you want to help making this vault more useful, please consider contributing one of linked Use Cases below! Find more information about contributing under Contribution and more about Use Cases under Use Cases . Thank you! Periodic Notes \u00b6 Dataview can be immensely helpful in giving you insights about upcoming and past events as well as summaries and aggregations of data of a certain time span. Enhance your Daily Note [[Enhance your Weekly Note]] [[Queries for a yearly overview]] Contacts \u00b6 If you have pages for people in your vault, [[Contact Pages]] could be helpful for you. Projects \u00b6 Do you track, plan and/or manage your projects in Obsidian? Go check out the [[Project Management]] Maintenance \u00b6 A vault is a living project, ever changing - and always a bit outdated. The [[About maintaining your vault]] page helps you to keep it in proper shape.","title":"Use Case Overview"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/#newcomers","text":"For Newcomers, we have our Learn the Basics Use Case, that points you to the correct places in the documentation and give you basic syntax examples. Contributions welcome! Most Use Cases are not available right now. When you want to help making this vault more useful, please consider contributing one of linked Use Cases below! Find more information about contributing under Contribution and more about Use Cases under Use Cases . Thank you!","title":"Newcomers"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/#periodic-notes","text":"Dataview can be immensely helpful in giving you insights about upcoming and past events as well as summaries and aggregations of data of a certain time span. Enhance your Daily Note [[Enhance your Weekly Note]] [[Queries for a yearly overview]]","title":"Periodic Notes"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/#contacts","text":"If you have pages for people in your vault, [[Contact Pages]] could be helpful for you.","title":"Contacts"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/#projects","text":"Do you track, plan and/or manage your projects in Obsidian? Go check out the [[Project Management]]","title":"Projects"},{"location":"30%20Dataview%20Resources/31%20Query%20Overviews/Use%20Case%20Overview/#maintenance","text":"A vault is a living project, ever changing - and always a bit outdated. The [[About maintaining your vault]] page helps you to keep it in proper shape.","title":"Maintenance"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Dataview%20Documentation%20and%20Resources/","text":"Dataview Documentation \u00b6 Find the official dataview documentation here Resources \u00b6 You'll find a list of resources in the official documentation . Also, the Obsidian Hub has a few things to offer.","title":"Dataview Documentation"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Dataview%20Documentation%20and%20Resources/#dataview-documentation","text":"Find the official dataview documentation here","title":"Dataview Documentation"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Dataview%20Documentation%20and%20Resources/#resources","text":"You'll find a list of resources in the official documentation . Also, the Obsidian Hub has a few things to offer.","title":"Resources"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Tips%2C%20tricks%20and%20interesting%20facts/","text":"Tips, tricks and interesting facts \u00b6 Metadata and Case Sensitivity \u00b6 Metadata fields with capital letters are available in their original and a lowercase form For example, if you add wentToSleep:: 22:30 , you can access this field in your query via wentToSleep or wenttosleep - but not as wenttoSleep etc! TABLE wentToSleep, wenttosleep, wentTosleep, wenttoSleep, WentToSleep, went-to-sleep WHERE file.name = \"2022-01-05\" TABLE capitalized, Capitalized, CapitalizedMetadata, capitalizedMetadata, capitalizedmetadata FROM \"10 Example Data/dailys\" WHERE file.name = \"2022-01-20\" Inspecting available fields \u00b6 Inspect available fields of your current (or any) file You can do this either with dv.span(dv.current()) for the current file or dv.span(dv.page('nameOfPage') for any other file. For better readability, you can also use the developer console for printing it: use console.log(\"Current Page:\", dv.current()) and open the console via SHIFT CTRL I. Please mind: This only works as a dataviewjs block - or a javascript inline field! As js inline query to the console (hit SHIFT + CTRL + I) $= console.log(\"Current Page:\", dv.current()) As span inside the document (add dataviewjs to the block to see a result - the output is lengthy!) dv.span(dv.page(\"2022-01-05\")) The difference between `= ` and `=this` \u00b6 In DQL inline code, `= ` doesn't output anything, but `= .file` or `= .something` does. It is because `= ` is showing an empty link. If you index it (by using \".something\") you get the current file, probably because the author just makes it refer to the current page like \"this\" instead of throwing an error. While `=this` is referring to the current page metadata like what `\\$= dv.current()` does. The reason why `= .something` works is that you can do stuff like `=[[Peter]].lastname` inside another note (comparable with `$=dv.page(\"Peter\").lastname`).","title":"Tips, tricks and interesting facts"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Tips%2C%20tricks%20and%20interesting%20facts/#tips-tricks-and-interesting-facts","text":"","title":"Tips, tricks and interesting facts"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Tips%2C%20tricks%20and%20interesting%20facts/#metadata-and-case-sensitivity","text":"Metadata fields with capital letters are available in their original and a lowercase form For example, if you add wentToSleep:: 22:30 , you can access this field in your query via wentToSleep or wenttosleep - but not as wenttoSleep etc! TABLE wentToSleep, wenttosleep, wentTosleep, wenttoSleep, WentToSleep, went-to-sleep WHERE file.name = \"2022-01-05\" TABLE capitalized, Capitalized, CapitalizedMetadata, capitalizedMetadata, capitalizedmetadata FROM \"10 Example Data/dailys\" WHERE file.name = \"2022-01-20\"","title":"Metadata and Case Sensitivity"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Tips%2C%20tricks%20and%20interesting%20facts/#inspecting-available-fields","text":"Inspect available fields of your current (or any) file You can do this either with dv.span(dv.current()) for the current file or dv.span(dv.page('nameOfPage') for any other file. For better readability, you can also use the developer console for printing it: use console.log(\"Current Page:\", dv.current()) and open the console via SHIFT CTRL I. Please mind: This only works as a dataviewjs block - or a javascript inline field! As js inline query to the console (hit SHIFT + CTRL + I) $= console.log(\"Current Page:\", dv.current()) As span inside the document (add dataviewjs to the block to see a result - the output is lengthy!) dv.span(dv.page(\"2022-01-05\"))","title":"Inspecting available fields"},{"location":"30%20Dataview%20Resources/32%20Knowledge/Tips%2C%20tricks%20and%20interesting%20facts/#the-difference-between-and-this","text":"In DQL inline code, `= ` doesn't output anything, but `= .file` or `= .something` does. It is because `= ` is showing an empty link. If you index it (by using \".something\") you get the current file, probably because the author just makes it refer to the current page like \"this\" instead of throwing an error. While `=this` is referring to the current page metadata like what `\\$= dv.current()` does. The reason why `= .something` works is that you can do stuff like `=[[Peter]].lastname` inside another note (comparable with `$=dv.page(\"Peter\").lastname`).","title":"The difference between `=` and `=this`"},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/","text":"trouble shooting queries \u00b6 Your query is not behaving like it should be? We have some tips on how to find out what's going wrong. Query returns 0 results, but the data is there. \u00b6 There needs to be something in your query that filters out or hides your data. 1. Try to remove the FROM clause. \u00b6 First, remove your FROM statement altogether. Does the result you expect show up now (probably among others, not wanted)? Add every FROM expression back one by one. For example, you have FROM #dv AND \"20 Dataview Queries\" , first add only FROM #dv . Your result is still there? Try FROM #dv AND \"20 Dataview Queries\" - do your expected pages vanish? Then the FROM clause - maybe in combination with the WHERE clause - is causing trouble. So next... 2. Try to remove the WHERE clause. \u00b6 Secondly, remove your WHERE clause but keep your FROM statement. Are the results still gone? Then your FROM statement is erroneous. Try to find the erroneous part and have a look at your data why they might get filtered out by it. Your data is there, if you keep the FROM , but delete the WHERE ? Then your WHERE statement is acting up. Add every WHERE expression back one by one. For example you have WHERE file.name != this.file.name AND #tag1 AND someMetadata , then add first WHERE file.name != this.file.name . The data you're expecting still there? Try WHERE file.name != this.file.name AND #tag1 . Still there? No? The last added part of the WHERE clause ( AND #tag1 ) causes some trouble. 3. Print out the metadata of your page. \u00b6 You found the error, but don't understand why it causes problems? It might help if you print out your current page like dataview sees it, to understand the structure of available metadata. You can do that in different approaches: If you're writing a table-query, add the metadata you're using in your WHERE as a table column and see if the values match your expectation. To see the whole current page with all its properties and metadata , add LIST this WHERE file.name = this.file.name or, when using dataviewJS queries, try $= console.log(\"Current file:\", dv.current()) and open the developer console with CTRL SHIFT I . Query shows some kind of error \u00b6 Open up read and edit mode side by side These examples are observed best when you switch to \" Edit Mode \" and open up a second pane in read mode - otherwise you'll only see the error or the dataview query :) Read the error description carefully. There is a little arrow pointing at the erroneous place. For example: TABLE WHERE #dv/list The little arrow is pointing at the # - because WHERE cannot work with a plain tag. You need to tell WHERE what to do with this tag. TABLE WHERE contains(file.tags, \"#dv/list\" Here, we do not have a little arrow, but only a error message: Got the end of the input . This normally means that an input ended (because the query is over) without dataview expecting it. On the last line you'll find what the plugin would've expected instead of the end of the query. We are missing the closing ) TABLE WHERE contains(file.tags, \"#dv/calendar\") Solved! \ud83c\udf89 Another example : LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum() as sum It tells us that our WHERE clause failed and shows us the first three errors why. Here, it's the same one three times. Let's read this message: No implementation of 'sum' found for arguments: It's rather technical. What it tries to tell you: \"I don't know what to do with these arguments: (none)\" - because you did not give any arguments inside the round brackets. Lets try this: LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum(paid, paid) as sum Now our error message is a bit different and the first three aren't completely equal anymore. It now says \"I don't know what to do with two things that are null and null - or array and array - or string and string\" So the sum function doesn't know how to handle our input. How to solve this? First, head over to the official dataview documentation and read up how sum works : [!cite] ### `sum(array)` Sums all numeric values in the array ``` sum(list(1, 2, 3)) = 6 ``` We've learned two important things here: First, sum expects exactly one argument . Secondly, this argument needs to be an array . So in order to use sum, we need to provide it with one array: LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum(paid) as sum Huh, that doesn't give us an error anymore, but an improvable output. You want to know how to get a real sum? Head over to \"When using expenses in form of 99 $\" .","title":"trouble shooting queries"},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#trouble-shooting-queries","text":"Your query is not behaving like it should be? We have some tips on how to find out what's going wrong.","title":"trouble shooting queries"},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#query-returns-0-results-but-the-data-is-there","text":"There needs to be something in your query that filters out or hides your data.","title":"Query returns 0 results, but the data is there."},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#1-try-to-remove-the-from-clause","text":"First, remove your FROM statement altogether. Does the result you expect show up now (probably among others, not wanted)? Add every FROM expression back one by one. For example, you have FROM #dv AND \"20 Dataview Queries\" , first add only FROM #dv . Your result is still there? Try FROM #dv AND \"20 Dataview Queries\" - do your expected pages vanish? Then the FROM clause - maybe in combination with the WHERE clause - is causing trouble. So next...","title":"1. Try to remove the FROM clause."},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#2-try-to-remove-the-where-clause","text":"Secondly, remove your WHERE clause but keep your FROM statement. Are the results still gone? Then your FROM statement is erroneous. Try to find the erroneous part and have a look at your data why they might get filtered out by it. Your data is there, if you keep the FROM , but delete the WHERE ? Then your WHERE statement is acting up. Add every WHERE expression back one by one. For example you have WHERE file.name != this.file.name AND #tag1 AND someMetadata , then add first WHERE file.name != this.file.name . The data you're expecting still there? Try WHERE file.name != this.file.name AND #tag1 . Still there? No? The last added part of the WHERE clause ( AND #tag1 ) causes some trouble.","title":"2. Try to remove the WHERE clause."},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#3-print-out-the-metadata-of-your-page","text":"You found the error, but don't understand why it causes problems? It might help if you print out your current page like dataview sees it, to understand the structure of available metadata. You can do that in different approaches: If you're writing a table-query, add the metadata you're using in your WHERE as a table column and see if the values match your expectation. To see the whole current page with all its properties and metadata , add LIST this WHERE file.name = this.file.name or, when using dataviewJS queries, try $= console.log(\"Current file:\", dv.current()) and open the developer console with CTRL SHIFT I .","title":"3. Print out the metadata of your page."},{"location":"30%20Dataview%20Resources/32%20Knowledge/trouble%20shooting%20queries/#query-shows-some-kind-of-error","text":"Open up read and edit mode side by side These examples are observed best when you switch to \" Edit Mode \" and open up a second pane in read mode - otherwise you'll only see the error or the dataview query :) Read the error description carefully. There is a little arrow pointing at the erroneous place. For example: TABLE WHERE #dv/list The little arrow is pointing at the # - because WHERE cannot work with a plain tag. You need to tell WHERE what to do with this tag. TABLE WHERE contains(file.tags, \"#dv/list\" Here, we do not have a little arrow, but only a error message: Got the end of the input . This normally means that an input ended (because the query is over) without dataview expecting it. On the last line you'll find what the plugin would've expected instead of the end of the query. We are missing the closing ) TABLE WHERE contains(file.tags, \"#dv/calendar\") Solved! \ud83c\udf89 Another example : LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum() as sum It tells us that our WHERE clause failed and shows us the first three errors why. Here, it's the same one three times. Let's read this message: No implementation of 'sum' found for arguments: It's rather technical. What it tries to tell you: \"I don't know what to do with these arguments: (none)\" - because you did not give any arguments inside the round brackets. Lets try this: LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum(paid, paid) as sum Now our error message is a bit different and the first three aren't completely equal anymore. It now says \"I don't know what to do with two things that are null and null - or array and array - or string and string\" So the sum function doesn't know how to handle our input. How to solve this? First, head over to the official dataview documentation and read up how sum works : [!cite] ### `sum(array)` Sums all numeric values in the array ``` sum(list(1, 2, 3)) = 6 ``` We've learned two important things here: First, sum expects exactly one argument . Secondly, this argument needs to be an array . So in order to use sum, we need to provide it with one array: LIST sum FROM \"10 Example Data/dailys\" WHERE paid FLATTEN sum(paid) as sum Huh, that doesn't give us an error anymore, but an improvable output. You want to know how to get a real sum? Head over to \"When using expenses in form of 99 $\" .","title":"Query shows some kind of error"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/","text":"Learn the Basics \u00b6 This page shall guide you if you are a newcomer to the power of Dataview. Before you start out , make sure you made yourself familiar with the official Documentation . While the documentation is not the most intuitive guide, it's important to get a grasp of the general idea and functionality to enable you writing your own queries. There is some further reading you can dive into, but that's not necessary to get started. If you stumble across something, maybe the FAQ can help out. Understanding meta data on notes \u00b6 Before you can start querying data from your vault, you need meta data to query. While there is already some information available on your notes and tasks , to leverage the full power of dataview, you'll need to add your own meta data via the frontmatter or inline fields. Learn more about YAML Frontmatter on the official documentation of Obsidian and take a look on our Frontmatter Overview and how Multivalue YAML Frontmatter Field s work. Learn more about Inline fields in the dataview documentation . Basic Structure of Queries \u00b6 A dataview query consists of following parts - in following order: exactly one Query Type depending on Query Type, zero, one or many additional properties for displaying zero or one FROM data command zero to many other data commands . For more info about the general structure, refer to the documentation . Understanding Query Types \u00b6 The type of a query determines the format of your final output. We put together some basic examples you can play around with: Basic List Queries Basic Table Queries Basic Task Queries Basic Calendar Queries Understanding Data Commands \u00b6 Beside the four types of a query, you can use data commands to filter and enhance your query. There are some specialties to be aware of to successfully use them. FROM determines which notes to initially collect for your query depending on given sources WHERE lets you filter notes based on information inside notes, i.e. meta data. GROUP BY lets you bundle up notes as one \"result row\" depending on a property (or calculation). See Example GROUP BY Queries for example usages. FLATTEN does the opposite of GROUP BY - instead of bundling up, it splits notes depending on a property (or calculation). See Example FLATTEN Queries for example usages. SORT sorts your result data depending on a property and a direction. LIMIT lets you crop your result data to a desired (maximum) number. Understanding Inline Queries \u00b6 Inline Queries are a special form of query. We'll showcase the basics in Basic Inline Queries . Understanding JavaScript Queries \u00b6 ... would go way beyond the scope of this project \ud83d\ude09. JavaScript Queries are an advanced technique, enabling you to create basically anything if you have dataview, time and knowledge. JavaScript is a full-fledged programming language and learning it takes a huge commitment. Don't fret, though! The native dataview implementation is already immensely powerful and let you do a ton of complex querying right out of the box. You certainly do not need JavaScript to get started and you're probably fine for the rest of your journey without opening this pandora's box. If you really wish to get into dataviewjs , hop over to your favorite search engine, search for one of the various free basic courses in JavaScript, learn the basics, read the dataviewjs documentation and get a glimpse of a world full of anarchy.","title":"Learn the Basics"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#learn-the-basics","text":"This page shall guide you if you are a newcomer to the power of Dataview. Before you start out , make sure you made yourself familiar with the official Documentation . While the documentation is not the most intuitive guide, it's important to get a grasp of the general idea and functionality to enable you writing your own queries. There is some further reading you can dive into, but that's not necessary to get started. If you stumble across something, maybe the FAQ can help out.","title":"Learn the Basics"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#understanding-meta-data-on-notes","text":"Before you can start querying data from your vault, you need meta data to query. While there is already some information available on your notes and tasks , to leverage the full power of dataview, you'll need to add your own meta data via the frontmatter or inline fields. Learn more about YAML Frontmatter on the official documentation of Obsidian and take a look on our Frontmatter Overview and how Multivalue YAML Frontmatter Field s work. Learn more about Inline fields in the dataview documentation .","title":"Understanding meta data on notes"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#basic-structure-of-queries","text":"A dataview query consists of following parts - in following order: exactly one Query Type depending on Query Type, zero, one or many additional properties for displaying zero or one FROM data command zero to many other data commands . For more info about the general structure, refer to the documentation .","title":"Basic Structure of Queries"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#understanding-query-types","text":"The type of a query determines the format of your final output. We put together some basic examples you can play around with: Basic List Queries Basic Table Queries Basic Task Queries Basic Calendar Queries","title":"Understanding Query Types"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#understanding-data-commands","text":"Beside the four types of a query, you can use data commands to filter and enhance your query. There are some specialties to be aware of to successfully use them. FROM determines which notes to initially collect for your query depending on given sources WHERE lets you filter notes based on information inside notes, i.e. meta data. GROUP BY lets you bundle up notes as one \"result row\" depending on a property (or calculation). See Example GROUP BY Queries for example usages. FLATTEN does the opposite of GROUP BY - instead of bundling up, it splits notes depending on a property (or calculation). See Example FLATTEN Queries for example usages. SORT sorts your result data depending on a property and a direction. LIMIT lets you crop your result data to a desired (maximum) number.","title":"Understanding Data Commands"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#understanding-inline-queries","text":"Inline Queries are a special form of query. We'll showcase the basics in Basic Inline Queries .","title":"Understanding Inline Queries"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Learn%20the%20Basics/#understanding-javascript-queries","text":"... would go way beyond the scope of this project \ud83d\ude09. JavaScript Queries are an advanced technique, enabling you to create basically anything if you have dataview, time and knowledge. JavaScript is a full-fledged programming language and learning it takes a huge commitment. Don't fret, though! The native dataview implementation is already immensely powerful and let you do a ton of complex querying right out of the box. You certainly do not need JavaScript to get started and you're probably fine for the rest of your journey without opening this pandora's box. If you really wish to get into dataviewjs , hop over to your favorite search engine, search for one of the various free basic courses in JavaScript, learn the basics, read the dataviewjs documentation and get a glimpse of a world full of anarchy.","title":"Understanding JavaScript Queries"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/","text":"daily #journal \u00b6 Good day, it's Thursday, 17. February 2022 \u00b6 Used query: Get a link to the previous daily (not necessarily yesterday) LIST WITHOUT ID \"Previous day: \" + file.link FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC LIMIT 1 My Day \u00b6 Today was quite nice weather despite the cold Went to eat some Cake with [[Emre]] And here is some filler text that explains what I did today, what I learned and ... things you do all day, really My Tasks \u00b6 [x] Meet with [[Emre]] [ ] Cleanup the fridge [x] Hand in the last home work Leftovers \u00b6 Used query: List tasks under a heading TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\" Still open - deal with it it or remove it! Used query: Get latest open tasks With two adjustments: First, we filter out our current note with AND file.day != date(\"2022-02-16\") - and secondly, instead of the latest tasks we get the oldest task via SORT file.day ASC TASK FROM \"10 Example Data/dailys\" WHERE status = \" \" AND file.day != date(\"2022-02-16\") SORT file.day ASC LIMIT 3 Looking back and forward \u00b6 Things that happened or will happen on February 17 \u00b6 Used query: Show all list items containing a specific metadata value LIST L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.due, this.file.day) Used query: List bullet points from dailies of a specific date without year LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\" AND file.day.year != this.file.day.year SORT file.day ASC Metadata \u00b6 \u23f0 Daily Routine wake-up:: 09:01 lunch:: 12:00 dinner:: 18:02 go-to-sleep:: 01:46 \ud83c\udfc3\u200d\u2640\ufe0f Workout training:: 15m situps:: 8 steps:: 7927 \ud83d\ude4f Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"daily #journal"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#daily-journal","text":"","title":"daily #journal"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#good-day-its-thursday-17-february-2022","text":"Used query: Get a link to the previous daily (not necessarily yesterday) LIST WITHOUT ID \"Previous day: \" + file.link FROM \"10 Example Data/dailys\" WHERE file.name != this.file.name AND file.day < this.file.day SORT file.day DESC LIMIT 1","title":"Good day, it's Thursday, 17. February 2022"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#my-day","text":"Today was quite nice weather despite the cold Went to eat some Cake with [[Emre]] And here is some filler text that explains what I did today, what I learned and ... things you do all day, really","title":"My Day"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#my-tasks","text":"[x] Meet with [[Emre]] [ ] Cleanup the fridge [x] Hand in the last home work","title":"My Tasks"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#leftovers","text":"Used query: List tasks under a heading TASK FROM \"10 Example Data/dailys\" WHERE file.day = date(\"2022-02-16\") AND meta(section).subpath = \"Gonna do this tmrw\" Still open - deal with it it or remove it! Used query: Get latest open tasks With two adjustments: First, we filter out our current note with AND file.day != date(\"2022-02-16\") - and secondly, instead of the latest tasks we get the oldest task via SORT file.day ASC TASK FROM \"10 Example Data/dailys\" WHERE status = \" \" AND file.day != date(\"2022-02-16\") SORT file.day ASC LIMIT 3","title":"Leftovers"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#looking-back-and-forward","text":"","title":"Looking back and forward"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#things-that-happened-or-will-happen-on-february-17","text":"Used query: Show all list items containing a specific metadata value LIST L.text FROM \"10 Example Data/dailys\" FLATTEN file.lists AS L WHERE contains(L.due, this.file.day) Used query: List bullet points from dailies of a specific date without year LIST file.lists.text WHERE dateformat(file.day, \"MM-dd\") = \"02-17\" AND file.day.year != this.file.day.year SORT file.day ASC","title":"Things that happened or will happen on February 17"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-02-17/#metadata","text":"\u23f0 Daily Routine wake-up:: 09:01 lunch:: 12:00 dinner:: 18:02 go-to-sleep:: 01:46 \ud83c\udfc3\u200d\u2640\ufe0f Workout training:: 15m situps:: 8 steps:: 7927 \ud83d\ude4f Good habits praying:: yes breathing:: yes beingthankful:: yes slowdown::","title":"Metadata"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-09-30/","text":"Day 09.30 \u00b6 picoftheday:: To do today \u00b6 [ ] thing 1 [ ] thing 2 Used query: List tasks that are due today or a specific day TASK WHERE !completed AND duedate and duedate <= this.file.day AND contains(text, \"duedate\") Used query: List tasks under a heading TASK FROM \"10 Example Data/weeklys/2022-W39\" WHERE meta(section).subpath = \"Weekly To Dos\"","title":"Day 09.30"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-09-30/#day-0930","text":"picoftheday::","title":"Day 09.30"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/2022-09-30/#to-do-today","text":"[ ] thing 1 [ ] thing 2 Used query: List tasks that are due today or a specific day TASK WHERE !completed AND duedate and duedate <= this.file.day AND contains(text, \"duedate\") Used query: List tasks under a heading TASK FROM \"10 Example Data/weeklys/2022-W39\" WHERE meta(section).subpath = \"Weekly To Dos\"","title":"To do today"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/Enhance%20your%20Daily%20Note/","text":"Wonder what this is? Read about Use Cases Dataview can help you great deals if you want to keep track of upcoming or past events or if you want to remind yourself of something. It's usefulness for daily notes shines especially in this regard, but there are other queries that can power-up your daily notes. Upcoming Events or Tasks \u00b6 To keep track of upcoming events or things you need to do can be immensely helpful while organizing your day. To keep the overview about your open tasks , you can Get latest open tasks and List tasks that are due today or a specific day to stay on top of your workflow, or you can fetch tasks from specific other notes by listing all tasks under a certain heading - like \"Do tomorrow\" and \"Weekly to dos\" . Not only tasks are track able with dataview, but bullet points are too. Maybe you want to checkout what happened this very day the year before? List bullet points from dailies of a specific date without year helps you here. Do you have bullet points with due dates or just plain date meta data fields? Then Show all list items containing a specific metadata value has you covered. With Show all birthdays for this month you wont miss any upcoming birthday, neither. List most recent meta data value that contains a certain phrase allows you to find all the data in your vault that are connected to a certain day - or a event on that day. Navigate to other dailies or notes based on the date \u00b6 To ease your navigation, especially when you do not have a daily each day, Get a link to the previous daily (not necessarily yesterday) can be helpful. Others \u00b6 There are some other queries that are worth to mention when it comes to daily notes. Use daily file names as real dates Display metadata of a week as emjois (habit tracking) List all list items with a certain word List the last contact with every person","title":"Enhance your Daily Note"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/Enhance%20your%20Daily%20Note/#upcoming-events-or-tasks","text":"To keep track of upcoming events or things you need to do can be immensely helpful while organizing your day. To keep the overview about your open tasks , you can Get latest open tasks and List tasks that are due today or a specific day to stay on top of your workflow, or you can fetch tasks from specific other notes by listing all tasks under a certain heading - like \"Do tomorrow\" and \"Weekly to dos\" . Not only tasks are track able with dataview, but bullet points are too. Maybe you want to checkout what happened this very day the year before? List bullet points from dailies of a specific date without year helps you here. Do you have bullet points with due dates or just plain date meta data fields? Then Show all list items containing a specific metadata value has you covered. With Show all birthdays for this month you wont miss any upcoming birthday, neither. List most recent meta data value that contains a certain phrase allows you to find all the data in your vault that are connected to a certain day - or a event on that day.","title":"Upcoming Events or Tasks"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/Enhance%20your%20Daily%20Note/#navigate-to-other-dailies-or-notes-based-on-the-date","text":"To ease your navigation, especially when you do not have a daily each day, Get a link to the previous daily (not necessarily yesterday) can be helpful.","title":"Navigate to other dailies or notes based on the date"},{"location":"30%20Dataview%20Resources/33%20Use%20Cases/Enhance%20your%20Daily%20Note/Enhance%20your%20Daily%20Note/#others","text":"There are some other queries that are worth to mention when it comes to daily notes. Use daily file names as real dates Display metadata of a week as emjois (habit tracking) List all list items with a certain word List the last contact with every person","title":"Others"},{"location":"tagindex/","text":"Tag Index \u00b6 You're currently viewing the Online Version of the Obsidian Example Vault. This comes with some limitations, first and foremost: Queries do not execute. Due to that, the Query Overviews are unusable, since they are using dataview themselves. For a better user experience, it's recommended to open the vault in Obsidian . To navigate the online version you can either use the search bar at the top or browse through the page tags: dv/CALENDAR \u00b6 Basic Calendar Queries dv/FLATTEN \u00b6 Example FLATTEN Queries Example GROUP BY Queries Query meta files to construct information out of a folder structure Style dataview table columns Transform date meta data for calculations dv/FROM \u00b6 Basic Calendar Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries Limit meta data to a maximal amount List tasks under a heading Query meta files to construct information out of a folder structure Style dataview table columns dv/LIST \u00b6 Basic Inline Queries Example GROUP BY Queries List bullet points from dailies of a specific date without year dv/SORT \u00b6 Basic Task Queries List pages with due date and color those overdue dv/TABLE \u00b6 Example FLATTEN Queries Example GROUP BY Queries Limit meta data to a maximal amount List pages with due date and color those overdue Query meta files to construct information out of a folder structure Style dataview table columns Transform date meta data for calculations dv/TASK \u00b6 Basic Task Queries List tasks that are due today or a specific day List tasks under a heading dv/WHERE \u00b6 Basic Calendar Queries Basic Inline Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries List bullet points from dailies of a specific date without year List tasks that are due today or a specific day List tasks under a heading Query meta files to construct information out of a folder structure Transform date meta data for calculations dv/all \u00b6 Mark days that have unfinished todos dv/any \u00b6 Mark days that have unfinished todos dv/array \u00b6 Show a meta data value for every day of the week dv/calendar \u00b6 Make a holiday planning with a bullet point list and the calendar view Mark days that have unfinished todos Show modified file dates in a calendar view dv/choice \u00b6 Display metadata of a week as emjois (habit tracking) Example GROUP BY Queries Group files by meta data Limit meta data to a maximal amount List pages with due date and color those overdue List the last contact with every person Show a meta data value for every day of the week Sort a table with a custom sort order dv/contains \u00b6 Basic Task Queries Example FLATTEN Queries List all files with missing category tag or empty meta data field List all list items containing a certain tag List contacts with a person List pages that share a meta data value with the current page List tasks that are due today or a specific day Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show list items containing a certain tag dv/dataviewjs \u00b6 Add a NaNoWriMon to your vault Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Colorcode tasks based on meta data Display meta data values as a tag cloud Display or hide dataview queries based on a task selection Display random images from a path Group duplicated meta data fields after their order in file List all meta data available in your vault List all not referenced attachments List all open projects with a emoji age indicator List non existing, linked pages Query meta files to construct information out of a folder structure Render a progress bar Render a year overview for your data Render multiple tables with tab like buttons Render song information and embed a video Search for words in your files content across your vault Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show all photos of the week in a grid Show an average row on tables for numeric values or durations dv/date \u00b6 Example GROUP BY Queries List all open projects with a emoji age indicator List contacts with a person List pages with due date and color those overdue List tasks that are due today or a specific day List tasks under a heading Show projects finished in a specific month or year Transform date meta data for calculations Use daily file names as real dates dv/dateformat \u00b6 List bullet points from dailies of a specific date without year Show a meta data value for every day of the week Show projects finished in a specific month or year dv/default \u00b6 Sort a table with a custom sort order dv/embed \u00b6 Display images in a dataview table dv/filter \u00b6 Query meta files to construct information out of a folder structure Show all list items under a specific heading Show two meta data fields in same table column dv/flatten \u00b6 Calculate waking phase with wake up and go to sleep times Group list of files by metadata List all list items containing a certain tag List all list items with a certain word List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates dv/from \u00b6 Basic List Queries Basic Table Queries Calculate waking phase with wake up and go to sleep times Display images in a dataview table Display metadata of a week as emjois (habit tracking) Get a link to the previous daily (not necessarily yesterday) Get latest open tasks Group files by meta data Group list of files by metadata How to create custom outputs in queries List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List all open projects with a emoji age indicator List all tasks with a custom status List contacts with a person List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Remove a suffix from listed file names Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all birthdays for this month Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order dv/groupby \u00b6 Basic List Queries Basic Table Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries Group files by meta data Group list of files by metadata List all list items with a certain word List all tasks with a custom status List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Plot a Category Series DQL query Plot a Series Category Value DQL Query Query meta files to construct information out of a folder structure Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items containing a certain tag Show projects finished in a specific month or year Sort a table with a custom sort order dv/icontains \u00b6 List all list items with a certain word Show all list items with a certain word as a table dv/inline \u00b6 Basic Inline Queries List most recent meta data value that contains a certain phrase Render a progress bar Show all birthdays for this month dv/inlinejs \u00b6 Basic Inline Queries dv/join \u00b6 Group list of files by metadata Limit meta data to a maximal amount List contacts with a person Show a meta data value for every day of the week dv/length \u00b6 Example GROUP BY Queries Limit meta data to a maximal amount List all files with missing category tag or empty meta data field List pages that share a meta data value with the current page Query meta files to construct information out of a folder structure dv/limit \u00b6 Calculate waking phase with wake up and go to sleep times Get a link to the previous daily (not necessarily yesterday) Get latest open tasks List all tasks with a custom status List contacts with a person List most recent meta data value that contains a certain phrase dv/link \u00b6 Display images in a dataview table Query meta files to construct information out of a folder structure Remove a suffix from listed file names Show a meta data value for every day of the week dv/list \u00b6 Basic List Queries Get a link to the previous daily (not necessarily yesterday) Group list of files by metadata How to create custom outputs in queries Limit meta data to a maximal amount List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase Make a holiday planning with a bullet point list and the calendar view Remove a suffix from listed file names Show a meta data value for every day of the week Show all birthdays for this month Use daily file names as real dates dv/map \u00b6 Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos dv/max \u00b6 List the last contact with every person dv/meta \u00b6 Display images in a dataview table Example FLATTEN Queries List tasks under a heading Show all list items under a specific heading with a metadata field Show all list items under a specific heading dv/min \u00b6 List contacts with a person List the last contact with every person dv/number \u00b6 Mark all days in a calendar where you spent a certain amount of money dv/regexreplace \u00b6 Mark all days in a calendar where you spent a certain amount of money Remove a suffix from listed file names Show list items as table with their metadata and sections Transform date meta data for calculations Use daily file names as real dates dv/replace \u00b6 Transform date meta data for calculations dv/round \u00b6 Example FLATTEN Queries Example GROUP BY Queries Mark all days in a calendar where you spent a certain amount of money Render a progress bar dv/sort \u00b6 Basic List Queries Basic Table Queries Get a link to the previous daily (not necessarily yesterday) Get latest open tasks List all tasks with a custom status List contacts with a person List most recent meta data value that contains a certain phrase List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Plot a Category Series DQL query Plot a Series Category Value DQL Query Show a meta data value for every day of the week Show list items as table with their metadata and sections Sort a table with a custom sort order dv/split \u00b6 Limit meta data to a maximal amount Query meta files to construct information out of a folder structure Show a meta data value for every day of the week dv/string \u00b6 Show a meta data value for every day of the week dv/sum \u00b6 Mark all days in a calendar where you spent a certain amount of money Plot a Category Series DQL query dv/table \u00b6 Basic Table Queries Calculate waking phase with wake up and go to sleep times Display images in a dataview table Display metadata of a week as emjois (habit tracking) Group files by meta data List all open projects with a emoji age indicator List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Mark all days in a calendar where you spent a certain amount of money Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates dv/task \u00b6 Get latest open tasks List all tasks with a custom status dv/typeof \u00b6 Show a meta data value for every day of the week dv/where \u00b6 Basic List Queries Basic Table Queries Display images in a dataview table Display metadata of a week as emjois (habit tracking) Get a link to the previous daily (not necessarily yesterday) Get latest open tasks Group files by meta data Group list of files by metadata List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List all open projects with a emoji age indicator List all tasks with a custom status List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all birthdays for this month Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates dvjs/array \u00b6 Calculate cycle lengths and durations Display random images from a path List all meta data available in your vault List all not referenced attachments List most recent meta data value that contains a certain phrase Query meta files to construct information out of a folder structure dvjs/container \u00b6 Render multiple tables with tab like buttons Show all photos of the week in a grid dvjs/current \u00b6 Add a NaNoWriMon to your vault Display or hide dataview queries based on a task selection Render a progress bar Render song information and embed a video dvjs/duration \u00b6 Calculate cycle lengths and durations Render a year overview for your data dvjs/el \u00b6 Add a NaNoWriMon to your vault Render a year overview for your data Render multiple tables with tab like buttons dvjs/fileLink \u00b6 List all not referenced attachments dvjs/filter \u00b6 List all not referenced attachments dvjs/flatMap \u00b6 Display or hide dataview queries based on a task selection List most recent meta data value that contains a certain phrase List non existing, linked pages dvjs/func \u00b6 Show an average row on tables for numeric values or durations dvjs/header \u00b6 Display or hide dataview queries based on a task selection Render multiple tables with tab like buttons dvjs/io \u00b6 Search for words in your files content across your vault dvjs/last \u00b6 List most recent meta data value that contains a certain phrase dvjs/limit \u00b6 Calculate waking phase with wake up and go to sleep times Display random images from a path List most recent meta data value that contains a certain phrase dvjs/list \u00b6 Display or hide dataview queries based on a task selection Display random images from a path List all meta data available in your vault List all not referenced attachments List non existing, linked pages Show all photos of the week in a grid dvjs/luxon \u00b6 Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Render a year overview for your data dvjs/map \u00b6 Calculate Sum of working hours for a project Calculate waking phase with wake up and go to sleep times Display random images from a path List all not referenced attachments Render multiple tables with tab like buttons dvjs/mutate \u00b6 Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times List all open projects with a emoji age indicator dvjs/page \u00b6 Add a NaNoWriMon to your vault dvjs/pages \u00b6 Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Colorcode tasks based on meta data Group duplicated meta data fields after their order in file List all meta data available in your vault List all not referenced attachments List all open projects with a emoji age indicator List most recent meta data value that contains a certain phrase Query meta files to construct information out of a folder structure Render a year overview for your data Render multiple tables with tab like buttons Search for words in your files content across your vault Show all birthdays for this month Show all photos of the week in a grid dvjs/sort \u00b6 Calculate Sum of working hours for a project Calculate cycle lengths and durations Display random images from a path Group duplicated meta data fields after their order in file List most recent meta data value that contains a certain phrase List non existing, linked pages dvjs/span \u00b6 List most recent meta data value that contains a certain phrase Render song information and embed a video dvjs/table \u00b6 Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Group duplicated meta data fields after their order in file List all meta data available in your vault List all open projects with a emoji age indicator List non existing, linked pages Query meta files to construct information out of a folder structure Render multiple tables with tab like buttons Search for words in your files content across your vault Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show an average row on tables for numeric values or durations dvjs/taskList \u00b6 Colorcode tasks based on meta data dvjs/tryQuery \u00b6 Plot a Category Series DQL query Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show an average row on tables for numeric values or durations dvjs/view \u00b6 Display meta data values as a tag cloud Render a year overview for your data Show all photos of the week in a grid dvjs/where \u00b6 Display or hide dataview queries based on a task selection Group duplicated meta data fields after their order in file List all open projects with a emoji age indicator List most recent meta data value that contains a certain phrase Render multiple tables with tab like buttons Show all birthdays for this month Show all photos of the week in a grid","title":"Tag Index"},{"location":"tagindex/#tag-index","text":"You're currently viewing the Online Version of the Obsidian Example Vault. This comes with some limitations, first and foremost: Queries do not execute. Due to that, the Query Overviews are unusable, since they are using dataview themselves. For a better user experience, it's recommended to open the vault in Obsidian . To navigate the online version you can either use the search bar at the top or browse through the page tags:","title":"Tag Index"},{"location":"tagindex/#dvcalendar","text":"Basic Calendar Queries","title":"dv/CALENDAR"},{"location":"tagindex/#dvflatten","text":"Example FLATTEN Queries Example GROUP BY Queries Query meta files to construct information out of a folder structure Style dataview table columns Transform date meta data for calculations","title":"dv/FLATTEN"},{"location":"tagindex/#dvfrom","text":"Basic Calendar Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries Limit meta data to a maximal amount List tasks under a heading Query meta files to construct information out of a folder structure Style dataview table columns","title":"dv/FROM"},{"location":"tagindex/#dvlist","text":"Basic Inline Queries Example GROUP BY Queries List bullet points from dailies of a specific date without year","title":"dv/LIST"},{"location":"tagindex/#dvsort","text":"Basic Task Queries List pages with due date and color those overdue","title":"dv/SORT"},{"location":"tagindex/#dvtable","text":"Example FLATTEN Queries Example GROUP BY Queries Limit meta data to a maximal amount List pages with due date and color those overdue Query meta files to construct information out of a folder structure Style dataview table columns Transform date meta data for calculations","title":"dv/TABLE"},{"location":"tagindex/#dvtask","text":"Basic Task Queries List tasks that are due today or a specific day List tasks under a heading","title":"dv/TASK"},{"location":"tagindex/#dvwhere","text":"Basic Calendar Queries Basic Inline Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries List bullet points from dailies of a specific date without year List tasks that are due today or a specific day List tasks under a heading Query meta files to construct information out of a folder structure Transform date meta data for calculations","title":"dv/WHERE"},{"location":"tagindex/#dvall","text":"Mark days that have unfinished todos","title":"dv/all"},{"location":"tagindex/#dvany","text":"Mark days that have unfinished todos","title":"dv/any"},{"location":"tagindex/#dvarray","text":"Show a meta data value for every day of the week","title":"dv/array"},{"location":"tagindex/#dvcalendar_1","text":"Make a holiday planning with a bullet point list and the calendar view Mark days that have unfinished todos Show modified file dates in a calendar view","title":"dv/calendar"},{"location":"tagindex/#dvchoice","text":"Display metadata of a week as emjois (habit tracking) Example GROUP BY Queries Group files by meta data Limit meta data to a maximal amount List pages with due date and color those overdue List the last contact with every person Show a meta data value for every day of the week Sort a table with a custom sort order","title":"dv/choice"},{"location":"tagindex/#dvcontains","text":"Basic Task Queries Example FLATTEN Queries List all files with missing category tag or empty meta data field List all list items containing a certain tag List contacts with a person List pages that share a meta data value with the current page List tasks that are due today or a specific day Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show list items containing a certain tag","title":"dv/contains"},{"location":"tagindex/#dvdataviewjs","text":"Add a NaNoWriMon to your vault Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Colorcode tasks based on meta data Display meta data values as a tag cloud Display or hide dataview queries based on a task selection Display random images from a path Group duplicated meta data fields after their order in file List all meta data available in your vault List all not referenced attachments List all open projects with a emoji age indicator List non existing, linked pages Query meta files to construct information out of a folder structure Render a progress bar Render a year overview for your data Render multiple tables with tab like buttons Render song information and embed a video Search for words in your files content across your vault Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show all photos of the week in a grid Show an average row on tables for numeric values or durations","title":"dv/dataviewjs"},{"location":"tagindex/#dvdate","text":"Example GROUP BY Queries List all open projects with a emoji age indicator List contacts with a person List pages with due date and color those overdue List tasks that are due today or a specific day List tasks under a heading Show projects finished in a specific month or year Transform date meta data for calculations Use daily file names as real dates","title":"dv/date"},{"location":"tagindex/#dvdateformat","text":"List bullet points from dailies of a specific date without year Show a meta data value for every day of the week Show projects finished in a specific month or year","title":"dv/dateformat"},{"location":"tagindex/#dvdefault","text":"Sort a table with a custom sort order","title":"dv/default"},{"location":"tagindex/#dvembed","text":"Display images in a dataview table","title":"dv/embed"},{"location":"tagindex/#dvfilter","text":"Query meta files to construct information out of a folder structure Show all list items under a specific heading Show two meta data fields in same table column","title":"dv/filter"},{"location":"tagindex/#dvflatten_1","text":"Calculate waking phase with wake up and go to sleep times Group list of files by metadata List all list items containing a certain tag List all list items with a certain word List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates","title":"dv/flatten"},{"location":"tagindex/#dvfrom_1","text":"Basic List Queries Basic Table Queries Calculate waking phase with wake up and go to sleep times Display images in a dataview table Display metadata of a week as emjois (habit tracking) Get a link to the previous daily (not necessarily yesterday) Get latest open tasks Group files by meta data Group list of files by metadata How to create custom outputs in queries List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List all open projects with a emoji age indicator List all tasks with a custom status List contacts with a person List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Remove a suffix from listed file names Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all birthdays for this month Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order","title":"dv/from"},{"location":"tagindex/#dvgroupby","text":"Basic List Queries Basic Table Queries Basic Task Queries Example FLATTEN Queries Example GROUP BY Queries Group files by meta data Group list of files by metadata List all list items with a certain word List all tasks with a custom status List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Plot a Category Series DQL query Plot a Series Category Value DQL Query Query meta files to construct information out of a folder structure Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items containing a certain tag Show projects finished in a specific month or year Sort a table with a custom sort order","title":"dv/groupby"},{"location":"tagindex/#dvicontains","text":"List all list items with a certain word Show all list items with a certain word as a table","title":"dv/icontains"},{"location":"tagindex/#dvinline","text":"Basic Inline Queries List most recent meta data value that contains a certain phrase Render a progress bar Show all birthdays for this month","title":"dv/inline"},{"location":"tagindex/#dvinlinejs","text":"Basic Inline Queries","title":"dv/inlinejs"},{"location":"tagindex/#dvjoin","text":"Group list of files by metadata Limit meta data to a maximal amount List contacts with a person Show a meta data value for every day of the week","title":"dv/join"},{"location":"tagindex/#dvlength","text":"Example GROUP BY Queries Limit meta data to a maximal amount List all files with missing category tag or empty meta data field List pages that share a meta data value with the current page Query meta files to construct information out of a folder structure","title":"dv/length"},{"location":"tagindex/#dvlimit","text":"Calculate waking phase with wake up and go to sleep times Get a link to the previous daily (not necessarily yesterday) Get latest open tasks List all tasks with a custom status List contacts with a person List most recent meta data value that contains a certain phrase","title":"dv/limit"},{"location":"tagindex/#dvlink","text":"Display images in a dataview table Query meta files to construct information out of a folder structure Remove a suffix from listed file names Show a meta data value for every day of the week","title":"dv/link"},{"location":"tagindex/#dvlist_1","text":"Basic List Queries Get a link to the previous daily (not necessarily yesterday) Group list of files by metadata How to create custom outputs in queries Limit meta data to a maximal amount List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase Make a holiday planning with a bullet point list and the calendar view Remove a suffix from listed file names Show a meta data value for every day of the week Show all birthdays for this month Use daily file names as real dates","title":"dv/list"},{"location":"tagindex/#dvmap","text":"Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos","title":"dv/map"},{"location":"tagindex/#dvmax","text":"List the last contact with every person","title":"dv/max"},{"location":"tagindex/#dvmeta","text":"Display images in a dataview table Example FLATTEN Queries List tasks under a heading Show all list items under a specific heading with a metadata field Show all list items under a specific heading","title":"dv/meta"},{"location":"tagindex/#dvmin","text":"List contacts with a person List the last contact with every person","title":"dv/min"},{"location":"tagindex/#dvnumber","text":"Mark all days in a calendar where you spent a certain amount of money","title":"dv/number"},{"location":"tagindex/#dvregexreplace","text":"Mark all days in a calendar where you spent a certain amount of money Remove a suffix from listed file names Show list items as table with their metadata and sections Transform date meta data for calculations Use daily file names as real dates","title":"dv/regexreplace"},{"location":"tagindex/#dvreplace","text":"Transform date meta data for calculations","title":"dv/replace"},{"location":"tagindex/#dvround","text":"Example FLATTEN Queries Example GROUP BY Queries Mark all days in a calendar where you spent a certain amount of money Render a progress bar","title":"dv/round"},{"location":"tagindex/#dvsort_1","text":"Basic List Queries Basic Table Queries Get a link to the previous daily (not necessarily yesterday) Get latest open tasks List all tasks with a custom status List contacts with a person List most recent meta data value that contains a certain phrase List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Plot a Category Series DQL query Plot a Series Category Value DQL Query Show a meta data value for every day of the week Show list items as table with their metadata and sections Sort a table with a custom sort order","title":"dv/sort"},{"location":"tagindex/#dvsplit","text":"Limit meta data to a maximal amount Query meta files to construct information out of a folder structure Show a meta data value for every day of the week","title":"dv/split"},{"location":"tagindex/#dvstring","text":"Show a meta data value for every day of the week","title":"dv/string"},{"location":"tagindex/#dvsum","text":"Mark all days in a calendar where you spent a certain amount of money Plot a Category Series DQL query","title":"dv/sum"},{"location":"tagindex/#dvtable_1","text":"Basic Table Queries Calculate waking phase with wake up and go to sleep times Display images in a dataview table Display metadata of a week as emjois (habit tracking) Group files by meta data List all open projects with a emoji age indicator List contacts with a person List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Mark all days in a calendar where you spent a certain amount of money Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items as table with their metadata and sections Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates","title":"dv/table"},{"location":"tagindex/#dvtask_1","text":"Get latest open tasks List all tasks with a custom status","title":"dv/task"},{"location":"tagindex/#dvtypeof","text":"Show a meta data value for every day of the week","title":"dv/typeof"},{"location":"tagindex/#dvwhere_1","text":"Basic List Queries Basic Table Queries Display images in a dataview table Display metadata of a week as emjois (habit tracking) Get a link to the previous daily (not necessarily yesterday) Get latest open tasks Group files by meta data Group list of files by metadata List all files with missing category tag or empty meta data field List all list items containing a certain tag List all list items with a certain word List all open projects with a emoji age indicator List all tasks with a custom status List files or metadata starting with a certain letter List most recent meta data value that contains a certain phrase List non existing, linked pages List pages that share a meta data value with the current page List the last contact with every person Make a holiday planning with a bullet point list and the calendar view Mark all days in a calendar where you spent a certain amount of money Mark days that have unfinished todos Multivalue YAML Frontmatter Field Plot a Category Series DQL query Plot a Series Category Value DQL Query Render a progress bar Show a calendar with all days you've prayed Show a meta data value for every day of the week Show all birthdays for this month Show all list items containing a specific metadata value Show all list items under a specific heading with a metadata field Show all list items under a specific heading Show all list items with a certain word as a table Show list items containing a certain tag Show projects finished in a specific month or year Show two meta data fields in same table column Sort a table with a custom sort order Use daily file names as real dates","title":"dv/where"},{"location":"tagindex/#dvjsarray","text":"Calculate cycle lengths and durations Display random images from a path List all meta data available in your vault List all not referenced attachments List most recent meta data value that contains a certain phrase Query meta files to construct information out of a folder structure","title":"dvjs/array"},{"location":"tagindex/#dvjscontainer","text":"Render multiple tables with tab like buttons Show all photos of the week in a grid","title":"dvjs/container"},{"location":"tagindex/#dvjscurrent","text":"Add a NaNoWriMon to your vault Display or hide dataview queries based on a task selection Render a progress bar Render song information and embed a video","title":"dvjs/current"},{"location":"tagindex/#dvjsduration","text":"Calculate cycle lengths and durations Render a year overview for your data","title":"dvjs/duration"},{"location":"tagindex/#dvjsel","text":"Add a NaNoWriMon to your vault Render a year overview for your data Render multiple tables with tab like buttons","title":"dvjs/el"},{"location":"tagindex/#dvjsfilelink","text":"List all not referenced attachments","title":"dvjs/fileLink"},{"location":"tagindex/#dvjsfilter","text":"List all not referenced attachments","title":"dvjs/filter"},{"location":"tagindex/#dvjsflatmap","text":"Display or hide dataview queries based on a task selection List most recent meta data value that contains a certain phrase List non existing, linked pages","title":"dvjs/flatMap"},{"location":"tagindex/#dvjsfunc","text":"Show an average row on tables for numeric values or durations","title":"dvjs/func"},{"location":"tagindex/#dvjsheader","text":"Display or hide dataview queries based on a task selection Render multiple tables with tab like buttons","title":"dvjs/header"},{"location":"tagindex/#dvjsio","text":"Search for words in your files content across your vault","title":"dvjs/io"},{"location":"tagindex/#dvjslast","text":"List most recent meta data value that contains a certain phrase","title":"dvjs/last"},{"location":"tagindex/#dvjslimit","text":"Calculate waking phase with wake up and go to sleep times Display random images from a path List most recent meta data value that contains a certain phrase","title":"dvjs/limit"},{"location":"tagindex/#dvjslist","text":"Display or hide dataview queries based on a task selection Display random images from a path List all meta data available in your vault List all not referenced attachments List non existing, linked pages Show all photos of the week in a grid","title":"dvjs/list"},{"location":"tagindex/#dvjsluxon","text":"Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Render a year overview for your data","title":"dvjs/luxon"},{"location":"tagindex/#dvjsmap","text":"Calculate Sum of working hours for a project Calculate waking phase with wake up and go to sleep times Display random images from a path List all not referenced attachments Render multiple tables with tab like buttons","title":"dvjs/map"},{"location":"tagindex/#dvjsmutate","text":"Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times List all open projects with a emoji age indicator","title":"dvjs/mutate"},{"location":"tagindex/#dvjspage","text":"Add a NaNoWriMon to your vault","title":"dvjs/page"},{"location":"tagindex/#dvjspages","text":"Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Colorcode tasks based on meta data Group duplicated meta data fields after their order in file List all meta data available in your vault List all not referenced attachments List all open projects with a emoji age indicator List most recent meta data value that contains a certain phrase Query meta files to construct information out of a folder structure Render a year overview for your data Render multiple tables with tab like buttons Search for words in your files content across your vault Show all birthdays for this month Show all photos of the week in a grid","title":"dvjs/pages"},{"location":"tagindex/#dvjssort","text":"Calculate Sum of working hours for a project Calculate cycle lengths and durations Display random images from a path Group duplicated meta data fields after their order in file List most recent meta data value that contains a certain phrase List non existing, linked pages","title":"dvjs/sort"},{"location":"tagindex/#dvjsspan","text":"List most recent meta data value that contains a certain phrase Render song information and embed a video","title":"dvjs/span"},{"location":"tagindex/#dvjstable","text":"Calculate Sum of working hours for a project Calculate cycle lengths and durations Calculate waking phase with wake up and go to sleep times Group duplicated meta data fields after their order in file List all meta data available in your vault List all open projects with a emoji age indicator List non existing, linked pages Query meta files to construct information out of a folder structure Render multiple tables with tab like buttons Search for words in your files content across your vault Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show an average row on tables for numeric values or durations","title":"dvjs/table"},{"location":"tagindex/#dvjstasklist","text":"Colorcode tasks based on meta data","title":"dvjs/taskList"},{"location":"tagindex/#dvjstryquery","text":"Plot a Category Series DQL query Show a Goals Overview with progress bars for included projects and overall progress Show a sum row for numeric values and durations Show an average row on tables for numeric values or durations","title":"dvjs/tryQuery"},{"location":"tagindex/#dvjsview","text":"Display meta data values as a tag cloud Render a year overview for your data Show all photos of the week in a grid","title":"dvjs/view"},{"location":"tagindex/#dvjswhere","text":"Display or hide dataview queries based on a task selection Group duplicated meta data fields after their order in file List all open projects with a emoji age indicator List most recent meta data value that contains a certain phrase Render multiple tables with tab like buttons Show all birthdays for this month Show all photos of the week in a grid","title":"dvjs/where"}]}